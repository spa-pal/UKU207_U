; generated by ARM C/C++ Compiler, 4.1 [Build 644]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\EXE\sacred_sun.o --asm_dir=.\ --list_dir=.\ --depend=.\EXE\sacred_sun.d --feedback=.\EXE\UKU_220_IPS_TERMOKOMPENSAT.fed --cpu=Cortex-M3 --apcs=interwork -O1 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx -D__MICROLIB -DUKU_220_IPS_TERMOKOMPENSAT -DUKU2071x -DUKU_ZVU --omf_browse=.\EXE\sacred_sun.crf sacred_sun.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  sacred_san_bat_hndl PROC
;;;11     
;;;12     void sacred_san_bat_hndl(void)
000000  b570              PUSH     {r4-r6,lr}
;;;13     {
000002  b086              SUB      sp,sp,#0x18
;;;14     
;;;15     if(portForSacredSunBatteryIsInitiated==0)
000004  4c1e              LDR      r4,|L1.128|
;;;16     	{
;;;17     	UARTInit(0, 1200);	/* baud rate setting */
;;;18     	portForSacredSunBatteryIsInitiated=1;
000006  2601              MOVS     r6,#1
000008  7820              LDRB     r0,[r4,#0]            ;15  ; portForSacredSunBatteryIsInitiated
00000a  b928              CBNZ     r0,|L1.24|
00000c  f44f6196          MOV      r1,#0x4b0             ;17
000010  2000              MOVS     r0,#0                 ;17
000012  f7fffffe          BL       UARTInit
000016  7026              STRB     r6,[r4,#0]
                  |L1.24|
;;;19     	}
;;;20     
;;;21     sacredSunBatteryHndlPhase++;
000018  7860              LDRB     r0,[r4,#1]  ; sacredSunBatteryHndlPhase
00001a  f1000001          ADD      r0,r0,#1
00001e  b2c0              UXTB     r0,r0
000020  7060              STRB     r0,[r4,#1]
000022  f04f0500          MOV      r5,#0                 ;15
;;;22     
;;;23     if(sacredSunBatteryHndlPhase==5)
000026  2805              CMP      r0,#5
000028  d016              BEQ      |L1.88|
;;;24     	{
;;;25     	char sacredSunButteryOutBuff[]={0x7e,0x32,0x35,0x30,0x31,0x34,0x36,0x34,0x32,0x45,0x30,0x30,0x32,0x30,0x31,0x46,0x44,0x33,0x30,0x0d};
;;;26     	uart_out_buff0(sacredSunButteryOutBuff,20);
;;;27     	sacredSunRequestPhase=0;
;;;28     
;;;29     	if(sacredSunSilentCnt<10) sacredSunSilentCnt++;
;;;30     	
;;;31     	}
;;;32     else if(sacredSunBatteryHndlPhase==10)
00002a  280a              CMP      r0,#0xa
00002c  d112              BNE      |L1.84|
;;;33     	{
;;;34     	char sacredSunButteryOutBuff[]={0x7e,0x32,0x35,0x30,0x31,0x34,0x36,0x34,0x34,0x45,0x30,0x30,0x32,0x30,0x31,0x46,0x44,0x32,0x45,0x0d};
00002e  f04f0214          MOV      r2,#0x14
000032  a114              ADR      r1,|L1.132|
000034  a801              ADD      r0,sp,#4
000036  f7fffffe          BL       __aeabi_memcpy4
;;;35     	uart_out_buff0(sacredSunButteryOutBuff,20);
00003a  2114              MOVS     r1,#0x14
00003c  a801              ADD      r0,sp,#4
00003e  f7fffffe          BL       uart_out_buff0
;;;36     	sacredSunRequestPhase=1;
000042  70a6              STRB     r6,[r4,#2]
;;;37     	sacredSunBatteryHndlPhase=0;
000044  7065              STRB     r5,[r4,#1]
;;;38     
;;;39     	if(sacredSunSilentCnt<10) sacredSunSilentCnt++;
000046  f9b40004          LDRSH    r0,[r4,#4]  ; sacredSunSilentCnt
00004a  280a              CMP      r0,#0xa
00004c  da02              BGE      |L1.84|
00004e  f1000001          ADD      r0,r0,#1
000052  80a0              STRH     r0,[r4,#4]
                  |L1.84|
;;;40     
;;;41     	}
;;;42     
;;;43     }
000054  b006              ADD      sp,sp,#0x18
000056  bd70              POP      {r4-r6,pc}
                  |L1.88|
000058  f04f0214          MOV      r2,#0x14              ;25
00005c  a10e              ADR      r1,|L1.152|
00005e  a801              ADD      r0,sp,#4              ;25
000060  f7fffffe          BL       __aeabi_memcpy4
000064  2114              MOVS     r1,#0x14              ;26
000066  a801              ADD      r0,sp,#4              ;26
000068  f7fffffe          BL       uart_out_buff0
00006c  70a5              STRB     r5,[r4,#2]            ;27
00006e  f9b40004          LDRSH    r0,[r4,#4]            ;29  ; sacredSunSilentCnt
000072  280a              CMP      r0,#0xa               ;29
000074  daee              BGE      |L1.84|
000076  f1000001          ADD      r0,r0,#1              ;29
00007a  80a0              STRH     r0,[r4,#4]            ;29
00007c  e7ea              B        |L1.84|
;;;44     
                          ENDP

00007e  0000              DCW      0x0000
                  |L1.128|
                          DCD      ||.data||
                  |L1.132|
000084  7e323530          DCB      "~25014644E00201FD2E\r"
000088  31343634
00008c  34453030
000090  32303146
000094  4432450d
                  |L1.152|
000098  7e323530          DCB      "~25014642E00201FD30\r"
00009c  31343634
0000a0  32453030
0000a4  32303146
0000a8  4433300d

                          AREA ||area_number.2||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.2||, ||.text||
                  ascii2halFhex PROC
;;;11     
;;;12     void sacred_san_bat_hndl(void)
000000  b510              PUSH     {r4,lr}
;;;13     {
000002  4604              MOV      r4,r0
;;;14     
;;;15     if(portForSacredSunBatteryIsInitiated==0)
000004  4620              MOV      r0,r4
;;;16     	{
;;;17     	UARTInit(0, 1200);	/* baud rate setting */
;;;18     	portForSacredSunBatteryIsInitiated=1;
000006  f7fffffe          BL       isalnum
00000a  2800              CMP      r0,#0                 ;15
00000c  d005              BEQ      |L2.26|
00000e  4620              MOV      r0,r4                 ;17
000010  f7fffffe          BL       isdigit
000014  b110              CBZ      r0,|L2.28|
000016  f1a40030          SUB      r0,r4,#0x30
                  |L2.26|
;;;19     	}
;;;20     
;;;21     sacredSunBatteryHndlPhase++;
00001a  bd10              POP      {r4,pc}
                  |L2.28|
00001c  4620              MOV      r0,r4
00001e  f7fffffe          BL       islower
000022  b110              CBZ      r0,|L2.42|
000024  f1a40057          SUB      r0,r4,#0x57           ;15
                  |L2.40|
;;;22     
;;;23     if(sacredSunBatteryHndlPhase==5)
000028  bd10              POP      {r4,pc}
                  |L2.42|
;;;24     	{
;;;25     	char sacredSunButteryOutBuff[]={0x7e,0x32,0x35,0x30,0x31,0x34,0x36,0x34,0x32,0x45,0x30,0x30,0x32,0x30,0x31,0x46,0x44,0x33,0x30,0x0d};
;;;26     	uart_out_buff0(sacredSunButteryOutBuff,20);
;;;27     	sacredSunRequestPhase=0;
;;;28     
;;;29     	if(sacredSunSilentCnt<10) sacredSunSilentCnt++;
;;;30     	
;;;31     	}
;;;32     else if(sacredSunBatteryHndlPhase==10)
00002a  4620              MOV      r0,r4
00002c  f7fffffe          BL       isupper
;;;33     	{
;;;34     	char sacredSunButteryOutBuff[]={0x7e,0x32,0x35,0x30,0x31,0x34,0x36,0x34,0x34,0x45,0x30,0x30,0x32,0x30,0x31,0x46,0x44,0x32,0x45,0x0d};
000030  2800              CMP      r0,#0
000032  d0f9              BEQ      |L2.40|
000034  f1a40037          SUB      r0,r4,#0x37
000038  bd10              POP      {r4,pc}
;;;35     	uart_out_buff0(sacredSunButteryOutBuff,20);
;;;36     	sacredSunRequestPhase=1;
;;;37     	sacredSunBatteryHndlPhase=0;
;;;38     
;;;39     	if(sacredSunSilentCnt<10) sacredSunSilentCnt++;
;;;40     
;;;41     	}
;;;42     
;;;43     }
;;;44     
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  liBatteryInBuff
                          %        400

                          AREA ||.data||, DATA, ALIGN=1

                  portForSacredSunBatteryIsInitiated
000000  00                DCB      0x00
                  sacredSunBatteryHndlPhase
000001  00                DCB      0x00
                  sacredSunRequestPhase
000002  0000              DCB      0x00,0x00
                  sacredSunSilentCnt
000004  0000              DCB      0x00,0x00
