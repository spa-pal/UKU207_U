; generated by ARM C/C++ Compiler, 4.1 [Build 644]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\EXE\lcd_agm1232_uku207_3.o --asm_dir=.\ --list_dir=.\ --depend=.\EXE\lcd_agm1232_uku207_3.d --feedback=.\EXE\UKU_220_IPS_TERMOKOMPENSAT.fed --cpu=Cortex-M3 --apcs=interwork -O1 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx -D__MICROLIB -DUKU_220_IPS_TERMOKOMPENSAT -DUKU2071x -DUKU_ZVU --omf_browse=.\EXE\lcd_agm1232_uku207_3.crf lcd_AGM1232_uku207_3.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  lcd1_chk PROC
;;;8      //-----------------------------------------------
;;;9      void lcd1_chk(void)
000000  48ff              LDR      r0,|L1.1024|
;;;10     {
;;;11     LPC_GPIO1->FIODIR&=(~((1<<D0)|(1<<D1)|(1<<D2)|(1<<D3)|(1<<D4)|(1<<D5)|(1<<D6)|(1<<D7)));
000002  6a01              LDR      r1,[r0,#0x20]
000004  f021517f          BIC      r1,r1,#0x3fc00000
000008  6201              STR      r1,[r0,#0x20]
;;;12     LPC_GPIO1->FIOSET|=(1<<RW);
00000a  6b81              LDR      r1,[r0,#0x38]
00000c  f4411100          ORR      r1,r1,#0x200000
000010  6381              STR      r1,[r0,#0x38]
;;;13     
;;;14     __nop();
000012  bf00              NOP      
;;;15     __nop();
000014  bf00              NOP      
;;;16     __nop();
000016  bf00              NOP      
;;;17     __nop();
000018  bf00              NOP      
;;;18     __nop();
00001a  bf00              NOP      
;;;19     __nop();
00001c  bf00              NOP      
;;;20     __nop();
00001e  bf00              NOP      
;;;21     __nop();
000020  bf00              NOP      
;;;22     __nop();
000022  bf00              NOP      
;;;23     __nop();
000024  bf00              NOP      
;;;24     
;;;25     LPC_GPIO1->FIOCLR|=(1<<A0);
000026  6bc1              LDR      r1,[r0,#0x3c]
000028  f4412180          ORR      r1,r1,#0x40000
00002c  63c1              STR      r1,[r0,#0x3c]
;;;26     
;;;27     __nop();
00002e  bf00              NOP      
;;;28     __nop();
000030  bf00              NOP      
;;;29     __nop();
000032  bf00              NOP      
;;;30     __nop();
000034  bf00              NOP      
;;;31     __nop();
000036  bf00              NOP      
;;;32     __nop();
000038  bf00              NOP      
;;;33     __nop();
00003a  bf00              NOP      
;;;34     __nop();
00003c  bf00              NOP      
;;;35     __nop();
00003e  bf00              NOP      
;;;36     __nop();
000040  bf00              NOP      
;;;37     
;;;38     LPC_GPIO1->FIOSET|=(1<<E1);
000042  6b81              LDR      r1,[r0,#0x38]
000044  f4412100          ORR      r1,r1,#0x80000
000048  6381              STR      r1,[r0,#0x38]
                  |L1.74|
;;;39     
;;;40     chk1:
;;;41     
;;;42     if(LPC_GPIO1->FIOPIN&(1<<D7)) goto chk1;
00004a  6b41              LDR      r1,[r0,#0x34]
00004c  0089              LSLS     r1,r1,#2
00004e  d4fc              BMI      |L1.74|
;;;43     
;;;44     }
000050  4770              BX       lr
;;;45     
                          ENDP

                  lcd2_chk PROC
;;;46     //-----------------------------------------------
;;;47     void lcd2_chk(void)
000052  48eb              LDR      r0,|L1.1024|
;;;48     {
;;;49     LPC_GPIO1->FIODIR&=(~((1<<D0)|(1<<D1)|(1<<D2)|(1<<D3)|(1<<D4)|(1<<D5)|(1<<D6)|(1<<D7)));
000054  6a01              LDR      r1,[r0,#0x20]
000056  f021517f          BIC      r1,r1,#0x3fc00000
00005a  6201              STR      r1,[r0,#0x20]
;;;50     LPC_GPIO1->FIOSET|=(1<<RW);
00005c  6b81              LDR      r1,[r0,#0x38]
00005e  f4411100          ORR      r1,r1,#0x200000
000062  6381              STR      r1,[r0,#0x38]
;;;51     
;;;52     __nop();
000064  bf00              NOP      
;;;53     __nop();
000066  bf00              NOP      
;;;54     __nop();
000068  bf00              NOP      
;;;55     __nop();
00006a  bf00              NOP      
;;;56     __nop();
00006c  bf00              NOP      
;;;57     __nop();
00006e  bf00              NOP      
;;;58     __nop();
000070  bf00              NOP      
;;;59     __nop();
000072  bf00              NOP      
;;;60     __nop();
000074  bf00              NOP      
;;;61     __nop();
000076  bf00              NOP      
;;;62     
;;;63     LPC_GPIO1->FIOCLR|=(1<<A0);
000078  6bc1              LDR      r1,[r0,#0x3c]
00007a  f4412180          ORR      r1,r1,#0x40000
00007e  63c1              STR      r1,[r0,#0x3c]
;;;64     
;;;65     __nop();
000080  bf00              NOP      
;;;66     __nop();
000082  bf00              NOP      
;;;67     __nop();
000084  bf00              NOP      
;;;68     __nop();
000086  bf00              NOP      
;;;69     __nop();
000088  bf00              NOP      
;;;70     __nop();
00008a  bf00              NOP      
;;;71     __nop();
00008c  bf00              NOP      
;;;72     __nop();
00008e  bf00              NOP      
;;;73     __nop();
000090  bf00              NOP      
;;;74     __nop();
000092  bf00              NOP      
;;;75     
;;;76     LPC_GPIO1->FIOSET|=(1<<E2);
000094  6b81              LDR      r1,[r0,#0x38]
000096  f4411180          ORR      r1,r1,#0x100000
00009a  6381              STR      r1,[r0,#0x38]
                  |L1.156|
;;;77     
;;;78     chk2:
;;;79     
;;;80     if(LPC_GPIO1->FIOPIN&(1<<D7)) goto chk2;
00009c  6b41              LDR      r1,[r0,#0x34]
00009e  0089              LSLS     r1,r1,#2
0000a0  d4fc              BMI      |L1.156|
;;;81     
;;;82     }
0000a2  4770              BX       lr
;;;83     
                          ENDP

                  lcd1_wr PROC
;;;84     //-----------------------------------------------
;;;85     void lcd1_wr(char in)
0000a4  b500              PUSH     {lr}
;;;86     {
0000a6  4603              MOV      r3,r0
;;;87     
;;;88     LPC_GPIO1->FIODIR|=((1UL<<A0)|(1UL<<E1)|(1UL<<RW));
0000a8  4ad5              LDR      r2,|L1.1024|
0000aa  6a10              LDR      r0,[r2,#0x20]
0000ac  f4401030          ORR      r0,r0,#0x2c0000
0000b0  6210              STR      r0,[r2,#0x20]
;;;89     
;;;90     lcd1_chk();
0000b2  f7fffffe          BL       lcd1_chk
;;;91     
;;;92     __nop();
0000b6  bf00              NOP      
;;;93     __nop();
0000b8  bf00              NOP      
;;;94     __nop();
0000ba  bf00              NOP      
;;;95     __nop();
0000bc  bf00              NOP      
;;;96     __nop();
0000be  bf00              NOP      
;;;97     __nop();
0000c0  bf00              NOP      
;;;98     __nop();
0000c2  bf00              NOP      
;;;99     __nop();
0000c4  bf00              NOP      
;;;100    __nop();
0000c6  bf00              NOP      
;;;101    __nop();
0000c8  bf00              NOP      
;;;102    
;;;103    LPC_GPIO1->FIOCLR|=(1UL<<A0);
0000ca  6bd0              LDR      r0,[r2,#0x3c]
0000cc  f4402080          ORR      r0,r0,#0x40000
0000d0  63d0              STR      r0,[r2,#0x3c]
;;;104    
;;;105    __nop();
0000d2  bf00              NOP      
;;;106    __nop();
0000d4  bf00              NOP      
;;;107    __nop();
0000d6  bf00              NOP      
;;;108    __nop();
0000d8  bf00              NOP      
;;;109    __nop();
0000da  bf00              NOP      
;;;110    __nop();
0000dc  bf00              NOP      
;;;111    __nop();
0000de  bf00              NOP      
;;;112    __nop();
0000e0  bf00              NOP      
;;;113    __nop();
0000e2  bf00              NOP      
;;;114    __nop();
0000e4  bf00              NOP      
;;;115    
;;;116    LPC_GPIO1->FIOCLR|=(1UL<<RW);
0000e6  6bd0              LDR      r0,[r2,#0x3c]
0000e8  f4401000          ORR      r0,r0,#0x200000
0000ec  63d0              STR      r0,[r2,#0x3c]
;;;117    
;;;118    __nop();
0000ee  bf00              NOP      
;;;119    __nop();
0000f0  bf00              NOP      
;;;120    __nop();
0000f2  bf00              NOP      
;;;121    __nop();
0000f4  bf00              NOP      
;;;122    __nop();
0000f6  bf00              NOP      
;;;123    __nop();
0000f8  bf00              NOP      
;;;124    __nop();
0000fa  bf00              NOP      
;;;125    __nop();
0000fc  bf00              NOP      
;;;126    __nop();
0000fe  bf00              NOP      
;;;127    __nop();
000100  bf00              NOP      
;;;128    
;;;129    LPC_GPIO1->FIODIR|=((1<<D0)|(1<<D1)|(1<<D2)|(1<<D3)|(1<<D4)|(1<<D5)|(1<<D6)|(1<<D7));
000102  6a10              LDR      r0,[r2,#0x20]
000104  f040507f          ORR      r0,r0,#0x3fc00000
000108  6210              STR      r0,[r2,#0x20]
;;;130    LPC_GPIO1->FIOSET|=(((long)in)<<D0);
00010a  6b90              LDR      r0,[r2,#0x38]
00010c  ea405083          ORR      r0,r0,r3,LSL #22
000110  6390              STR      r0,[r2,#0x38]
;;;131    LPC_GPIO1->FIOCLR|=(((long)(~in))<<D0)&(0xffUL<<D0);
000112  6bd0              LDR      r0,[r2,#0x3c]
000114  ea6f0103          MVN      r1,r3
000118  b2c9              UXTB     r1,r1
00011a  ea405081          ORR      r0,r0,r1,LSL #22
00011e  63d0              STR      r0,[r2,#0x3c]
;;;132    
;;;133    __nop();
000120  bf00              NOP      
;;;134    __nop();
000122  bf00              NOP      
;;;135    __nop();
000124  bf00              NOP      
;;;136    __nop();
000126  bf00              NOP      
;;;137    __nop();
000128  bf00              NOP      
;;;138    __nop();
00012a  bf00              NOP      
;;;139    __nop();
00012c  bf00              NOP      
;;;140    __nop();
00012e  bf00              NOP      
;;;141    __nop();
000130  bf00              NOP      
;;;142    __nop();
000132  bf00              NOP      
;;;143    
;;;144    LPC_GPIO1->FIOCLR|=(1<<E1);
000134  6bd0              LDR      r0,[r2,#0x3c]
000136  f4402000          ORR      r0,r0,#0x80000
00013a  63d0              STR      r0,[r2,#0x3c]
;;;145    
;;;146    __nop();
00013c  bf00              NOP      
;;;147    __nop();
00013e  bf00              NOP      
;;;148    __nop();
000140  bf00              NOP      
;;;149    __nop();
000142  bf00              NOP      
;;;150    __nop();
000144  bf00              NOP      
;;;151    __nop();
000146  bf00              NOP      
;;;152    __nop();
000148  bf00              NOP      
;;;153    __nop();
00014a  bf00              NOP      
;;;154    __nop();
00014c  bf00              NOP      
;;;155    __nop();
00014e  bf00              NOP      
;;;156    
;;;157    }
000150  bd00              POP      {pc}
;;;158    
                          ENDP

                  lcd2_wr PROC
;;;161    //-----------------------------------------------
;;;162    void lcd2_wr(char in)
000152  b500              PUSH     {lr}
;;;163    {
000154  4603              MOV      r3,r0
;;;164    
;;;165    LPC_GPIO1->FIODIR|=(1<<A0);
000156  4aaa              LDR      r2,|L1.1024|
000158  6a10              LDR      r0,[r2,#0x20]
00015a  f4402080          ORR      r0,r0,#0x40000
00015e  6210              STR      r0,[r2,#0x20]
;;;166    LPC_GPIO1->FIODIR|=((1<<RW)|(1<<E2));
000160  6a10              LDR      r0,[r2,#0x20]
000162  f4401040          ORR      r0,r0,#0x300000
000166  6210              STR      r0,[r2,#0x20]
;;;167    
;;;168    
;;;169    lcd2_chk();
000168  f7fffffe          BL       lcd2_chk
;;;170         
;;;171    __nop();
00016c  bf00              NOP      
;;;172    __nop();
00016e  bf00              NOP      
;;;173    __nop();
000170  bf00              NOP      
;;;174    __nop();
000172  bf00              NOP      
;;;175    __nop();
000174  bf00              NOP      
;;;176    __nop();
000176  bf00              NOP      
;;;177    __nop();
000178  bf00              NOP      
;;;178    __nop();
00017a  bf00              NOP      
;;;179    __nop();
00017c  bf00              NOP      
;;;180    __nop();
00017e  bf00              NOP      
;;;181    
;;;182    LPC_GPIO1->FIOCLR|=(1<<A0);
000180  6bd0              LDR      r0,[r2,#0x3c]
000182  f4402080          ORR      r0,r0,#0x40000
000186  63d0              STR      r0,[r2,#0x3c]
;;;183    
;;;184    __nop();
000188  bf00              NOP      
;;;185    __nop();
00018a  bf00              NOP      
;;;186    __nop();
00018c  bf00              NOP      
;;;187    __nop();
00018e  bf00              NOP      
;;;188    __nop();
000190  bf00              NOP      
;;;189    __nop();
000192  bf00              NOP      
;;;190    __nop();
000194  bf00              NOP      
;;;191    __nop();
000196  bf00              NOP      
;;;192    __nop();
000198  bf00              NOP      
;;;193    __nop();
00019a  bf00              NOP      
;;;194    
;;;195    LPC_GPIO1->FIOCLR|=(1<<RW);
00019c  6bd0              LDR      r0,[r2,#0x3c]
00019e  f4401000          ORR      r0,r0,#0x200000
0001a2  63d0              STR      r0,[r2,#0x3c]
;;;196    
;;;197    __nop();
0001a4  bf00              NOP      
;;;198    __nop();
0001a6  bf00              NOP      
;;;199    __nop();
0001a8  bf00              NOP      
;;;200    __nop();
0001aa  bf00              NOP      
;;;201    __nop();
0001ac  bf00              NOP      
;;;202    __nop();
0001ae  bf00              NOP      
;;;203    __nop();
0001b0  bf00              NOP      
;;;204    __nop();
0001b2  bf00              NOP      
;;;205    __nop();
0001b4  bf00              NOP      
;;;206    __nop();
0001b6  bf00              NOP      
;;;207    
;;;208    LPC_GPIO1->FIODIR|=((1<<D0)|(1<<D1)|(1<<D2)|(1<<D3)|(1<<D4)|(1<<D5)|(1<<D6)|(1<<D7));
0001b8  6a10              LDR      r0,[r2,#0x20]
0001ba  f040507f          ORR      r0,r0,#0x3fc00000
0001be  6210              STR      r0,[r2,#0x20]
;;;209    LPC_GPIO1->FIOSET|=(((long)in)<<D0);
0001c0  6b90              LDR      r0,[r2,#0x38]
0001c2  ea405083          ORR      r0,r0,r3,LSL #22
0001c6  6390              STR      r0,[r2,#0x38]
;;;210    LPC_GPIO1->FIOCLR|=(((long)(~in))<<D0)&(0xffUL<<D0);
0001c8  6bd0              LDR      r0,[r2,#0x3c]
0001ca  ea6f0103          MVN      r1,r3
0001ce  b2c9              UXTB     r1,r1
0001d0  ea405081          ORR      r0,r0,r1,LSL #22
0001d4  63d0              STR      r0,[r2,#0x3c]
;;;211    
;;;212    __nop();
0001d6  bf00              NOP      
;;;213    __nop();
0001d8  bf00              NOP      
;;;214    __nop();
0001da  bf00              NOP      
;;;215    __nop();
0001dc  bf00              NOP      
;;;216    __nop();
0001de  bf00              NOP      
;;;217    __nop();
0001e0  bf00              NOP      
;;;218    __nop();
0001e2  bf00              NOP      
;;;219    __nop();
0001e4  bf00              NOP      
;;;220    __nop();
0001e6  bf00              NOP      
;;;221    __nop();
0001e8  bf00              NOP      
;;;222    
;;;223    LPC_GPIO1->FIOCLR|=(1<<E2);
0001ea  6bd0              LDR      r0,[r2,#0x3c]
0001ec  f4401080          ORR      r0,r0,#0x100000
0001f0  63d0              STR      r0,[r2,#0x3c]
;;;224    
;;;225    __nop();
0001f2  bf00              NOP      
;;;226    __nop();
0001f4  bf00              NOP      
;;;227    __nop();
0001f6  bf00              NOP      
;;;228    __nop();
0001f8  bf00              NOP      
;;;229    __nop();
0001fa  bf00              NOP      
;;;230    __nop();
0001fc  bf00              NOP      
;;;231    __nop();
0001fe  bf00              NOP      
;;;232    __nop();
000200  bf00              NOP      
;;;233    __nop();
000202  bf00              NOP      
;;;234    __nop();
000204  bf00              NOP      
;;;235    
;;;236    }
000206  bd00              POP      {pc}
;;;237    
                          ENDP

                  data1_wr PROC
;;;238    //-----------------------------------------------
;;;239    char data1_wr(char in)
000208  b500              PUSH     {lr}
;;;240    {
00020a  4603              MOV      r3,r0
;;;241    //__disable_irq();
;;;242    LPC_GPIO1->FIODIR|=((1<<A0)|(1<<E1));
00020c  4a7c              LDR      r2,|L1.1024|
00020e  6a10              LDR      r0,[r2,#0x20]
000210  f4402040          ORR      r0,r0,#0xc0000
000214  6210              STR      r0,[r2,#0x20]
;;;243    LPC_GPIO1->FIODIR|=(1<<RW);
000216  6a10              LDR      r0,[r2,#0x20]
000218  f4401000          ORR      r0,r0,#0x200000
00021c  6210              STR      r0,[r2,#0x20]
;;;244    
;;;245    lcd1_chk();
00021e  f7fffffe          BL       lcd1_chk
;;;246    
;;;247    __nop();
000222  bf00              NOP      
;;;248    __nop();
000224  bf00              NOP      
;;;249    __nop();
000226  bf00              NOP      
;;;250    __nop();
000228  bf00              NOP      
;;;251    __nop();
00022a  bf00              NOP      
;;;252    __nop();
00022c  bf00              NOP      
;;;253    __nop();
00022e  bf00              NOP      
;;;254    __nop();
000230  bf00              NOP      
;;;255    __nop();
000232  bf00              NOP      
;;;256    __nop();
000234  bf00              NOP      
;;;257    
;;;258    LPC_GPIO1->FIOSET|=(1<<A0);
000236  6b90              LDR      r0,[r2,#0x38]
000238  f4402080          ORR      r0,r0,#0x40000
00023c  6390              STR      r0,[r2,#0x38]
;;;259    
;;;260    __nop();
00023e  bf00              NOP      
;;;261    __nop();
000240  bf00              NOP      
;;;262    __nop();
000242  bf00              NOP      
;;;263    __nop();
000244  bf00              NOP      
;;;264    __nop();
000246  bf00              NOP      
;;;265    __nop();
000248  bf00              NOP      
;;;266    __nop();
00024a  bf00              NOP      
;;;267    __nop();
00024c  bf00              NOP      
;;;268    __nop();
00024e  bf00              NOP      
;;;269    __nop();
000250  bf00              NOP      
;;;270    
;;;271    LPC_GPIO1->FIOCLR|=(1<<RW);
000252  6bd0              LDR      r0,[r2,#0x3c]
000254  f4401000          ORR      r0,r0,#0x200000
000258  63d0              STR      r0,[r2,#0x3c]
;;;272    
;;;273    __nop();
00025a  bf00              NOP      
;;;274    __nop();
00025c  bf00              NOP      
;;;275    __nop();
00025e  bf00              NOP      
;;;276    __nop();
000260  bf00              NOP      
;;;277    __nop();
000262  bf00              NOP      
;;;278    __nop();
000264  bf00              NOP      
;;;279    __nop();
000266  bf00              NOP      
;;;280    __nop();
000268  bf00              NOP      
;;;281    __nop();
00026a  bf00              NOP      
;;;282    __nop();
00026c  bf00              NOP      
;;;283    
;;;284    LPC_GPIO1->FIODIR|=((1<<D0)|(1<<D1)|(1<<D2)|(1<<D3)|(1<<D4)|(1<<D5)|(1<<D6)|(1<<D7));
00026e  6a10              LDR      r0,[r2,#0x20]
000270  f040507f          ORR      r0,r0,#0x3fc00000
000274  6210              STR      r0,[r2,#0x20]
;;;285    LPC_GPIO1->FIOSET|=(((long)in)<<D0);
000276  6b90              LDR      r0,[r2,#0x38]
000278  ea405083          ORR      r0,r0,r3,LSL #22
00027c  6390              STR      r0,[r2,#0x38]
;;;286    LPC_GPIO1->FIOCLR|=(((long)(~in))<<D0)&(0xffUL<<D0);
00027e  6bd0              LDR      r0,[r2,#0x3c]
000280  ea6f0103          MVN      r1,r3
000284  b2c9              UXTB     r1,r1
000286  ea405081          ORR      r0,r0,r1,LSL #22
00028a  63d0              STR      r0,[r2,#0x3c]
;;;287    
;;;288    __nop();
00028c  bf00              NOP      
;;;289    __nop();
00028e  bf00              NOP      
;;;290    __nop();
000290  bf00              NOP      
;;;291    __nop();
000292  bf00              NOP      
;;;292    __nop();
000294  bf00              NOP      
;;;293    __nop();
000296  bf00              NOP      
;;;294    __nop();
000298  bf00              NOP      
;;;295    __nop();
00029a  bf00              NOP      
;;;296    __nop();
00029c  bf00              NOP      
;;;297    __nop();
00029e  bf00              NOP      
;;;298    
;;;299    LPC_GPIO1->FIOCLR|=(1<<E1);
0002a0  6bd0              LDR      r0,[r2,#0x3c]
0002a2  f4402000          ORR      r0,r0,#0x80000
0002a6  63d0              STR      r0,[r2,#0x3c]
;;;300    
;;;301    __nop();
0002a8  bf00              NOP      
;;;302    __nop();
0002aa  bf00              NOP      
;;;303    __nop();
0002ac  bf00              NOP      
;;;304    __nop();
0002ae  bf00              NOP      
;;;305    __nop();
0002b0  bf00              NOP      
;;;306    __nop();
0002b2  bf00              NOP      
;;;307    __nop();
0002b4  bf00              NOP      
;;;308    __nop();
0002b6  bf00              NOP      
;;;309    __nop();
0002b8  bf00              NOP      
;;;310    __nop();
0002ba  bf00              NOP      
;;;311    
;;;312    return in;
0002bc  4618              MOV      r0,r3
;;;313    }
0002be  bd00              POP      {pc}
;;;314    
                          ENDP

                  data2_wr PROC
;;;315    //-----------------------------------------------
;;;316    void data2_wr(char in)
0002c0  b500              PUSH     {lr}
;;;317    {
0002c2  4603              MOV      r3,r0
;;;318    LPC_GPIO1->FIODIR|=(1<<A0);
0002c4  4a4e              LDR      r2,|L1.1024|
0002c6  6a10              LDR      r0,[r2,#0x20]
0002c8  f4402080          ORR      r0,r0,#0x40000
0002cc  6210              STR      r0,[r2,#0x20]
;;;319    LPC_GPIO1->FIODIR|=((1<<RW)|(1<<E2));
0002ce  6a10              LDR      r0,[r2,#0x20]
0002d0  f4401040          ORR      r0,r0,#0x300000
0002d4  6210              STR      r0,[r2,#0x20]
;;;320    
;;;321    lcd2_chk();
0002d6  f7fffffe          BL       lcd2_chk
;;;322    
;;;323    __nop();
0002da  bf00              NOP      
;;;324    __nop();
0002dc  bf00              NOP      
;;;325    __nop();
0002de  bf00              NOP      
;;;326    __nop();
0002e0  bf00              NOP      
;;;327    __nop();
0002e2  bf00              NOP      
;;;328    __nop();
0002e4  bf00              NOP      
;;;329    __nop();
0002e6  bf00              NOP      
;;;330    __nop();
0002e8  bf00              NOP      
;;;331    __nop();
0002ea  bf00              NOP      
;;;332    __nop();
0002ec  bf00              NOP      
;;;333    
;;;334    LPC_GPIO1->FIOSET|=(1<<A0);
0002ee  6b90              LDR      r0,[r2,#0x38]
0002f0  f4402080          ORR      r0,r0,#0x40000
0002f4  6390              STR      r0,[r2,#0x38]
;;;335    
;;;336    __nop();
0002f6  bf00              NOP      
;;;337    __nop();
0002f8  bf00              NOP      
;;;338    __nop();
0002fa  bf00              NOP      
;;;339    __nop();
0002fc  bf00              NOP      
;;;340    __nop();
0002fe  bf00              NOP      
;;;341    __nop();
000300  bf00              NOP      
;;;342    __nop();
000302  bf00              NOP      
;;;343    __nop();
000304  bf00              NOP      
;;;344    __nop();
000306  bf00              NOP      
;;;345    __nop();
000308  bf00              NOP      
;;;346    
;;;347    LPC_GPIO1->FIOCLR|=(1<<RW);
00030a  6bd0              LDR      r0,[r2,#0x3c]
00030c  f4401000          ORR      r0,r0,#0x200000
000310  63d0              STR      r0,[r2,#0x3c]
;;;348    
;;;349    __nop();
000312  bf00              NOP      
;;;350    __nop();
000314  bf00              NOP      
;;;351    __nop();
000316  bf00              NOP      
;;;352    __nop();
000318  bf00              NOP      
;;;353    __nop();
00031a  bf00              NOP      
;;;354    __nop();
00031c  bf00              NOP      
;;;355    __nop();
00031e  bf00              NOP      
;;;356    __nop();
000320  bf00              NOP      
;;;357    __nop();
000322  bf00              NOP      
;;;358    __nop();
000324  bf00              NOP      
;;;359    
;;;360    LPC_GPIO1->FIODIR|=((1<<D0)|(1<<D1)|(1<<D2)|(1<<D3)|(1<<D4)|(1<<D5)|(1<<D6)|(1<<D7));
000326  6a10              LDR      r0,[r2,#0x20]
000328  f040507f          ORR      r0,r0,#0x3fc00000
00032c  6210              STR      r0,[r2,#0x20]
;;;361    LPC_GPIO1->FIOSET|=(((long)in)<<D0);
00032e  6b90              LDR      r0,[r2,#0x38]
000330  ea405083          ORR      r0,r0,r3,LSL #22
000334  6390              STR      r0,[r2,#0x38]
;;;362    LPC_GPIO1->FIOCLR|=(((long)(~in))<<D0)&(0xffUL<<D0);
000336  6bd0              LDR      r0,[r2,#0x3c]
000338  ea6f0103          MVN      r1,r3
00033c  b2c9              UXTB     r1,r1
00033e  ea405081          ORR      r0,r0,r1,LSL #22
000342  63d0              STR      r0,[r2,#0x3c]
;;;363    
;;;364    __nop();
000344  bf00              NOP      
;;;365    __nop();
000346  bf00              NOP      
;;;366    __nop();
000348  bf00              NOP      
;;;367    __nop();
00034a  bf00              NOP      
;;;368    __nop();
00034c  bf00              NOP      
;;;369    __nop();
00034e  bf00              NOP      
;;;370    __nop();
000350  bf00              NOP      
;;;371    __nop();
000352  bf00              NOP      
;;;372    __nop();
000354  bf00              NOP      
;;;373    __nop();
000356  bf00              NOP      
;;;374    
;;;375    LPC_GPIO1->FIOCLR|=(1<<E2);
000358  6bd0              LDR      r0,[r2,#0x3c]
00035a  f4401080          ORR      r0,r0,#0x100000
00035e  63d0              STR      r0,[r2,#0x3c]
;;;376    
;;;377    __nop();
000360  bf00              NOP      
;;;378    __nop();
000362  bf00              NOP      
;;;379    __nop();
000364  bf00              NOP      
;;;380    __nop();
000366  bf00              NOP      
;;;381    __nop();
000368  bf00              NOP      
;;;382    __nop();
00036a  bf00              NOP      
;;;383    __nop();
00036c  bf00              NOP      
;;;384    __nop();
00036e  bf00              NOP      
;;;385    __nop();
000370  bf00              NOP      
;;;386    __nop();
000372  bf00              NOP      
;;;387    
;;;388    }
000374  bd00              POP      {pc}
;;;389    
                          ENDP

                  lcd_set_page PROC
;;;390    //-----------------------------------------------
;;;391    void lcd_set_page(char in)
000376  b510              PUSH     {r4,lr}
;;;392    {
;;;393    lcd1_wr(_SET_PAGE_|in);
000378  f04004b8          ORR      r4,r0,#0xb8
00037c  4620              MOV      r0,r4
00037e  f7fffffe          BL       lcd1_wr
;;;394    lcd2_wr(_SET_PAGE_|in);
000382  4620              MOV      r0,r4
000384  e8bd4010          POP      {r4,lr}
000388  e7fe              B        lcd2_wr
;;;395    }
;;;396    
                          ENDP

                  lcd_set_col PROC
;;;397    //-----------------------------------------------
;;;398    void lcd_set_col(char in)
00038a  b510              PUSH     {r4,lr}
;;;399    {
00038c  4604              MOV      r4,r0
;;;400    lcd1_wr(_SET_COLUMN_|in);
00038e  4620              MOV      r0,r4
000390  f7fffffe          BL       lcd1_wr
;;;401    lcd2_wr(_SET_COLUMN_|in);
000394  4620              MOV      r0,r4
000396  e8bd4010          POP      {r4,lr}
00039a  e7fe              B        lcd2_wr
;;;402    }    
;;;403    
                          ENDP

                  lcd_set_raw PROC
;;;404    //-----------------------------------------------
;;;405    void lcd_set_raw(char in)
00039c  b510              PUSH     {r4,lr}
;;;406    {
;;;407    lcd1_wr(_SET_RAW_|in);
00039e  f04004c0          ORR      r4,r0,#0xc0
0003a2  4620              MOV      r0,r4
0003a4  f7fffffe          BL       lcd1_wr
;;;408    lcd2_wr(_SET_RAW_|in);
0003a8  4620              MOV      r0,r4
0003aa  e8bd4010          POP      {r4,lr}
0003ae  e7fe              B        lcd2_wr
;;;409    }    
;;;410    
                          ENDP

                  lcd_init PROC
;;;411    //-----------------------------------------------
;;;412    void lcd_init(void) 
0003b0  4913              LDR      r1,|L1.1024|
;;;413    {
;;;414    int i/*,ii*/;
;;;415    
;;;416    		   /*
;;;417    #if(RES<16)
;;;418    	{
;;;419    	LPC_PINCON->PINSEL0&=~(1<<(RES*2))&~(1<<((RES*2)+1));
;;;420    	}
;;;421    #else 	
;;;422    	{
;;;423    	LPC_PINCON->PINSEL1&=~(1<<((RES-16)*2))&~(1<<(((RES-16)*2)+1));
;;;424    	}
;;;425    #endif
;;;426    
;;;427    LPC_PINCON->PINSEL2&=~(1<<((E1-16)*2))&~(1<<(((E1-16)*2)+1));
;;;428    	
;;;429    LPC_PINCON->PINSEL2&=~(1<<((E2-16)*2))&~(1<<(((E2-16)*2)+1));
;;;430    
;;;431    LPC_PINCON->PINSEL2&=~(1<<((A0-16)*2))&~(1<<(((A0-16)*2)+1));
;;;432    
;;;433    LPC_PINCON->PINSEL2&=~(1<<((RW-16)*2))&~(1<<(((RW-16)*2)+1));
;;;434    				
;;;435    
;;;436    
;;;437    
;;;438    
;;;439    
;;;440    #if(D0<16)
;;;441    	{
;;;442    	LPC_PINCON->PINSEL0&=~(1<<(D0*2))&~(1<<((D0*2)+1));
;;;443    	}
;;;444    #else 	
;;;445    	{
;;;446    	LPC_PINCON->PINSEL1&=~(1<<((D0-16)*2))&~(1<<(((D0-16)*2)+1));
;;;447    	}
;;;448    #endif
;;;449    
;;;450    #if(D1<16)
;;;451    	{
;;;452    	LPC_PINCON->PINSEL0&=~(1<<(D1*2))&~(1<<((D1*2)+1));
;;;453    	}
;;;454    #else 	
;;;455    	{
;;;456    	LPC_PINCON->PINSEL1&=~(1<<((D1-16)*2))&~(1<<(((D1-16)*2)+1));
;;;457    	}
;;;458    #endif
;;;459    	
;;;460    #if(D2<16)
;;;461    	{
;;;462    	LPC_PINCON->PINSEL0&=~(1<<(D2*2))&~(1<<((D2*2)+1));
;;;463    	}
;;;464    #else 	
;;;465    	{
;;;466    	LPC_PINCON->PINSEL1&=~(1<<((D2-16)*2))&~(1<<(((D2-16)*2)+1));
;;;467    	}
;;;468    #endif
;;;469    	
;;;470    #if(D3<16)
;;;471    	{
;;;472    	LPC_PINCON->PINSEL0&=~(1<<(D3*2))&~(1<<((D3*2)+1));
;;;473    	}
;;;474    #else 	
;;;475    	{
;;;476    	LPC_PINCON->PINSEL1&=~(1<<((D3-16)*2))&~(1<<(((D3-16)*2)+1));
;;;477    	}	
;;;478    #endif
;;;479    	
;;;480    #if(D4<16)
;;;481    	{
;;;482    	LPC_PINCON->PINSEL0&=~(1<<(D4*2))&~(1<<((D4*2)+1));
;;;483    	}
;;;484    #else 	
;;;485    	{
;;;486    	LPC_PINCON->PINSEL1&=~(1<<((D4-16)*2))&~(1<<(((D4-16)*2)+1));
;;;487    	}
;;;488    #endif
;;;489    
;;;490    #if(D5<16)
;;;491    	{
;;;492    	LPC_PINCON->PINSEL0&=~(1<<(D5*2))&~(1<<((D5*2)+1));
;;;493    	}
;;;494    #else 	
;;;495    	{
;;;496    	LPC_PINCON->PINSEL1&=~(1<<((D5-16)*2))&~(1<<(((D5-16)*2)+1));
;;;497    	}
;;;498    #endif
;;;499    	
;;;500    #if(D6<16)
;;;501    	{
;;;502    	LPC_PINCON->PINSEL0&=~(1<<(D6*2))&~(1<<((D6*2)+1));
;;;503    	}
;;;504    #else 	
;;;505    	{
;;;506    	LPC_PINCON->PINSEL1&=~(1<<((D6-16)*2))&~(1<<(((D6-16)*2)+1));
;;;507    	}
;;;508    #endif
;;;509    	
;;;510    #if(D7<16)
;;;511    	{
;;;512    	LPC_PINCON->PINSEL0&=~(1<<(D7*2))&~(1<<((D7*2)+1));
;;;513    	}
;;;514    #else 	
;;;515    	{
;;;516    	LPC_PINCON->PINSEL1&=~(1<<((D7-16)*2))&~(1<<(((D7-16)*2)+1));
;;;517    	}
;;;518    #endif	
;;;519    
;;;520     */
;;;521    	
;;;522    					
;;;523    LPC_GPIO1->FIODIR|=(1<<D0)|(1<<D1)|(1<<D2)|(1<<D3)|(1<<D4)|(1<<D5)|(1<<D6)|(1<<D7);
0003b2  6a08              LDR      r0,[r1,#0x20]
0003b4  f040507f          ORR      r0,r0,#0x3fc00000
0003b8  6208              STR      r0,[r1,#0x20]
;;;524    LPC_GPIO1->FIODIR|=(1<<E1)|(1<<A0)|(1<<E2)|(1<<RW);
0003ba  6a08              LDR      r0,[r1,#0x20]
0003bc  f4401070          ORR      r0,r0,#0x3c0000
0003c0  6208              STR      r0,[r1,#0x20]
;;;525    LPC_GPIO0->FIODIR|=(1<<RES)|(1<<29);
0003c2  6808              LDR      r0,[r1,#0]
0003c4  f04040c0          ORR      r0,r0,#0x60000000
0003c8  6008              STR      r0,[r1,#0]
;;;526    
;;;527    for(i=0;i<100;i++)
0003ca  f04f0000          MOV      r0,#0
                  |L1.974|
;;;528    	{
;;;529    	LPC_GPIO0->FIOCLR|=(1<<RES);
0003ce  69ca              LDR      r2,[r1,#0x1c]
0003d0  f0424280          ORR      r2,r2,#0x40000000
0003d4  61ca              STR      r2,[r1,#0x1c]
0003d6  f1000001          ADD      r0,r0,#1              ;527
0003da  2864              CMP      r0,#0x64              ;527
0003dc  dbf7              BLT      |L1.974|
;;;530    	}
;;;531    for(i=0;i<166000;i++)
0003de  f04f0000          MOV      r0,#0
0003e2  4a08              LDR      r2,|L1.1028|
                  |L1.996|
;;;532    	{
;;;533    	__nop();
0003e4  bf00              NOP      
0003e6  f1000001          ADD      r0,r0,#1              ;531
0003ea  4290              CMP      r0,r2                 ;531
0003ec  dbfa              BLT      |L1.996|
;;;534    	}
;;;535    for(i=0;i<50;i++)
0003ee  f04f0000          MOV      r0,#0
                  |L1.1010|
;;;536    	{
;;;537    	LPC_GPIO0->FIOSET|=(1<<RES);
0003f2  698b              LDR      r3,[r1,#0x18]
0003f4  f0434380          ORR      r3,r3,#0x40000000
0003f8  618b              STR      r3,[r1,#0x18]
0003fa  f1000001          ADD      r0,r0,#1              ;535
0003fe  e003              B        |L1.1032|
                  |L1.1024|
                          DCD      0x2009c000
                  |L1.1028|
                          DCD      0x00028870
                  |L1.1032|
000408  2832              CMP      r0,#0x32              ;535
00040a  dbf2              BLT      |L1.1010|
;;;538    	}	
;;;539    
;;;540     for(i=0;i<166000;i++)
00040c  f04f0000          MOV      r0,#0
                  |L1.1040|
;;;541    	{
;;;542    	__nop();
000410  bf00              NOP      
000412  f1000001          ADD      r0,r0,#1              ;540
000416  4290              CMP      r0,r2                 ;540
000418  dbfa              BLT      |L1.1040|
;;;543    	}
;;;544    	
;;;545    
;;;546    //lcd_reset();
;;;547    //E1d=1;
;;;548    //E2d=1;
;;;549    //A0d=1;
;;;550    //RWd=1;
;;;551    
;;;552    //E1=0;
;;;553    //E2=0;
;;;554    /*IO1CLR|=(1<<E1);
;;;555    IO1CLR|=(1<<E2);
;;;556    //A0=1;
;;;557    IO1SET|=(1<<A0);
;;;558    //RW=1;
;;;559    IO1SET|=(1<<RW);
;;;560    
;;;561    lcd1_wr(_RESET_);
;;;562    lcd2_wr(_RESET_);*/
;;;563         //LCD_PORTc=0xFF;
;;;564         //LCD_PORT=0xFF;
;;;565    //disp_page0(); 
;;;566    
;;;567    //IO0CLR|=(1<<A0)|(1<<RW);
;;;568    }
00041a  4770              BX       lr
;;;569    
                          ENDP

                  lcd_clear PROC
;;;793    //-----------------------------------------------
;;;794    void lcd_clear(void)
00041c  b530              PUSH     {r4,r5,lr}
;;;795    {
;;;796    char page,col/*,i*/;
;;;797    
;;;798    for(page=0;page<=Max_page;page++)
00041e  f04f0500          MOV      r5,#0
                  |L1.1058|
;;;799    
;;;800    	{
;;;801    	lcd_set_page(page);
000422  4628              MOV      r0,r5
000424  f7fffffe          BL       lcd_set_page
;;;802    	lcd_set_col(0);
000428  2000              MOVS     r0,#0
00042a  f7fffffe          BL       lcd_set_col
;;;803    	for(col=0;col<=Max_Col;col++)
00042e  f04f0400          MOV      r4,#0
                  |L1.1074|
;;;804             	{
;;;805             	data1_wr(0x00);
000432  2000              MOVS     r0,#0
000434  f7fffffe          BL       data1_wr
;;;806    	    	data2_wr(0x00);
000438  2000              MOVS     r0,#0
00043a  f7fffffe          BL       data2_wr
00043e  f1040401          ADD      r4,r4,#1              ;803
000442  b2e4              UXTB     r4,r4                 ;803
000444  2c3c              CMP      r4,#0x3c              ;803
000446  d9f4              BLS      |L1.1074|
000448  f1050501          ADD      r5,r5,#1              ;798
00044c  b2ed              UXTB     r5,r5                 ;798
00044e  2d03              CMP      r5,#3                 ;798
000450  d9e7              BLS      |L1.1058|
;;;807         	}
;;;808         }  
;;;809    }
000452  bd30              POP      {r4,r5,pc}
;;;810    
                          ENDP

                  lcd_on PROC
;;;815    //-----------------------------------------------
;;;816    void lcd_on(void) 
000454  b500              PUSH     {lr}
;;;817    {
;;;818    lcd1_wr(_DISPLAY_ON_);
000456  20af              MOVS     r0,#0xaf
000458  f7fffffe          BL       lcd1_wr
;;;819    lcd2_wr(_DISPLAY_ON_);
00045c  20af              MOVS     r0,#0xaf
00045e  f85deb04          POP      {lr}
000462  e7fe              B        lcd2_wr
;;;820    }
;;;821    
                          ENDP

                  lcd_out PROC
;;;829    //-----------------------------------------------
;;;830    void lcd_out(char* adr)
000464  e92d41f0          PUSH     {r4-r8,lr}
;;;831    {
000468  4680              MOV      r8,r0
;;;832    char* ptr0;
;;;833    char* ptr1;
;;;834    char i,n;
;;;835    ptr0=adr;
;;;836    ptr1=adr+61;
;;;837    lcd_set_raw(0);
00046a  f04f0000          MOV      r0,#0
00046e  f7fffffe          BL       lcd_set_raw
;;;838    
;;;839    for(n=0;n<=3;n++)
000472  f04f0700          MOV      r7,#0
                  |L1.1142|
;;;840    	{
;;;841    	ptr0=adr+(122*(unsigned)n);
000476  eb070047          ADD      r0,r7,r7,LSL #1
00047a  ebc01087          RSB      r0,r0,r7,LSL #6
00047e  eb080440          ADD      r4,r8,r0,LSL #1
;;;842    	ptr1=ptr0+61;
000482  f104053d          ADD      r5,r4,#0x3d
;;;843    	lcd_set_page(n);
000486  4638              MOV      r0,r7
000488  f7fffffe          BL       lcd_set_page
;;;844    	lcd_set_col(0);
00048c  2000              MOVS     r0,#0
00048e  f7fffffe          BL       lcd_set_col
;;;845    	for(i=0;i<61;i++)
000492  f04f0600          MOV      r6,#0
                  |L1.1174|
;;;846    		{
;;;847    		data1_wr(*ptr0);
000496  7820              LDRB     r0,[r4,#0]
000498  f7fffffe          BL       data1_wr
;;;848    		data2_wr(*ptr1);
00049c  7828              LDRB     r0,[r5,#0]
00049e  f7fffffe          BL       data2_wr
;;;849    		ptr0++;
0004a2  f1040401          ADD      r4,r4,#1
;;;850    		ptr1++;
0004a6  f1050501          ADD      r5,r5,#1
0004aa  f1060601          ADD      r6,r6,#1              ;845
0004ae  b2f6              UXTB     r6,r6                 ;845
0004b0  2e3d              CMP      r6,#0x3d              ;845
0004b2  d3f0              BCC      |L1.1174|
0004b4  f1070701          ADD      r7,r7,#1              ;839
0004b8  b2ff              UXTB     r7,r7                 ;839
0004ba  2f03              CMP      r7,#3                 ;839
0004bc  d9db              BLS      |L1.1142|
;;;851    	    	}
;;;852    	}
;;;853    }
0004be  e8bd81f0          POP      {r4-r8,pc}
;;;854    
                          ENDP


                          AREA ||area_number.2||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.2||, ||.text||
                  status PROC
;;;8      //-----------------------------------------------
;;;9      void lcd1_chk(void)
000000  4809              LDR      r0,|L2.40|
;;;10     {
;;;11     LPC_GPIO1->FIODIR&=(~((1<<D0)|(1<<D1)|(1<<D2)|(1<<D3)|(1<<D4)|(1<<D5)|(1<<D6)|(1<<D7)));
000002  f44f2180          MOV      r1,#0x40000
000006  63c1              STR      r1,[r0,#0x3c]
000008  f44f1100          MOV      r1,#0x200000
;;;12     LPC_GPIO1->FIOSET|=(1<<RW);
00000c  6381              STR      r1,[r0,#0x38]
00000e  f44f2200          MOV      r2,#0x80000
;;;13     
;;;14     __nop();
000012  6382              STR      r2,[r0,#0x38]
;;;15     __nop();
000014  bf00              NOP      
                  |L2.22|
;;;16     __nop();
000016  bf00              NOP      
;;;17     __nop();
000018  bf00              NOP      
;;;18     __nop();
00001a  bf00              NOP      
;;;19     __nop();
00001c  6b41              LDR      r1,[r0,#0x34]
;;;20     __nop();
00001e  0089              LSLS     r1,r1,#2
;;;21     __nop();
000020  d4f9              BMI      |L2.22|
;;;22     __nop();
000022  63c2              STR      r2,[r0,#0x3c]
;;;23     __nop();
000024  4770              BX       lr
;;;24     
;;;25     LPC_GPIO1->FIOCLR|=(1<<A0);
;;;26     
;;;27     __nop();
;;;28     __nop();
;;;29     __nop();
;;;30     __nop();
;;;31     __nop();
;;;32     __nop();
;;;33     __nop();
;;;34     __nop();
;;;35     __nop();
;;;36     __nop();
;;;37     
;;;38     LPC_GPIO1->FIOSET|=(1<<E1);
;;;39     
;;;40     chk1:
;;;41     
;;;42     if(LPC_GPIO1->FIOPIN&(1<<D7)) goto chk1;
;;;43     
;;;44     }
;;;45     
                          ENDP

000026  0000              DCW      0x0000
                  |L2.40|
                          DCD      0x2009c000

                          AREA ||area_number.3||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.3||, ||.text||
                  delay PROC
;;;8      //-----------------------------------------------
;;;9      void lcd1_chk(void)
000000  f04f0000          MOV      r0,#0
                  |L3.4|
;;;10     {
;;;11     LPC_GPIO1->FIODIR&=(~((1<<D0)|(1<<D1)|(1<<D2)|(1<<D3)|(1<<D4)|(1<<D5)|(1<<D6)|(1<<D7)));
000004  bf00              NOP      
000006  f1000001          ADD      r0,r0,#1
;;;12     LPC_GPIO1->FIOSET|=(1<<RW);
00000a  b200              SXTH     r0,r0
00000c  2864              CMP      r0,#0x64
00000e  dbf9              BLT      |L3.4|
000010  4770              BX       lr
;;;13     
;;;14     __nop();
;;;15     __nop();
;;;16     __nop();
;;;17     __nop();
;;;18     __nop();
;;;19     __nop();
;;;20     __nop();
;;;21     __nop();
;;;22     __nop();
;;;23     __nop();
;;;24     
;;;25     LPC_GPIO1->FIOCLR|=(1<<A0);
;;;26     
;;;27     __nop();
;;;28     __nop();
;;;29     __nop();
;;;30     __nop();
;;;31     __nop();
;;;32     __nop();
;;;33     __nop();
;;;34     __nop();
;;;35     __nop();
;;;36     __nop();
;;;37     
;;;38     LPC_GPIO1->FIOSET|=(1<<E1);
;;;39     
;;;40     chk1:
;;;41     
;;;42     if(LPC_GPIO1->FIOPIN&(1<<D7)) goto chk1;
;;;43     
;;;44     }
;;;45     
                          ENDP


                          AREA ||area_number.4||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.4||, ||.text||
                  ltstrobe PROC
;;;8      //-----------------------------------------------
;;;9      void lcd1_chk(void)
000000  b530              PUSH     {r4,r5,lr}
;;;10     {
;;;11     LPC_GPIO1->FIODIR&=(~((1<<D0)|(1<<D1)|(1<<D2)|(1<<D3)|(1<<D4)|(1<<D5)|(1<<D6)|(1<<D7)));
000002  4603              MOV      r3,r0
000004  f7fffffe          BL       status
000008  490d              LDR      r1,|L4.64|
;;;12     LPC_GPIO1->FIOSET|=(1<<RW);
00000a  f44f1400          MOV      r4,#0x200000
00000e  638c              STR      r4,[r1,#0x38]
000010  f44f2080          MOV      r0,#0x40000
;;;13     
;;;14     __nop();
;;;15     __nop();
000014  63c8              STR      r0,[r1,#0x3c]
;;;16     __nop();
000016  f44f2200          MOV      r2,#0x80000
;;;17     __nop();
;;;18     __nop();
00001a  638a              STR      r2,[r1,#0x38]
;;;19     __nop();
00001c  f44f1080          MOV      r0,#0x100000
;;;20     __nop();
;;;21     __nop();
000020  6388              STR      r0,[r1,#0x38]
;;;22     __nop();
000022  6b8d              LDR      r5,[r1,#0x38]
;;;23     __nop();
000024  ea455583          ORR      r5,r5,r3,LSL #22
;;;24     
;;;25     LPC_GPIO1->FIOCLR|=(1<<A0);
000028  638d              STR      r5,[r1,#0x38]
00002a  6bcd              LDR      r5,[r1,#0x3c]
00002c  ea6f0303          MVN      r3,r3
;;;26     
;;;27     __nop();
;;;28     __nop();
000030  b2db              UXTB     r3,r3
;;;29     __nop();
000032  ea455383          ORR      r3,r5,r3,LSL #22
;;;30     __nop();
;;;31     __nop();
000036  63cb              STR      r3,[r1,#0x3c]
;;;32     __nop();
000038  63ca              STR      r2,[r1,#0x3c]
;;;33     __nop();
00003a  63c8              STR      r0,[r1,#0x3c]
;;;34     __nop();
00003c  63cc              STR      r4,[r1,#0x3c]
;;;35     __nop();
00003e  bd30              POP      {r4,r5,pc}
;;;36     __nop();
;;;37     
;;;38     LPC_GPIO1->FIOSET|=(1<<E1);
;;;39     
;;;40     chk1:
;;;41     
;;;42     if(LPC_GPIO1->FIOPIN&(1<<D7)) goto chk1;
;;;43     
;;;44     }
;;;45     
                          ENDP

                  |L4.64|
                          DCD      0x2009c000

                          AREA ||area_number.5||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.5||, ||.text||
                  lcd_init_ PROC
;;;8      //-----------------------------------------------
;;;9      void lcd1_chk(void)
000000  4830              LDR      r0,|L5.196|
;;;10     {
;;;11     LPC_GPIO1->FIODIR&=(~((1<<D0)|(1<<D1)|(1<<D2)|(1<<D3)|(1<<D4)|(1<<D5)|(1<<D6)|(1<<D7)));
000002  6841              LDR      r1,[r0,#4]
000004  f0215140          BIC      r1,r1,#0x30000000
000008  6041              STR      r1,[r0,#4]
;;;12     LPC_GPIO1->FIOSET|=(1<<RW);
00000a  6881              LDR      r1,[r0,#8]
00000c  f0210130          BIC      r1,r1,#0x30
000010  6081              STR      r1,[r0,#8]
;;;13     
;;;14     __nop();
000012  6881              LDR      r1,[r0,#8]
;;;15     __nop();
000014  f02101c0          BIC      r1,r1,#0xc0
;;;16     __nop();
;;;17     __nop();
000018  6081              STR      r1,[r0,#8]
;;;18     __nop();
00001a  6881              LDR      r1,[r0,#8]
;;;19     __nop();
00001c  f4217140          BIC      r1,r1,#0x300
;;;20     __nop();
;;;21     __nop();
000020  6081              STR      r1,[r0,#8]
;;;22     __nop();
000022  6881              LDR      r1,[r0,#8]
;;;23     __nop();
000024  f4216140          BIC      r1,r1,#0xc00
;;;24     
;;;25     LPC_GPIO1->FIOCLR|=(1<<A0);
000028  6081              STR      r1,[r0,#8]
00002a  6841              LDR      r1,[r0,#4]
00002c  f4215140          BIC      r1,r1,#0x3000
;;;26     
;;;27     __nop();
;;;28     __nop();
000030  6041              STR      r1,[r0,#4]
;;;29     __nop();
000032  6841              LDR      r1,[r0,#4]
;;;30     __nop();
000034  f4214140          BIC      r1,r1,#0xc000
;;;31     __nop();
;;;32     __nop();
000038  6041              STR      r1,[r0,#4]
;;;33     __nop();
00003a  6841              LDR      r1,[r0,#4]
;;;34     __nop();
00003c  f4213140          BIC      r1,r1,#0x30000
;;;35     __nop();
;;;36     __nop();
000040  6041              STR      r1,[r0,#4]
;;;37     
;;;38     LPC_GPIO1->FIOSET|=(1<<E1);
000042  6841              LDR      r1,[r0,#4]
000044  f4212140          BIC      r1,r1,#0xc0000
000048  6041              STR      r1,[r0,#4]
;;;39     
;;;40     chk1:
;;;41     
;;;42     if(LPC_GPIO1->FIOPIN&(1<<D7)) goto chk1;
00004a  6841              LDR      r1,[r0,#4]
00004c  f4211140          BIC      r1,r1,#0x300000
;;;43     
;;;44     }
000050  6041              STR      r1,[r0,#4]
000052  6841              LDR      r1,[r0,#4]
000054  f4210140          BIC      r1,r1,#0xc00000
000058  6041              STR      r1,[r0,#4]
00005a  6841              LDR      r1,[r0,#4]
00005c  f0217140          BIC      r1,r1,#0x3000000
000060  6041              STR      r1,[r0,#4]
000062  6841              LDR      r1,[r0,#4]
000064  f0216140          BIC      r1,r1,#0xc000000
000068  6041              STR      r1,[r0,#4]
00006a  4917              LDR      r1,|L5.200|
00006c  6a08              LDR      r0,[r1,#0x20]
00006e  4a17              LDR      r2,|L5.204|
000070  ea400002          ORR      r0,r0,r2
000074  6208              STR      r0,[r1,#0x20]
000076  6808              LDR      r0,[r1,#0]
000078  f4401070          ORR      r0,r0,#0x3c0000
00007c  6008              STR      r0,[r1,#0]
00007e  f04f0000          MOV      r0,#0
                  |L5.130|
000082  6bca              LDR      r2,[r1,#0x3c]
000084  f0424280          ORR      r2,r2,#0x40000000
000088  63ca              STR      r2,[r1,#0x3c]
00008a  f1000001          ADD      r0,r0,#1
00008e  280a              CMP      r0,#0xa
000090  dbf7              BLT      |L5.130|
000092  f04f0000          MOV      r0,#0
000096  f44f72fa          MOV      r2,#0x1f4
                  |L5.154|
00009a  bf00              NOP      
00009c  f1000001          ADD      r0,r0,#1
0000a0  4290              CMP      r0,r2
0000a2  dbfa              BLT      |L5.154|
0000a4  f04f0000          MOV      r0,#0
0000a8  f24c3250          MOV      r2,#0xc350
                  |L5.172|
0000ac  6b8b              LDR      r3,[r1,#0x38]
0000ae  f0434380          ORR      r3,r3,#0x40000000
0000b2  638b              STR      r3,[r1,#0x38]
0000b4  f1000001          ADD      r0,r0,#1
0000b8  4290              CMP      r0,r2
0000ba  dbf7              BLT      |L5.172|
0000bc  20e2              MOVS     r0,#0xe2
0000be  f7ffbffe          B.W      ltstrobe
;;;45     
                          ENDP

0000c2  0000              DCW      0x0000
                  |L5.196|
                          DCD      0x4002c000
                  |L5.200|
                          DCD      0x2009c000
                  |L5.204|
                          DCD      0x7fc00000

                          AREA ||area_number.6||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.6||, ||.text||
                  lcd_off PROC
;;;8      //-----------------------------------------------
;;;9      void lcd1_chk(void)
000000  b500              PUSH     {lr}
;;;10     {
;;;11     LPC_GPIO1->FIODIR&=(~((1<<D0)|(1<<D1)|(1<<D2)|(1<<D3)|(1<<D4)|(1<<D5)|(1<<D6)|(1<<D7)));
000002  20ae              MOVS     r0,#0xae
000004  f7fffffe          BL       lcd1_wr
000008  20ae              MOVS     r0,#0xae
;;;12     LPC_GPIO1->FIOSET|=(1<<RW);
00000a  f85deb04          POP      {lr}
00000e  f7ffbffe          B.W      lcd2_wr
;;;13     
;;;14     __nop();
;;;15     __nop();
;;;16     __nop();
;;;17     __nop();
;;;18     __nop();
;;;19     __nop();
;;;20     __nop();
;;;21     __nop();
;;;22     __nop();
;;;23     __nop();
;;;24     
;;;25     LPC_GPIO1->FIOCLR|=(1<<A0);
;;;26     
;;;27     __nop();
;;;28     __nop();
;;;29     __nop();
;;;30     __nop();
;;;31     __nop();
;;;32     __nop();
;;;33     __nop();
;;;34     __nop();
;;;35     __nop();
;;;36     __nop();
;;;37     
;;;38     LPC_GPIO1->FIOSET|=(1<<E1);
;;;39     
;;;40     chk1:
;;;41     
;;;42     if(LPC_GPIO1->FIOPIN&(1<<D7)) goto chk1;
;;;43     
;;;44     }
;;;45     
                          ENDP

