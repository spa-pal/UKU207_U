; generated by ARM C/C++ Compiler, 4.1 [Build 644]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\EXE\stark.o --asm_dir=.\ --list_dir=.\ --depend=.\EXE\stark.d --feedback=.\EXE\UKU_220_IPS_TERMOKOMPENSAT.fed --cpu=Cortex-M3 --apcs=interwork -O1 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx -D__MICROLIB -DUKU_220_IPS_TERMOKOMPENSAT -DUKU2071x -DUKU_ZVU --omf_browse=.\EXE\stark.crf stark.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  stark_bat_hndl PROC
;;;14     //-----------------------------------------------
;;;15     void stark_bat_hndl(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;16     {
000004  b086              SUB      sp,sp,#0x18
;;;17     
;;;18     if(portForSTARKBatteryIsInitiated==0)
000006  4d3f              LDR      r5,|L1.260|
;;;19     	{
;;;20     	//UARTInit(1, 9600);	/* baud rate setting */
;;;21     	uart1_init(9600);
;;;22     	portForSTARKBatteryIsInitiated=1;
000008  2701              MOVS     r7,#1
00000a  7828              LDRB     r0,[r5,#0]            ;18  ; portForSTARKBatteryIsInitiated
00000c  b920              CBNZ     r0,|L1.24|
00000e  f44f5016          MOV      r0,#0x2580            ;21
000012  f7fffffe          BL       uart1_init
000016  702f              STRB     r7,[r5,#0]
                  |L1.24|
;;;23     	}
;;;24     
;;;25     sTARKBatteryHndlPhase++;
000018  78a8              LDRB     r0,[r5,#2]  ; sTARKBatteryHndlPhase
00001a  f1000001          ADD      r0,r0,#1
00001e  b2c1              UXTB     r1,r0
000020  70a9              STRB     r1,[r5,#2]
;;;26     
;;;27     if((sTARKSilentCnt[0])&&(sTARKSilentCnt[0]<=10))sTARKSilentCnt[0]--;
000022  4c38              LDR      r4,|L1.260|
000024  f1040404          ADD      r4,r4,#4
000028  f9b40000          LDRSH    r0,[r4,#0]  ; sTARKSilentCnt
00002c  b120              CBZ      r0,|L1.56|
00002e  280a              CMP      r0,#0xa
000030  dc02              BGT      |L1.56|
000032  f1a00001          SUB      r0,r0,#1
000036  8020              STRH     r0,[r4,#0]
                  |L1.56|
;;;28     if((sTARKSilentCnt[1])&&(sTARKSilentCnt[1]<=10))sTARKSilentCnt[1]--;
000038  f9b40002          LDRSH    r0,[r4,#2]  ; sTARKSilentCnt
00003c  b120              CBZ      r0,|L1.72|
00003e  280a              CMP      r0,#0xa
000040  dc02              BGT      |L1.72|
000042  f1a00001          SUB      r0,r0,#1
000046  8060              STRH     r0,[r4,#2]
                  |L1.72|
;;;29     if((sTARKSilentCnt[2])&&(sTARKSilentCnt[2]<=10))sTARKSilentCnt[2]--;
000048  f9b40004          LDRSH    r0,[r4,#4]  ; sTARKSilentCnt
00004c  b120              CBZ      r0,|L1.88|
00004e  280a              CMP      r0,#0xa
000050  dc02              BGT      |L1.88|
000052  f1a00001          SUB      r0,r0,#1
000056  80a0              STRH     r0,[r4,#4]
                  |L1.88|
;;;30     
;;;31     if(sTARKBatteryHndlPhase==4)	//7E 32 36 30 30 34 36 34 32 45 30 30 32 30 31 46 44 33 30 0D
;;;32     	{
;;;33     	if(sTARKButteryCnter==0)
;;;34     		{
;;;35     		char sTARKButteryOutBuff[]={0x7e,0x32,0x30,0x30,0x30,0x34,0x36,0x34,0x32,0x45,0x30,0x30,0x32,0x30,0x30,0x46,0x44,0x33,0x37,0x0d};
;;;36     		uart_out_buff1(sTARKButteryOutBuff,20);
;;;37     		sTARKSilentCnt[0]=10;
000058  260a              MOVS     r6,#0xa
00005a  f04f0800          MOV      r8,#0                 ;18
00005e  2904              CMP      r1,#4                 ;31
000060  d004              BEQ      |L1.108|
;;;38     		}
;;;39     	else if(sTARKButteryCnter==1)
;;;40     		{
;;;41     		char sTARKButteryOutBuff[]={0x7e,0x32,0x36,0x30,0x30,0x34,0x36,0x34,0x32,0x45,0x30,0x30,0x32,0x30,0x32,0x46,0x44,0x32,0x46,0x0d};
;;;42     		uart_out_buff1(sTARKButteryOutBuff,20);
;;;43     		sTARKSilentCnt[1]=10;
;;;44     		}
;;;45     	else if(sTARKButteryCnter==2)
;;;46     		{
;;;47     		char sTARKButteryOutBuff[]={0x7e,0x32,0x36,0x30,0x30,0x34,0x36,0x34,0x32,0x45,0x30,0x30,0x32,0x30,0x33,0x46,0x44,0x32,0x45,0x0d};
;;;48     		uart_out_buff1(sTARKButteryOutBuff,20);
;;;49     		sTARKSilentCnt[2]=10;
;;;50     		}
;;;51     
;;;52     	sTARKRequestPhase=0;
;;;53     
;;;54     	}
;;;55     else if(sTARKBatteryHndlPhase==8)
000062  2908              CMP      r1,#8
000064  d12e              BNE      |L1.196|
;;;56     	{
;;;57     	if(sTARKButteryCnter==0)
000066  7868              LDRB     r0,[r5,#1]  ; sTARKButteryCnter
000068  b378              CBZ      r0,|L1.202|
00006a  e03a              B        |L1.226|
                  |L1.108|
00006c  7868              LDRB     r0,[r5,#1]            ;33  ; sTARKButteryCnter
00006e  b120              CBZ      r0,|L1.122|
000070  2801              CMP      r0,#1                 ;39
000072  d00e              BEQ      |L1.146|
000074  2802              CMP      r0,#2                 ;45
000076  d018              BEQ      |L1.170|
000078  e022              B        |L1.192|
                  |L1.122|
00007a  f04f0214          MOV      r2,#0x14              ;35
00007e  a122              ADR      r1,|L1.264|
000080  a801              ADD      r0,sp,#4              ;35
000082  f7fffffe          BL       __aeabi_memcpy4
000086  2114              MOVS     r1,#0x14              ;36
000088  a801              ADD      r0,sp,#4              ;36
00008a  f7fffffe          BL       uart_out_buff1
00008e  8026              STRH     r6,[r4,#0]            ;37
000090  e016              B        |L1.192|
                  |L1.146|
000092  f04f0214          MOV      r2,#0x14              ;41
000096  a121              ADR      r1,|L1.284|
000098  a801              ADD      r0,sp,#4              ;41
00009a  f7fffffe          BL       __aeabi_memcpy4
00009e  2114              MOVS     r1,#0x14              ;42
0000a0  a801              ADD      r0,sp,#4              ;42
0000a2  f7fffffe          BL       uart_out_buff1
0000a6  8066              STRH     r6,[r4,#2]            ;43
0000a8  e00a              B        |L1.192|
                  |L1.170|
0000aa  f04f0214          MOV      r2,#0x14              ;47
0000ae  a120              ADR      r1,|L1.304|
0000b0  a801              ADD      r0,sp,#4              ;47
0000b2  f7fffffe          BL       __aeabi_memcpy4
0000b6  2114              MOVS     r1,#0x14              ;48
0000b8  a801              ADD      r0,sp,#4              ;48
0000ba  f7fffffe          BL       uart_out_buff1
0000be  80a6              STRH     r6,[r4,#4]            ;49
                  |L1.192|
0000c0  f8858003          STRB     r8,[r5,#3]            ;52
                  |L1.196|
;;;58     		{
;;;59     		char sTARKButteryOutBuff[]={0x7e,0x32,0x30,0x30,0x30,0x34,0x36,0x34,0x34,0x45,0x30,0x30,0x32,0x30,0x30,0x46,0x44,0x33,0x35,0x0d};
;;;60     		uart_out_buff1(sTARKButteryOutBuff,20);
;;;61     		sTARKSilentCnt[0]=10;
;;;62     		}
;;;63     /*	else if(sTARKButteryCnter==1)
;;;64     		{
;;;65     		char sTARKButteryOutBuff[]={0x7e,0x32,0x36,0x30,0x30,0x34,0x36,0x34,0x34,0x45,0x30,0x30,0x32,0x30,0x32,0x46,0x44,0x32,0x44,0x0d};
;;;66     		uart_out_buff1(sTARKButteryOutBuff,20);
;;;67     		sTARKSilentCnt[1]=10;
;;;68     		}
;;;69     	else if(sTARKButteryCnter==2)
;;;70     		{
;;;71     		char sTARKButteryOutBuff[]={0x7e,0x32,0x36,0x30,0x30,0x34,0x36,0x34,0x34,0x45,0x30,0x30,0x32,0x30,0x33,0x46,0x44,0x32,0x45,0x0d};
;;;72     		uart_out_buff1(sTARKButteryOutBuff,20);
;;;73     		sTARKSilentCnt[2]=10;
;;;74     		} */
;;;75     
;;;76     	sTARKRequestPhase=1;
;;;77     
;;;78     	sTARKBatteryHndlPhase=0;
;;;79     	
;;;80     	sTARKButteryCnter++;
;;;81     	if(sTARKButteryCnter>=NUMBAT_FSO)sTARKButteryCnter=0;
;;;82     	}
;;;83     }
0000c4  b006              ADD      sp,sp,#0x18
0000c6  e8bd81f0          POP      {r4-r8,pc}
                  |L1.202|
0000ca  e7ff              B        |L1.204|
                  |L1.204|
0000cc  f04f0214          MOV      r2,#0x14              ;59
0000d0  a11c              ADR      r1,|L1.324|
0000d2  a801              ADD      r0,sp,#4              ;59
0000d4  f7fffffe          BL       __aeabi_memcpy4
0000d8  2114              MOVS     r1,#0x14              ;60
0000da  a801              ADD      r0,sp,#4              ;60
0000dc  f7fffffe          BL       uart_out_buff1
0000e0  8026              STRH     r6,[r4,#0]            ;61
                  |L1.226|
0000e2  70ef              STRB     r7,[r5,#3]            ;76
0000e4  f8858002          STRB     r8,[r5,#2]            ;78
0000e8  7868              LDRB     r0,[r5,#1]            ;80  ; sTARKButteryCnter
0000ea  f1000001          ADD      r0,r0,#1              ;80
0000ee  b2c0              UXTB     r0,r0                 ;80
0000f0  7068              STRB     r0,[r5,#1]            ;80
0000f2  4919              LDR      r1,|L1.344|
0000f4  f9b11000          LDRSH    r1,[r1,#0]            ;81  ; NUMBAT_FSO
0000f8  4288              CMP      r0,r1                 ;81
0000fa  dbe3              BLT      |L1.196|
0000fc  f8858001          STRB     r8,[r5,#1]            ;81
000100  e7e0              B        |L1.196|
;;;84     
                          ENDP

000102  0000              DCW      0x0000
                  |L1.260|
                          DCD      ||.data||
                  |L1.264|
000108  7e323030          DCB      "~20004642E00200FD37\r"
00010c  30343634
000110  32453030
000114  32303046
000118  4433370d
                  |L1.284|
00011c  7e323630          DCB      "~26004642E00202FD2F\r"
000120  30343634
000124  32453030
000128  32303246
00012c  4432460d
                  |L1.304|
000130  7e323630          DCB      "~26004642E00203FD2E\r"
000134  30343634
000138  32453030
00013c  32303346
000140  4432450d
                  |L1.324|
000144  7e323030          DCB      "~20004644E00200FD35\r"
000148  30343634
00014c  34453030
000150  32303046
000154  4433350d
                  |L1.344|
                          DCD      NUMBAT_FSO

                          AREA ||.data||, DATA, ALIGN=1

                  portForSTARKBatteryIsInitiated
000000  00                DCB      0x00
                  sTARKButteryCnter
000001  00                DCB      0x00
                  sTARKBatteryHndlPhase
000002  00                DCB      0x00
                  sTARKRequestPhase
000003  00                DCB      0x00
                  sTARKSilentCnt
                          DCDU     0x00000000
000008  0000              DCB      0x00,0x00

                          AREA ||area_number.5||, DATA, ALIGN=0

                          EXPORTAS ||area_number.5||, ||.data||
                  sTARKBatteryHndlCmnd
000000  00                DCB      0x00
