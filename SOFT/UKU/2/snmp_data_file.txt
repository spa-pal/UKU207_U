; generated by ARM C/C++ Compiler, 4.1 [Build 644]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\EXE\snmp_data_file.o --asm_dir=.\ --list_dir=.\ --depend=.\EXE\snmp_data_file.d --feedback=.\EXE\UKU_220_IPS_TERMOKOMPENSAT.fed --cpu=Cortex-M3 --apcs=interwork -O1 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx -D__MICROLIB -DUKU_220_IPS_TERMOKOMPENSAT -DUKU2071x -DUKU_ZVU --omf_browse=.\EXE\snmp_data_file.crf snmp_data_file.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  datatime2str PROC
;;;972    //-----------------------------------------------
;;;973    void snmp_sernum_write (int mode) 
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;974    {
;;;975    if(mode==MIB_WRITE)
000004  e9dd760a          LDRD     r7,r6,[sp,#0x28]
;;;976    	{
;;;977    	lc640_write_long(EE_AUSW_MAIN_NUMBER,snmp_sernum);
000008  4683              MOV      r11,r0
00000a  468a              MOV      r10,r1
00000c  4691              MOV      r9,r2
00000e  4698              MOV      r8,r3
000010  f04f0214          MOV      r2,#0x14
;;;978    	lc640_write_long(EE_AUSW_UKU_NUMBER,snmp_sernum);
000014  a1f8              ADR      r1,|L1.1016|
000016  48ff              LDR      r0,|L1.1044|
000018  f7fffffe          BL       __aeabi_memcpy
00001c  f04f040a          MOV      r4,#0xa
;;;979    	}
;;;980    }
000020  fbbbf5f4          UDIV     r5,r11,r4
000024  fb04b115          MLS      r1,r4,r5,r11
000028  48fa              LDR      r0,|L1.1044|
00002a  f1010130          ADD      r1,r1,#0x30
00002e  7041              STRB     r1,[r0,#1]
000030  f1050530          ADD      r5,r5,#0x30
000034  7005              STRB     r5,[r0,#0]
000036  49f8              LDR      r1,|L1.1048|
000038  eb01018a          ADD      r1,r1,r10,LSL #2
00003c  880a              LDRH     r2,[r1,#0]
00003e  f8a02003          STRH     r2,[r0,#3]
000042  7889              LDRB     r1,[r1,#2]
000044  7141              STRB     r1,[r0,#5]
000046  fbb9f1f4          UDIV     r1,r9,r4
00004a  fb049211          MLS      r2,r4,r1,r9
00004e  f1020230          ADD      r2,r2,#0x30
000052  7202              STRB     r2,[r0,#8]
000054  f1010130          ADD      r1,r1,#0x30
000058  71c1              STRB     r1,[r0,#7]
00005a  fbb8f1f4          UDIV     r1,r8,r4
00005e  fb048211          MLS      r2,r4,r1,r8
000062  f1020230          ADD      r2,r2,#0x30
000066  7302              STRB     r2,[r0,#0xc]
000068  f1010130          ADD      r1,r1,#0x30
00006c  72c1              STRB     r1,[r0,#0xb]
00006e  fbb7f1f4          UDIV     r1,r7,r4
000072  fb047211          MLS      r2,r4,r1,r7
000076  f1020230          ADD      r2,r2,#0x30
00007a  73c2              STRB     r2,[r0,#0xf]
00007c  f1010130          ADD      r1,r1,#0x30
000080  7381              STRB     r1,[r0,#0xe]
000082  fbb6f1f4          UDIV     r1,r6,r4
000086  fb046211          MLS      r2,r4,r1,r6
00008a  f1020230          ADD      r2,r2,#0x30
00008e  7482              STRB     r2,[r0,#0x12]
000090  f1010130          ADD      r1,r1,#0x30
000094  7441              STRB     r1,[r0,#0x11]
000096  e8bd9ff0          POP      {r4-r12,pc}
;;;981    
                          ENDP

                  event2snmp PROC
;;;1628   //-----------------------------------------------
;;;1629   void event2snmp(char num)
00009a  e92d47f0          PUSH     {r4-r10,lr}
;;;1630   {
00009e  b088              SUB      sp,sp,#0x20
0000a0  4606              MOV      r6,r0
;;;1631   char /*iii,*/index;
;;;1632   char dt[4],dt_[4],dt__[4],dt___[4],dt____[4],dt4[4];
;;;1633   unsigned int tempii;    
;;;1634   
;;;1635   memcpy(&snmp_log[num][0],"                                                                                ",78);
0000a2  48de              LDR      r0,|L1.1052|
0000a4  f04f024e          MOV      r2,#0x4e
0000a8  eb0014c6          ADD      r4,r0,r6,LSL #7
0000ac  49dc              LDR      r1,|L1.1056|
0000ae  4620              MOV      r0,r4
0000b0  f7fffffe          BL       __aeabi_memcpy
;;;1636   //memcpy(&snmp_log[num][0],"BKL",10);
;;;1637   
;;;1638   
;;;1639   		
;;;1640   tempii=lc640_read_int(PTR_EVENT_LOG);
0000b4  f44f6060          MOV      r0,#0xe00
0000b8  f7fffffe          BL       lc640_read_int
;;;1641   tempii=ptr_carry(tempii,64,-1*((signed)num));
0000bc  4272              RSBS     r2,r6,#0
0000be  2140              MOVS     r1,#0x40
0000c0  f7fffffe          BL       ptr_carry
;;;1642   tempii*=32;
0000c4  ea4f1040          LSL      r0,r0,#5
;;;1643   tempii+=EVENT_LOG;
0000c8  f5006080          ADD      r0,r0,#0x400
0000cc  4605              MOV      r5,r0
;;;1644        
;;;1645   lc640_read_long_ptr(tempii,dt);
0000ce  a907              ADD      r1,sp,#0x1c
0000d0  4628              MOV      r0,r5
0000d2  f7fffffe          BL       lc640_read_long_ptr
;;;1646   lc640_read_long_ptr(tempii+4,dt4);
0000d6  a902              ADD      r1,sp,#8
0000d8  1d28              ADDS     r0,r5,#4
0000da  f7fffffe          BL       lc640_read_long_ptr
;;;1647   lc640_read_long_ptr(tempii+8,dt_);
0000de  a906              ADD      r1,sp,#0x18
0000e0  f1050008          ADD      r0,r5,#8
0000e4  f7fffffe          BL       lc640_read_long_ptr
;;;1648   lc640_read_long_ptr(tempii+12,dt__);
0000e8  a905              ADD      r1,sp,#0x14
0000ea  f105000c          ADD      r0,r5,#0xc
0000ee  f7fffffe          BL       lc640_read_long_ptr
;;;1649   lc640_read_long_ptr(tempii+16,dt___);
0000f2  a904              ADD      r1,sp,#0x10
0000f4  f1050010          ADD      r0,r5,#0x10
0000f8  f7fffffe          BL       lc640_read_long_ptr
;;;1650   lc640_read_long_ptr(tempii+20,dt____);
0000fc  a903              ADD      r1,sp,#0xc
0000fe  f1050014          ADD      r0,r5,#0x14
000102  f7fffffe          BL       lc640_read_long_ptr
;;;1651   //iii=find(simbol);
;;;1652        
;;;1653   if(dt[0]=='U')	 		//Включение ИБЭПа
000106  f89d001c          LDRB     r0,[sp,#0x1c]
00010a  2855              CMP      r0,#0x55
00010c  d051              BEQ      |L1.434|
;;;1654       { 
;;;1655       if(dt[2]=='R')
;;;1656   		{
;;;1657   		sprintf((char *)&snmp_log[num][0],"Power on or restart system %2d:%2d:%2d:",dt_[2],dt_[1],dt_[0]);
;;;1658   		}
;;;1659   	}   
;;;1660   
;;;1661        
;;;1662   else if(dt[0]=='P')		//Авария питающей сети
;;;1663   	{
;;;1664   	index=0;
;;;1665        memcpy(&snmp_log[num][index],"Авария питающей сети @  ",23);	
;;;1666   	index+=23;
;;;1667   	memcpy(&snmp_log[num][index],datatime2str(dt_[2],dt_[1],dt_[0],dt__[0],dt__[1],dt__[2]),19);
;;;1668   	index+=19;
;;;1669   	snmp_log[num][index]='@';
;;;1670   	index++;
;;;1671   
;;;1672   	if((dt___[0]=='A')&&(dt___[1]=='A'))
;;;1673   		{
;;;1674   		memcpy(&snmp_log[num][index]," не устранена  ",13);
;;;1675   		index+=13;
;;;1676   		}
;;;1677   	else 
;;;1678   		{
;;;1679   		memcpy(&snmp_log[num][index]," устранена   ",11);
00010e  2720              MOVS     r7,#0x20
000110  f04f0840          MOV      r8,#0x40              ;1641
000114  2850              CMP      r0,#0x50              ;1662
000116  d05e              BEQ      |L1.470|
000118  49c0              LDR      r1,|L1.1052|
00011a  eb0111c6          ADD      r1,r1,r6,LSL #7       ;1635
;;;1680   		index+=11;
;;;1681   			
;;;1682   		memcpy(&snmp_log[num][index],datatime2str(dt___[2],dt___[1],dt___[0],dt____[0],dt____[1],dt____[2]),19);
;;;1683   		}
;;;1684   
;;;1685        }  
;;;1686   
;;;1687   else if(dt[0]=='B')		//События батареи
;;;1688       	{
;;;1689   	index=0;
;;;1690       	if(dt[2]=='C')
;;;1691       		{
;;;1692   		memcpy(&snmp_log[num][index],"Батарея.  Авария!!! @  ",21);
;;;1693   		index+=21;
;;;1694   		memcpy(&snmp_log[num][index],datatime2str(dt_[2],dt_[1],dt_[0],dt__[0],dt__[1],dt__[2]),19);
;;;1695   		index+=19;
;;;1696   		
;;;1697   		snmp_log[num][index]='@';
;;;1698   		index++;
;;;1699   
;;;1700   		memcpy(&snmp_log[num][index],"Батарея не обнаружена, ",22);
00011e  f1010929          ADD      r9,r1,#0x29
000122  3115              ADDS     r1,r1,#0x15           ;1694
000124  468a              MOV      r10,r1                ;1694
000126  2842              CMP      r0,#0x42              ;1687
000128  d07e              BEQ      |L1.552|
;;;1701   		index+=22;
;;;1702   
;;;1703   		if((dt___[0]=='A')&&(dt___[1]=='A'))
;;;1704   			{
;;;1705   			memcpy(&snmp_log[num][index]," не устранена  ",13);
;;;1706   			index+=13;
;;;1707   			}
;;;1708   		else 
;;;1709   			{
;;;1710   			memcpy(&snmp_log[num][index]," устранена   ",11);
;;;1711   			index+=11;
;;;1712   			memcpy(&snmp_log[num][index],datatime2str(dt___[2],dt___[1],dt___[0],dt____[0],dt____[1],dt____[2]),19);
;;;1713   			}
;;;1714   
;;;1715       		}
;;;1716       	if(dt[2]=='Z')
;;;1717       		{
;;;1718   
;;;1719   		memcpy(&snmp_log[num][index],"Батарея.  Выравнивающий заряд @  ",32);
;;;1720   		index+=32;
;;;1721   		memcpy(&snmp_log[num][index],datatime2str(dt_[2],dt_[1],dt_[0],dt__[0],dt__[1],dt__[2]),19);
;;;1722   		index+=19;
;;;1723   		
;;;1724   		snmp_log[num][index]='@';
;;;1725   		index++;
;;;1726   
;;;1727   		if((dt___[0]=='A')&&(dt___[1]=='A'))
;;;1728   			{
;;;1729   			memcpy(&snmp_log[num][index]," не завершен  ",13);
;;;1730   			index+=13;
;;;1731   			}
;;;1732   		else 
;;;1733   			{
;;;1734   			memcpy(&snmp_log[num][index]," завершен   ",11);
;;;1735   			index+=11;
;;;1736   			memcpy(&snmp_log[num][index],datatime2str(dt___[2],dt___[1],dt___[0],dt____[0],dt____[1],dt____[2]),19);
;;;1737   			}
;;;1738   
;;;1739   
;;;1740   /*
;;;1741       		lcd_buffer[iii++]='В';
;;;1742       		lcd_buffer[iii++]='З';
;;;1743       		lcd_buffer[iii++]=' ';    		
;;;1744       		lcd_buffer[iii++]=' ';
;;;1745       		lcd_buffer[iii++]=' ';  
;;;1746       		lcd_buffer[iii++]=' ';
;;;1747       		lcd_buffer[iii++]=' ';
;;;1748       		
;;;1749       		if((dt_[0]==LPC_RTC->YEAR)&&(dt_[1]==LPC_RTC->MONTH)&&(dt_[2]==LPC_RTC->DOM))
;;;1750       			{
;;;1751       	    		lcd_buffer[iii++]='0';
;;;1752       			lcd_buffer[iii++]='!';
;;;1753       	    		lcd_buffer[iii++]=':'; 
;;;1754       			lcd_buffer[iii++]='0';
;;;1755       			lcd_buffer[iii++]='@';
;;;1756       			lcd_buffer[iii++]=':';
;;;1757       			lcd_buffer[iii++]='0';
;;;1758       			lcd_buffer[iii++]='#';
;;;1759       	    		int2lcd(dt__[0],'!',0);
;;;1760       			int2lcd(dt__[1],'@',0);
;;;1761       			int2lcd(dt__[2],'#',0);    		     		
;;;1762       			}	                   
;;;1763    		else      	
;;;1764       			{
;;;1765       	 		lcd_buffer[iii++]=' ';
;;;1766       			lcd_buffer[iii++]='0';
;;;1767       			lcd_buffer[iii++]='!';
;;;1768       			lcd_buffer[iii++]='@'; 
;;;1769       			lcd_buffer[iii++]=' ';
;;;1770       			lcd_buffer[iii++]=' ';
;;;1771       			lcd_buffer[iii++]='0';
;;;1772       			lcd_buffer[iii++]='#';
;;;1773       			int2lcd(dt_[2],'!',0);
;;;1774       			
;;;1775       			int2lcd(dt_[0],'#',0);   
;;;1776       			if(!((dt_[1]>=1)&&(dt_[1]<=12)))dt_[1]=1;
;;;1777   			sub_bgnd(sm_mont[dt_[1]],'@',0);  
;;;1778       			} */ 		
;;;1779       		}    		
;;;1780   /*
;;;1781       	if(dt[2]=='W')
;;;1782       		{
;;;1783       		lcd_buffer[iii++]='Б';
;;;1784       		lcd_buffer[iii++]='а';
;;;1785       		lcd_buffer[iii++]='т';
;;;1786   		if(dt[1]<9)
;;;1787       			{
;;;1788       			lcd_buffer[iii++]=0x31+dt[1];
;;;1789       			lcd_buffer[iii++]='р';
;;;1790       			lcd_buffer[iii++]=' ';
;;;1791       			}
;;;1792       		else if((dt[1]>=9)&&(dt[1]<99))
;;;1793       			{
;;;1794       			lcd_buffer[iii++]=0x30+((dt[1]+1)/10);
;;;1795       			lcd_buffer[iii++]=0x30+((dt[1]+1)%10);
;;;1796       			lcd_buffer[iii++]='р';
;;;1797       			}
;;;1798       		else 
;;;1799       			{
;;;1800       			lcd_buffer[iii++]=' ';
;;;1801       			lcd_buffer[iii++]=' '; 
;;;1802       			lcd_buffer[iii++]=' ';    		
;;;1803       			} 
;;;1804       		lcd_buffer[iii++]=' ';    		
;;;1805       		
;;;1806       		
;;;1807   		
;;;1808       		if((dt_[0]==LPC_RTC->YEAR)&&(dt_[1]==LPC_RTC->MONTH)&&(dt_[2]==LPC_RTC->DOM))
;;;1809       			{
;;;1810       	    		lcd_buffer[iii++]='0';
;;;1811       			lcd_buffer[iii++]='!';
;;;1812       	    		lcd_buffer[iii++]=':'; 
;;;1813       			lcd_buffer[iii++]='0';
;;;1814       			lcd_buffer[iii++]='@';
;;;1815       			lcd_buffer[iii++]=':';
;;;1816       			lcd_buffer[iii++]='0';
;;;1817       			lcd_buffer[iii++]='#';
;;;1818       	    		int2lcd(dt__[0],'!',0);
;;;1819       			int2lcd(dt__[1],'@',0);
;;;1820       			int2lcd(dt__[2],'#',0);    		     		
;;;1821       			}	                   
;;;1822    		else      	
;;;1823       			{
;;;1824       	 		lcd_buffer[iii++]=' ';
;;;1825       			lcd_buffer[iii++]='0';
;;;1826       			lcd_buffer[iii++]='!';
;;;1827       			lcd_buffer[iii++]='@'; 
;;;1828       			lcd_buffer[iii++]=' ';
;;;1829       			lcd_buffer[iii++]=' ';
;;;1830       			lcd_buffer[iii++]='0';
;;;1831       			lcd_buffer[iii++]='#';
;;;1832       			int2lcd(dt_[2],'!',0);
;;;1833       			
;;;1834       			int2lcd(dt_[0],'#',0);   
;;;1835       			if(!((dt_[1]>=1)&&(dt_[1]<=12)))dt_[1]=1;
;;;1836   			sub_bgnd(sm_mont[dt_[1]],'@',0);  
;;;1837       			}  		
;;;1838       		} */   		
;;;1839    
;;;1840    	if(dt[2]=='K')
;;;1841       		{
;;;1842   
;;;1843   		memcpy(&snmp_log[num][index],"Батарея.  Контроль емкости @  ",29);
;;;1844   		index+=29;
;;;1845   		memcpy(&snmp_log[num][index],datatime2str(dt_[2],dt_[1],dt_[0],dt__[0],dt__[1],dt__[2]),19);
;;;1846   		index+=19;
;;;1847   		
;;;1848   		snmp_log[num][index]='@';
;;;1849   		index++;
;;;1850   
;;;1851   		if((dt___[0]=='A')&&(dt___[1]=='A'))
;;;1852   			{
;;;1853   			memcpy(&snmp_log[num][index]," не завершен  ",13);
;;;1854   			index+=13;
;;;1855   			}
;;;1856   		else 
;;;1857   			{
;;;1858   			short temp_US;
;;;1859   			memcpy(&snmp_log[num][index]," завершен   ",11);
;;;1860   			index+=11;
;;;1861   			memcpy(&snmp_log[num][index],datatime2str(dt___[2],dt___[1],dt___[0],dt____[0],dt____[1],dt____[2]),19);
;;;1862   			memcpy(&snmp_log[num][index],", Uнач   , В, Uкон   , В, Cбат    , А*ч ", 39);
;;;1863   			
;;;1864   			temp_US=dt_[3]+(dt__[3]*256);
;;;1865   
;;;1866   			snmp_log[num][index+10]=(temp_US%10)+0x30;
;;;1867   			temp_US/=10;
;;;1868   			snmp_log[num][index+8]=(temp_US%10)+0x30;
;;;1869   			temp_US/=10;
;;;1870   			if(temp_US)snmp_log[num][index+7]=(temp_US%10)+0x30;
;;;1871   			else snmp_log[num][index+7]=0x20;
;;;1872   
;;;1873   
;;;1874   			temp_US=dt4[2]+(dt4[3]*256);
;;;1875   
;;;1876   			snmp_log[num][index+22]=(temp_US%10)+0x30;
;;;1877   			temp_US/=10;
;;;1878   			snmp_log[num][index+20]=(temp_US%10)+0x30;
;;;1879   			temp_US/=10;
;;;1880   			if(temp_US)snmp_log[num][index+19]=(temp_US%10)+0x30;
;;;1881   			else snmp_log[num][index+19]=0x20;
;;;1882   
;;;1883   
;;;1884   			temp_US=dt4[0]+(dt4[1]*256);
;;;1885   
;;;1886   			snmp_log[num][index+35]=(temp_US%10)+0x30;
;;;1887   			temp_US/=10;
;;;1888   			snmp_log[num][index+33]=(temp_US%10)+0x30;
;;;1889   			temp_US/=10;
;;;1890   			if(temp_US)snmp_log[num][index+32]=(temp_US%10)+0x30;
;;;1891   			else snmp_log[num][index+32]=0x20;
;;;1892   			}
;;;1893   
;;;1894   
;;;1895   
;;;1896   		/*
;;;1897       		lcd_buffer[iii++]='Б';
;;;1898       		lcd_buffer[iii++]='а';
;;;1899       		lcd_buffer[iii++]='т';
;;;1900   		if(dt[1]<9)
;;;1901       			{
;;;1902       			lcd_buffer[iii++]=0x31+dt[1];
;;;1903       			lcd_buffer[iii++]='к';
;;;1904       			lcd_buffer[iii++]='е';
;;;1905       			}
;;;1906       		else if((dt[1]>=9)&&(dt[1]<99))
;;;1907       			{
;;;1908       			lcd_buffer[iii++]=0x30+((dt[1]+1)/10);
;;;1909       			lcd_buffer[iii++]=0x30+((dt[1]+1)%10);
;;;1910       			lcd_buffer[iii++]='к';
;;;1911       			}
;;;1912       		else 
;;;1913       			{
;;;1914       			lcd_buffer[iii++]=' ';
;;;1915       			lcd_buffer[iii++]=' '; 
;;;1916       			lcd_buffer[iii++]=' ';    		
;;;1917       			} 
;;;1918       		lcd_buffer[iii++]=' ';    		
;;;1919       		
;;;1920       		if((dt_[0]==LPC_RTC->YEAR)&&(dt_[1]==LPC_RTC->MONTH)&&(dt_[2]==LPC_RTC->DOM))
;;;1921       			{
;;;1922       	    		lcd_buffer[iii++]='0';
;;;1923       			lcd_buffer[iii++]='!';
;;;1924       	    		lcd_buffer[iii++]=':'; 
;;;1925       			lcd_buffer[iii++]='0';
;;;1926       			lcd_buffer[iii++]='@';
;;;1927       			lcd_buffer[iii++]=':';
;;;1928       			lcd_buffer[iii++]='0';
;;;1929       			lcd_buffer[iii++]='#';
;;;1930       	    		int2lcd(dt__[0],'!',0);
;;;1931       			int2lcd(dt__[1],'@',0);
;;;1932       			int2lcd(dt__[2],'#',0);    		     		
;;;1933       			}	                   
;;;1934    		else      	
;;;1935       			{
;;;1936       	 		lcd_buffer[iii++]=' ';
;;;1937       			lcd_buffer[iii++]='0';
;;;1938       			lcd_buffer[iii++]='!';
;;;1939       			lcd_buffer[iii++]='@'; 
;;;1940       			lcd_buffer[iii++]=' ';
;;;1941       			lcd_buffer[iii++]=' ';
;;;1942       			lcd_buffer[iii++]='0';
;;;1943       			lcd_buffer[iii++]='#';
;;;1944       			int2lcd(dt_[2],'!',0);
;;;1945       			
;;;1946       			int2lcd(dt_[0],'#',0);   
;;;1947       			if(!((dt_[1]>=1)&&(dt_[1]<=12)))dt_[1]=1;
;;;1948   			sub_bgnd(sm_mont[dt_[1]],'@',0);  
;;;1949       			} */ 		
;;;1950       		}    		
;;;1951   
;;;1952       		     	     	
;;;1953       	}     	    
;;;1954        	
;;;1955   else if(dt[0]=='S')
00012a  2853              CMP      r0,#0x53
00012c  d150              BNE      |L1.464|
;;;1956       	{
;;;1957   	index=0;
;;;1958   	memcpy(&snmp_log[num][0],"БПС №      ",6);
00012e  a0bd              ADR      r0,|L1.1060|
000130  6801              LDR      r1,[r0,#0]
000132  6021              STR      r1,[r4,#0]
000134  8880              LDRH     r0,[r0,#4]
000136  80a0              STRH     r0,[r4,#4]
;;;1959   	index=6;
;;;1960   	snmp_log[num][5]=0x31+dt[1];
000138  f89d001d          LDRB     r0,[sp,#0x1d]
00013c  f1000031          ADD      r0,r0,#0x31
000140  7160              STRB     r0,[r4,#5]
;;;1961   	index=7;
;;;1962   	memcpy(&snmp_log[num][index],"   Авария!!!@  ",14);
000142  f1040007          ADD      r0,r4,#7
000146  f04f020e          MOV      r2,#0xe
00014a  a1b9              ADR      r1,|L1.1072|
00014c  f7fffffe          BL       __aeabi_memcpy
;;;1963   	index+=14;
;;;1964   		//memcpy(&snmp_log[num][0/*+num*/],"00/янв/11 00:00:00 @",20);
;;;1965   	memcpy(&snmp_log[num][index],datatime2str(dt_[2],dt_[1],dt_[0],dt__[0],dt__[1],dt__[2]),19);
000150  f89d0016          LDRB     r0,[sp,#0x16]
000154  f89d1015          LDRB     r1,[sp,#0x15]
000158  e9cd1000          STRD     r1,r0,[sp,#0]
00015c  f89d3014          LDRB     r3,[sp,#0x14]
000160  f89d2018          LDRB     r2,[sp,#0x18]
000164  f89d1019          LDRB     r1,[sp,#0x19]
000168  f89d001a          LDRB     r0,[sp,#0x1a]
00016c  f7fffffe          BL       datatime2str
000170  4601              MOV      r1,r0
000172  2213              MOVS     r2,#0x13
000174  4650              MOV      r0,r10
000176  f7fffffe          BL       __aeabi_memcpy
;;;1966   	index+=20;
;;;1967   
;;;1968   	if(dt[2]=='L')
00017a  f89d001e          LDRB     r0,[sp,#0x1e]
00017e  284c              CMP      r0,#0x4c
000180  d075              BEQ      |L1.622|
;;;1969   		{
;;;1970   		memcpy(&snmp_log[num][40],"@отключился             ",20);
;;;1971   		index=65;
;;;1972   		}
;;;1973   	else if(dt[2]=='T')
000182  2854              CMP      r0,#0x54
000184  d074              BEQ      |L1.624|
;;;1974   		{
;;;1975   		memcpy(&snmp_log[num][index],"@ перегрев   ",10);
;;;1976   		index+=10;
;;;1977   		}		
;;;1978   	else if(dt[2]=='U')
000186  2855              CMP      r0,#0x55
000188  d073              BEQ      |L1.626|
;;;1979   		{
;;;1980   		memcpy(&snmp_log[num][index],"@ завышено Uвых.  ",16);
;;;1981   		index+=16;
;;;1982   		}		
;;;1983   	else if(dt[2]=='u')
00018a  2875              CMP      r0,#0x75
00018c  d072              BEQ      |L1.628|
;;;1984   		{
;;;1985   		memcpy(&snmp_log[num][index],"@ занижено Uвых.  ",16);
;;;1986   		index+=16;
;;;1987   		}
;;;1988   	else 		
;;;1989   		{
;;;1990   		memcpy(&snmp_log[num][index],"@ фигня  ",7);
00018e  a0ac              ADR      r0,|L1.1088|
000190  6801              LDR      r1,[r0,#0]
000192  f8c41029          STR      r1,[r4,#0x29]
000196  8880              LDRH     r0,[r0,#4]
000198  f8a4002d          STRH     r0,[r4,#0x2d]
00019c  f04f00ff          MOV      r0,#0xff
0001a0  f884002f          STRB     r0,[r4,#0x2f]
;;;1991   		index+=7;
0001a4  f04f0530          MOV      r5,#0x30
                  |L1.424|
;;;1992   		}
;;;1993   
;;;1994   
;;;1995   	if((dt___[0]=='A')&&(dt___[1]=='A'))
0001a8  f89d0010          LDRB     r0,[sp,#0x10]
0001ac  2841              CMP      r0,#0x41
0001ae  d07d              BEQ      |L1.684|
0001b0  e2b3              B        |L1.1818|
                  |L1.434|
0001b2  f89d001e          LDRB     r0,[sp,#0x1e]         ;1655
0001b6  2852              CMP      r0,#0x52              ;1655
0001b8  d10a              BNE      |L1.464|
0001ba  f89d0018          LDRB     r0,[sp,#0x18]         ;1657
0001be  9000              STR      r0,[sp,#0]            ;1657
0001c0  f89d3019          LDRB     r3,[sp,#0x19]         ;1657
0001c4  f89d201a          LDRB     r2,[sp,#0x1a]         ;1657
0001c8  a1a0              ADR      r1,|L1.1100|
0001ca  4620              MOV      r0,r4                 ;1657
0001cc  f7fffffe          BL       __2sprintf
                  |L1.464|
;;;1996   		{
;;;1997   		memcpy(&snmp_log[num][index],", не устранена  ",15);
;;;1998   		index+=15;
;;;1999   		}
;;;2000   	else 
;;;2001   		{
;;;2002   		memcpy(&snmp_log[num][index],",  устранена   ",13);
;;;2003   		index+=13;
;;;2004   			
;;;2005   		memcpy(&snmp_log[num][index],datatime2str(dt___[2],dt___[1],dt___[0],dt____[0],dt____[1],dt____[2]),19);
;;;2006   
;;;2007   
;;;2008   		    /*
;;;2009   			ptrs[4]="  0[]  0< 0>:0=:0)  ";
;;;2010   			bgnd_par(ptrs[index_set],ptrs[1+index_set],ptrs[2+index_set],ptrs[3+index_set]);
;;;2011   			int2lcd(av_data_off[4],'>',0);
;;;2012   			int2lcd(av_data_off[5],'=',0);
;;;2013   			int2lcd(av_data_off[6],')',0);
;;;2014   			int2lcd(av_data_off[2],'[',0);
;;;2015   			int2lcd(av_data_off[0],'<',0); 
;;;2016   			if(!((av_data_off[1]>=1)&&(av_data_off[1]<=12)))av_data_off[1]=1;
;;;2017   			sub_bgnd(sm_mont[av_data_off[1]],']',0);   */
;;;2018   
;;;2019   
;;;2020   
;;;2021   
;;;2022   
;;;2023    /*
;;;2024   		ptrs[0]="   Авария БПС N+    ";
;;;2025   		
;;;2026   		if(av_head[2]=='L')
;;;2027   			{
;;;2028   			ptrs[1]="     отключился     ";
;;;2029   			}
;;;2030   		else if(av_head[2]=='T')
;;;2031   			{
;;;2032   			ptrs[1]="      перегрев      ";
;;;2033   			}		
;;;2034   		else if(av_head[2]=='U')
;;;2035   			{
;;;2036   			ptrs[1]="   завышено Uвых.   ";
;;;2037   			}		
;;;2038   		else if(av_head[2]=='u')
;;;2039   			{
;;;2040   			ptrs[1]="   занижено Uвых.   ";
;;;2041   			}								
;;;2042   		
;;;2043   		
;;;2044   		ptrs[2]="  0%(  0^ 0@:0#:0$  ";
;;;2045   			
;;;2046   						
;;;2047   			}	
;;;2048   		int2lcd(av_head[1]+1,'+',0);
;;;2049   		int2lcd(av_data_on[4],'@',0);
;;;2050   		int2lcd(av_data_on[5],'#',0);
;;;2051   		int2lcd(av_data_on[6],'$',0);
;;;2052   		int2lcd(av_data_on[2],'%',0);
;;;2053   		int2lcd(av_data_on[0],'^',0); 
;;;2054   		if(!((av_data_on[1]>=1)&&(av_data_on[1]<=12)))av_data_on[1]=1;
;;;2055   		sub_bgnd(sm_mont[av_data_on[1]],'(',0);
;;;2056   		*/
;;;2057   	    }
;;;2058   
;;;2059   
;;;2060   
;;;2061   /*    	lcd_buffer[iii++]='Б';
;;;2062       	lcd_buffer[iii++]='П';
;;;2063       	lcd_buffer[iii++]='С';
;;;2064    	if(dt[1]<9)
;;;2065       		{
;;;2066       		lcd_buffer[iii++]=0x31+dt[1];
;;;2067       		lcd_buffer[iii++]=' ';
;;;2068       		}
;;;2069       	else if((dt[1]>=9)&&(dt[1]<99))
;;;2070       		{
;;;2071       		lcd_buffer[iii++]=0x30+((dt[1]+1)/10);
;;;2072       		lcd_buffer[iii++]=0x30+((dt[1]+1)%10);
;;;2073       		}
;;;2074       	else 
;;;2075       		{
;;;2076       		lcd_buffer[iii++]=' ';
;;;2077       		lcd_buffer[iii++]=' ';     		
;;;2078       		} 
;;;2079       	lcd_buffer[iii++]=' '; 
;;;2080       	lcd_buffer[iii++]=' ';
;;;2081       	
;;;2082       	if((dt_[0]==LPC_RTC->YEAR)&&(dt_[1]==LPC_RTC->MONTH)&&(dt_[2]==LPC_RTC->DOM))
;;;2083       		{
;;;2084       	    	lcd_buffer[iii++]='0';
;;;2085       		lcd_buffer[iii++]='!';
;;;2086       	    	lcd_buffer[iii++]=':'; 
;;;2087       		lcd_buffer[iii++]='0';
;;;2088       		lcd_buffer[iii++]='@';
;;;2089       		lcd_buffer[iii++]=':';
;;;2090       		lcd_buffer[iii++]='0';
;;;2091       		lcd_buffer[iii++]='#';
;;;2092       	    	int2lcd(dt__[0],'!',0);
;;;2093       		int2lcd(dt__[1],'@',0);
;;;2094       		int2lcd(dt__[2],'#',0);    		     		
;;;2095       		}	                   
;;;2096    	else      	
;;;2097       		{
;;;2098       	 	lcd_buffer[iii++]=' ';
;;;2099       		lcd_buffer[iii++]='0';
;;;2100       		lcd_buffer[iii++]='!';
;;;2101       		lcd_buffer[iii++]='@'; 
;;;2102       		lcd_buffer[iii++]=' ';
;;;2103       		lcd_buffer[iii++]=' ';
;;;2104       		lcd_buffer[iii++]='0';
;;;2105       		lcd_buffer[iii++]='#';
;;;2106       		int2lcd(dt_[2],'!',0);
;;;2107       		int2lcd(dt_[0],'#',0);   
;;;2108       		if(!((dt_[1]>=1)&&(dt_[1]<=12)))dt_[1]=1;
;;;2109   		sub_bgnd(sm_mont[dt_[1]],'@',0);  
;;;2110   		} */   	
;;;2111       	}
;;;2112     /*   	
;;;2113   else if(dt[0]=='B')
;;;2114       	{
;;;2115       	lcd_buffer[iii++]='Б';
;;;2116       	lcd_buffer[iii++]='а';
;;;2117       	lcd_buffer[iii++]='т';
;;;2118    	if(dt[1]<9)
;;;2119       		{
;;;2120       		lcd_buffer[iii++]=0x31+dt[1];
;;;2121       		lcd_buffer[iii++]=' ';
;;;2122       		}
;;;2123       	else if((dt[1]>=9)&&(dt[1]<99))
;;;2124       		{
;;;2125       		lcd_buffer[iii++]=0x30+((dt[1]+1)/10);
;;;2126       		lcd_buffer[iii++]=0x30+((dt[1]+1)%10);
;;;2127       		}
;;;2128       	else 
;;;2129       		{
;;;2130       		lcd_buffer[iii++]=' ';
;;;2131       		lcd_buffer[iii++]=' ';     		
;;;2132       		} 
;;;2133       	lcd_buffer[iii++]=' ';
;;;2134       	}     	    
;;;2135   else if(dt[0]=='I')
;;;2136       	{
;;;2137       	lcd_buffer[iii++]='И';
;;;2138       	lcd_buffer[iii++]='н';
;;;2139       	lcd_buffer[iii++]='в';
;;;2140   	if(dt[1]<9)
;;;2141       		{
;;;2142       		lcd_buffer[iii++]=0x31+dt[1];
;;;2143       		lcd_buffer[iii++]=' ';
;;;2144       		}
;;;2145       	else if((dt[1]>=9)&&(dt[1]<99))
;;;2146       		{
;;;2147       		lcd_buffer[iii++]=0x30+((dt[1]+1)/10);
;;;2148       		lcd_buffer[iii++]=0x30+((dt[1]+1)%10);
;;;2149       		}
;;;2150       	else 
;;;2151       		{
;;;2152       		lcd_buffer[iii++]=' ';
;;;2153       		lcd_buffer[iii++]=' ';     		
;;;2154       		} 
;;;2155       	lcd_buffer[iii++]=' ';
;;;2156       	} */   
;;;2157   }
0001d0  b008              ADD      sp,sp,#0x20
0001d2  e8bd87f0          POP      {r4-r10,pc}
                  |L1.470|
0001d6  2217              MOVS     r2,#0x17              ;1665
0001d8  a1a6              ADR      r1,|L1.1140|
0001da  4620              MOV      r0,r4                 ;1665
0001dc  f7fffffe          BL       __aeabi_memcpy
0001e0  f89d0016          LDRB     r0,[sp,#0x16]         ;1667
0001e4  f89d1015          LDRB     r1,[sp,#0x15]         ;1667
0001e8  e9cd1000          STRD     r1,r0,[sp,#0]         ;1667
0001ec  f89d3014          LDRB     r3,[sp,#0x14]         ;1667
0001f0  f89d2018          LDRB     r2,[sp,#0x18]         ;1667
0001f4  f89d1019          LDRB     r1,[sp,#0x19]         ;1667
0001f8  f89d001a          LDRB     r0,[sp,#0x1a]         ;1667
0001fc  f7fffffe          BL       datatime2str
000200  4601              MOV      r1,r0                 ;1667
000202  f1040017          ADD      r0,r4,#0x17           ;1667
000206  2213              MOVS     r2,#0x13              ;1667
000208  f7fffffe          BL       __aeabi_memcpy
00020c  f884802a          STRB     r8,[r4,#0x2a]         ;1669
000210  4882              LDR      r0,|L1.1052|
000212  f89d2010          LDRB     r2,[sp,#0x10]         ;1672
000216  eb0010c6          ADD      r0,r0,r6,LSL #7       ;1635
00021a  302b              ADDS     r0,r0,#0x2b           ;1674
00021c  2a41              CMP      r2,#0x41              ;1672
00021e  d105              BNE      |L1.556|
000220  f89d1011          LDRB     r1,[sp,#0x11]         ;1672
000224  2941              CMP      r1,#0x41              ;1672
000226  e000              B        |L1.554|
                  |L1.552|
000228  e02a              B        |L1.640|
                  |L1.554|
00022a  d024              BEQ      |L1.630|
                  |L1.556|
00022c  a098              ADR      r0,|L1.1168|
00022e  6801              LDR      r1,[r0,#0]            ;1679
000230  f8c4102b          STR      r1,[r4,#0x2b]         ;1679
000234  6841              LDR      r1,[r0,#4]            ;1679
000236  f8c4102f          STR      r1,[r4,#0x2f]         ;1679
00023a  8900              LDRH     r0,[r0,#8]            ;1679
00023c  f8a40033          STRH     r0,[r4,#0x33]         ;1679
000240  f8847035          STRB     r7,[r4,#0x35]         ;1679
000244  f89d000e          LDRB     r0,[sp,#0xe]          ;1682
000248  f89d100d          LDRB     r1,[sp,#0xd]          ;1682
00024c  e9cd1000          STRD     r1,r0,[sp,#0]         ;1682
000250  f89d300c          LDRB     r3,[sp,#0xc]          ;1682
000254  f89d1011          LDRB     r1,[sp,#0x11]         ;1682
000258  f89d0012          LDRB     r0,[sp,#0x12]         ;1682
00025c  f7fffffe          BL       datatime2str
000260  4601              MOV      r1,r0                 ;1682
000262  f1040036          ADD      r0,r4,#0x36           ;1682
000266  2213              MOVS     r2,#0x13              ;1682
000268  f7fffffe          BL       __aeabi_memcpy
                  |L1.620|
00026c  e7b0              B        |L1.464|
                  |L1.622|
00026e  e22a              B        |L1.1734|
                  |L1.624|
000270  e232              B        |L1.1752|
                  |L1.626|
000272  e23e              B        |L1.1778|
                  |L1.628|
000274  e245              B        |L1.1794|
                  |L1.630|
000276  220d              MOVS     r2,#0xd               ;1674
000278  a189              ADR      r1,|L1.1184|
00027a  f7fffffe          BL       __aeabi_memcpy
00027e  e7a7              B        |L1.464|
                  |L1.640|
000280  f04f0500          MOV      r5,#0                 ;1689
000284  f89d001e          LDRB     r0,[sp,#0x1e]         ;1690
000288  2843              CMP      r0,#0x43              ;1690
00028a  d150              BNE      |L1.814|
00028c  2215              MOVS     r2,#0x15              ;1692
00028e  a188              ADR      r1,|L1.1200|
000290  4620              MOV      r0,r4                 ;1692
000292  f7fffffe          BL       __aeabi_memcpy
000296  f89d0016          LDRB     r0,[sp,#0x16]         ;1694
00029a  f89d1015          LDRB     r1,[sp,#0x15]         ;1694
00029e  e9cd1000          STRD     r1,r0,[sp,#0]         ;1694
0002a2  f89d3014          LDRB     r3,[sp,#0x14]         ;1694
0002a6  f89d2018          LDRB     r2,[sp,#0x18]         ;1694
0002aa  e000              B        |L1.686|
                  |L1.684|
0002ac  e231              B        |L1.1810|
                  |L1.686|
0002ae  f89d1019          LDRB     r1,[sp,#0x19]         ;1694
0002b2  f89d001a          LDRB     r0,[sp,#0x1a]         ;1694
0002b6  f7fffffe          BL       datatime2str
0002ba  4601              MOV      r1,r0                 ;1694
0002bc  2213              MOVS     r2,#0x13              ;1694
0002be  4650              MOV      r0,r10                ;1694
0002c0  f7fffffe          BL       __aeabi_memcpy
0002c4  f8848028          STRB     r8,[r4,#0x28]         ;1697
0002c8  2216              MOVS     r2,#0x16              ;1700
0002ca  a17f              ADR      r1,|L1.1224|
0002cc  4648              MOV      r0,r9                 ;1700
0002ce  f7fffffe          BL       __aeabi_memcpy
0002d2  4852              LDR      r0,|L1.1052|
0002d4  f89d2010          LDRB     r2,[sp,#0x10]         ;1703
0002d8  eb0010c6          ADD      r0,r0,r6,LSL #7       ;1635
0002dc  303f              ADDS     r0,r0,#0x3f           ;1705
0002de  2a41              CMP      r2,#0x41              ;1703
0002e0  d103              BNE      |L1.746|
0002e2  f89d1011          LDRB     r1,[sp,#0x11]         ;1703
0002e6  2941              CMP      r1,#0x41              ;1703
0002e8  d026              BEQ      |L1.824|
                  |L1.746|
0002ea  a069              ADR      r0,|L1.1168|
0002ec  6801              LDR      r1,[r0,#0]            ;1710
0002ee  f8c4103f          STR      r1,[r4,#0x3f]         ;1710
0002f2  6841              LDR      r1,[r0,#4]            ;1710
0002f4  f8c41043          STR      r1,[r4,#0x43]         ;1710
0002f8  8900              LDRH     r0,[r0,#8]            ;1710
0002fa  f8a40047          STRH     r0,[r4,#0x47]         ;1710
0002fe  f8847049          STRB     r7,[r4,#0x49]         ;1710
000302  f04f054a          MOV      r5,#0x4a              ;1711
000306  f89d000e          LDRB     r0,[sp,#0xe]          ;1712
00030a  f89d100d          LDRB     r1,[sp,#0xd]          ;1712
00030e  e9cd1000          STRD     r1,r0,[sp,#0]         ;1712
000312  f89d300c          LDRB     r3,[sp,#0xc]          ;1712
000316  f89d1011          LDRB     r1,[sp,#0x11]         ;1712
00031a  f89d0012          LDRB     r0,[sp,#0x12]         ;1712
00031e  f7fffffe          BL       datatime2str
000322  4601              MOV      r1,r0                 ;1712
000324  f104004a          ADD      r0,r4,#0x4a           ;1712
000328  2213              MOVS     r2,#0x13              ;1712
00032a  f7fffffe          BL       __aeabi_memcpy
                  |L1.814|
00032e  f89d001e          LDRB     r0,[sp,#0x1e]         ;1716
000332  285a              CMP      r0,#0x5a              ;1716
000334  d007              BEQ      |L1.838|
000336  e053              B        |L1.992|
                  |L1.824|
000338  220d              MOVS     r2,#0xd               ;1705
00033a  a159              ADR      r1,|L1.1184|
00033c  f7fffffe          BL       __aeabi_memcpy
000340  f04f054c          MOV      r5,#0x4c              ;1706
000344  e7f3              B        |L1.814|
                  |L1.838|
000346  1960              ADDS     r0,r4,r5              ;1719
000348  2220              MOVS     r2,#0x20              ;1719
00034a  a165              ADR      r1,|L1.1248|
00034c  f7fffffe          BL       __aeabi_memcpy
000350  f1050520          ADD      r5,r5,#0x20           ;1720
000354  b2ed              UXTB     r5,r5                 ;1720
000356  f89d0016          LDRB     r0,[sp,#0x16]         ;1721
00035a  f89d1015          LDRB     r1,[sp,#0x15]         ;1721
00035e  e9cd1000          STRD     r1,r0,[sp,#0]         ;1721
000362  f89d3014          LDRB     r3,[sp,#0x14]         ;1721
000366  f89d2018          LDRB     r2,[sp,#0x18]         ;1721
00036a  f89d1019          LDRB     r1,[sp,#0x19]         ;1721
00036e  f89d001a          LDRB     r0,[sp,#0x1a]         ;1721
000372  f7fffffe          BL       datatime2str
000376  4601              MOV      r1,r0                 ;1721
000378  1960              ADDS     r0,r4,r5              ;1721
00037a  2213              MOVS     r2,#0x13              ;1721
00037c  f7fffffe          BL       __aeabi_memcpy
000380  f1050513          ADD      r5,r5,#0x13           ;1722
000384  b2e8              UXTB     r0,r5                 ;1722
000386  f8048000          STRB     r8,[r4,r0]            ;1724
00038a  f1000001          ADD      r0,r0,#1              ;1725
00038e  b2c5              UXTB     r5,r0                 ;1725
000390  f89d2010          LDRB     r2,[sp,#0x10]         ;1727
000394  2a41              CMP      r2,#0x41              ;1727
000396  d103              BNE      |L1.928|
000398  f89d0011          LDRB     r0,[sp,#0x11]         ;1727
00039c  2841              CMP      r0,#0x41              ;1727
00039e  d02a              BEQ      |L1.1014|
                  |L1.928|
0003a0  a158              ADR      r1,|L1.1284|
0003a2  eb040005          ADD      r0,r4,r5              ;1734
0003a6  680b              LDR      r3,[r1,#0]            ;1734
0003a8  6003              STR      r3,[r0,#0]            ;1734
0003aa  684b              LDR      r3,[r1,#4]            ;1734
0003ac  6043              STR      r3,[r0,#4]            ;1734
0003ae  8909              LDRH     r1,[r1,#8]            ;1734
0003b0  8101              STRH     r1,[r0,#8]            ;1734
0003b2  7287              STRB     r7,[r0,#0xa]          ;1734
0003b4  f105050b          ADD      r5,r5,#0xb            ;1735
0003b8  b2ed              UXTB     r5,r5                 ;1735
0003ba  f89d000e          LDRB     r0,[sp,#0xe]          ;1736
0003be  f89d100d          LDRB     r1,[sp,#0xd]          ;1736
0003c2  e9cd1000          STRD     r1,r0,[sp,#0]         ;1736
0003c6  f89d300c          LDRB     r3,[sp,#0xc]          ;1736
0003ca  f89d1011          LDRB     r1,[sp,#0x11]         ;1736
0003ce  f89d0012          LDRB     r0,[sp,#0x12]         ;1736
0003d2  f7fffffe          BL       datatime2str
0003d6  4601              MOV      r1,r0                 ;1736
0003d8  1960              ADDS     r0,r4,r5              ;1736
0003da  2213              MOVS     r2,#0x13              ;1736
0003dc  f7fffffe          BL       __aeabi_memcpy
                  |L1.992|
0003e0  f89d001e          LDRB     r0,[sp,#0x1e]         ;1840
0003e4  284b              CMP      r0,#0x4b              ;1840
0003e6  f47faf41          BNE      |L1.620|
0003ea  1960              ADDS     r0,r4,r5              ;1843
0003ec  221d              MOVS     r2,#0x1d              ;1843
0003ee  a149              ADR      r1,|L1.1300|
0003f0  f7fffffe          BL       __aeabi_memcpy
0003f4  e09e              B        |L1.1332|
                  |L1.1014|
0003f6  e0c2              B        |L1.1406|
                  |L1.1016|
0003f8  30302fff          DCB      "00/",255,237,226,"/00  00:00:00       ",0
0003fc  ede22f30
000400  30202030
000404  303a3030
000408  3a303020
00040c  20202020
000410  202000  
000413  00                DCB      0
                  |L1.1044|
                          DCD      ||.bss||
                  |L1.1048|
                          DCD      sm_mont
                  |L1.1052|
                          DCD      ||.data||+0x194
                  |L1.1056|
                          DCD      ||.constdata||
                  |L1.1060|
000424  c1cfd120          DCB      193,207,209," ",185,"      ",0
000428  b9202020
00042c  20202000
                  |L1.1072|
000430  202020c0          DCB      "   ",192,226,224,240,232,255,"!!!@  ",0
000434  e2e0f0e8
000438  ff212121
00043c  40202000
                  |L1.1088|
000440  4020f4e8          DCB      "@ ",244,232,227,237,255,"  ",0
000444  e3edff20
000448  2000    
00044a  00                DCB      0
00044b  00                DCB      0
                  |L1.1100|
00044c  506f7765          DCB      "Power on or restart system %2d:%2d:%2d:",0
000450  72206f6e
000454  206f7220
000458  72657374
00045c  61727420
000460  73797374
000464  656d2025
000468  32643a25
00046c  32643a25
000470  32643a00
                  |L1.1140|
000474  c0e2e0f0          DCB      192,226,224,240,232,255," ",239,232,242,224,254,249,229,233
000478  e8ff20ef
00047c  e8f2e0fe
000480  f9e5e9  
000483  20f1e5f2          DCB      " ",241,229,242,232," @  ",0
000487  e8204020
00048b  2000    
00048d  00                DCB      0
00048e  00                DCB      0
00048f  00                DCB      0
                  |L1.1168|
000490  20f3f1f2          DCB      " ",243,241,242,240,224,237,229,237,224,"   ",0
000494  f0e0ede5
000498  ede02020
00049c  2000    
00049e  00                DCB      0
00049f  00                DCB      0
                  |L1.1184|
0004a0  20ede520          DCB      " ",237,229," ",243,241,242,240,224,237,229,237,224,"  ",0
0004a4  f3f1f2f0
0004a8  e0ede5ed
0004ac  e0202000
                  |L1.1200|
0004b0  c1e0f2e0          DCB      193,224,242,224,240,229,255,".  ",192,226,224,240,232,255
0004b4  f0e5ff2e
0004b8  2020c0e2
0004bc  e0f0e8ff
0004c0  21212120          DCB      "!!! @  ",0
0004c4  40202000
                  |L1.1224|
0004c8  c1e0f2e0          DCB      193,224,242,224,240,229,255," ",237,229," ",238,225,237,224
0004cc  f0e5ff20
0004d0  ede520ee
0004d4  e1ede0  
0004d7  f0f3e6e5          DCB      240,243,230,229,237,224,", ",0
0004db  ede02c20
0004df  00      
                  |L1.1248|
0004e0  c1e0f2e0          DCB      193,224,242,224,240,229,255,".  ",194,251,240,224,226,237
0004e4  f0e5ff2e
0004e8  2020c2fb
0004ec  f0e0e2ed
0004f0  e8e2e0fe          DCB      232,226,224,254,249,232,233," ",231,224,240,255,228," @ "
0004f4  f9e8e920
0004f8  e7e0f0ff
0004fc  e4204020
000500  2000              DCB      " ",0
000502  00                DCB      0
000503  00                DCB      0
                  |L1.1284|
000504  20e7e0e2          DCB      " ",231,224,226,229,240,248,229,237,"   ",0
000508  e5f0f8e5
00050c  ed202020
000510  00      
000511  00                DCB      0
000512  00                DCB      0
000513  00                DCB      0
                  |L1.1300|
000514  c1e0f2e0          DCB      193,224,242,224,240,229,255,".  ",202,238,237,242,240,238
000518  f0e5ff2e
00051c  2020caee
000520  edf2f0ee
000524  ebfc20e5          DCB      235,252," ",229,236,234,238,241,242,232," @  ",0
000528  eceaeef1
00052c  f2e82040
000530  202000  
000533  00                DCB      0
                  |L1.1332|
000534  f105051d          ADD      r5,r5,#0x1d           ;1844
000538  b2ed              UXTB     r5,r5                 ;1844
00053a  f89d0016          LDRB     r0,[sp,#0x16]         ;1845
00053e  f89d1015          LDRB     r1,[sp,#0x15]         ;1845
000542  e9cd1000          STRD     r1,r0,[sp,#0]         ;1845
000546  f89d3014          LDRB     r3,[sp,#0x14]         ;1845
00054a  f89d2018          LDRB     r2,[sp,#0x18]         ;1845
00054e  f89d1019          LDRB     r1,[sp,#0x19]         ;1845
000552  f89d001a          LDRB     r0,[sp,#0x1a]         ;1845
000556  f7fffffe          BL       datatime2str
00055a  4601              MOV      r1,r0                 ;1845
00055c  1960              ADDS     r0,r4,r5              ;1845
00055e  2213              MOVS     r2,#0x13              ;1845
000560  f7fffffe          BL       __aeabi_memcpy
000564  f1050513          ADD      r5,r5,#0x13           ;1846
000568  b2e8              UXTB     r0,r5                 ;1846
00056a  f8048000          STRB     r8,[r4,r0]            ;1848
00056e  f1000001          ADD      r0,r0,#1              ;1849
000572  b2c1              UXTB     r1,r0                 ;1849
000574  f89d2010          LDRB     r2,[sp,#0x10]         ;1851
000578  2a41              CMP      r2,#0x41              ;1851
00057a  d009              BEQ      |L1.1424|
00057c  e00c              B        |L1.1432|
                  |L1.1406|
00057e  1960              ADDS     r0,r4,r5              ;1729
000580  220d              MOVS     r2,#0xd               ;1729
000582  a1ff              ADR      r1,|L1.2432|
000584  f7fffffe          BL       __aeabi_memcpy
000588  f105050d          ADD      r5,r5,#0xd            ;1730
00058c  b2ed              UXTB     r5,r5                 ;1730
00058e  e727              B        |L1.992|
                  |L1.1424|
000590  f89d0011          LDRB     r0,[sp,#0x11]         ;1851
000594  2841              CMP      r0,#0x41              ;1851
000596  d048              BEQ      |L1.1578|
                  |L1.1432|
000598  eb040001          ADD      r0,r4,r1              ;1859
00059c  f2af039c          ADR      r3,|L1.1284|
0005a0  681d              LDR      r5,[r3,#0]            ;1859
0005a2  6005              STR      r5,[r0,#0]            ;1859
0005a4  685d              LDR      r5,[r3,#4]            ;1859
0005a6  6045              STR      r5,[r0,#4]            ;1859
0005a8  891b              LDRH     r3,[r3,#8]            ;1859
0005aa  8103              STRH     r3,[r0,#8]            ;1859
0005ac  7287              STRB     r7,[r0,#0xa]          ;1859
0005ae  f101010b          ADD      r1,r1,#0xb            ;1860
0005b2  b2cd              UXTB     r5,r1                 ;1860
0005b4  f89d000e          LDRB     r0,[sp,#0xe]          ;1861
0005b8  f89d100d          LDRB     r1,[sp,#0xd]          ;1861
0005bc  e9cd1000          STRD     r1,r0,[sp,#0]         ;1861
0005c0  f89d300c          LDRB     r3,[sp,#0xc]          ;1861
0005c4  f89d1011          LDRB     r1,[sp,#0x11]         ;1861
0005c8  f89d0012          LDRB     r0,[sp,#0x12]         ;1861
0005cc  f7fffffe          BL       datatime2str
0005d0  4601              MOV      r1,r0                 ;1861
0005d2  442c              ADD      r4,r4,r5              ;1861
0005d4  2213              MOVS     r2,#0x13              ;1861
0005d6  4620              MOV      r0,r4                 ;1861
0005d8  f7fffffe          BL       __aeabi_memcpy
0005dc  2227              MOVS     r2,#0x27              ;1862
0005de  a1ec              ADR      r1,|L1.2448|
0005e0  4620              MOV      r0,r4                 ;1862
0005e2  f7fffffe          BL       __aeabi_memcpy
0005e6  f89d001b          LDRB     r0,[sp,#0x1b]         ;1864
0005ea  f89d1017          LDRB     r1,[sp,#0x17]         ;1864
0005ee  eb002001          ADD      r0,r0,r1,LSL #8       ;1864
0005f2  b202              SXTH     r2,r0                 ;1864
0005f4  f04f010a          MOV      r1,#0xa               ;1866
0005f8  fb92f0f1          SDIV     r0,r2,r1              ;1866
0005fc  fb012210          MLS      r2,r1,r0,r2           ;1866
000600  f1020230          ADD      r2,r2,#0x30           ;1866
000604  72a2              STRB     r2,[r4,#0xa]          ;1866
000606  b202              SXTH     r2,r0                 ;1867
000608  fb92f0f1          SDIV     r0,r2,r1              ;1868
00060c  fb012210          MLS      r2,r1,r0,r2           ;1868
000610  f1020230          ADD      r2,r2,#0x30           ;1868
000614  7222              STRB     r2,[r4,#8]            ;1868
000616  b200              SXTH     r0,r0                 ;1869
000618  b168              CBZ      r0,|L1.1590|
00061a  fb90f2f1          SDIV     r2,r0,r1              ;1870
00061e  fb010012          MLS      r0,r1,r2,r0           ;1870
000622  f1000030          ADD      r0,r0,#0x30           ;1870
000626  71e0              STRB     r0,[r4,#7]            ;1870
000628  e006              B        |L1.1592|
                  |L1.1578|
00062a  1860              ADDS     r0,r4,r1              ;1853
00062c  220d              MOVS     r2,#0xd               ;1853
00062e  a1d4              ADR      r1,|L1.2432|
000630  f7fffffe          BL       __aeabi_memcpy
000634  e5cc              B        |L1.464|
                  |L1.1590|
000636  71e7              STRB     r7,[r4,#7]            ;1871
                  |L1.1592|
000638  f89d000a          LDRB     r0,[sp,#0xa]          ;1874
00063c  f89d200b          LDRB     r2,[sp,#0xb]          ;1874
000640  eb002002          ADD      r0,r0,r2,LSL #8       ;1874
000644  b200              SXTH     r0,r0                 ;1874
000646  fb90f2f1          SDIV     r2,r0,r1              ;1876
00064a  fb010012          MLS      r0,r1,r2,r0           ;1876
00064e  f1000030          ADD      r0,r0,#0x30           ;1876
000652  75a0              STRB     r0,[r4,#0x16]         ;1876
000654  b210              SXTH     r0,r2                 ;1877
000656  fb90f2f1          SDIV     r2,r0,r1              ;1878
00065a  fb010012          MLS      r0,r1,r2,r0           ;1878
00065e  f1000030          ADD      r0,r0,#0x30           ;1878
000662  7520              STRB     r0,[r4,#0x14]         ;1878
000664  b210              SXTH     r0,r2                 ;1879
000666  b138              CBZ      r0,|L1.1656|
000668  fb90f2f1          SDIV     r2,r0,r1              ;1880
00066c  fb010012          MLS      r0,r1,r2,r0           ;1880
000670  f1000030          ADD      r0,r0,#0x30           ;1880
000674  74e0              STRB     r0,[r4,#0x13]         ;1880
000676  e000              B        |L1.1658|
                  |L1.1656|
000678  74e7              STRB     r7,[r4,#0x13]         ;1881
                  |L1.1658|
00067a  f89d0008          LDRB     r0,[sp,#8]            ;1884
00067e  f89d2009          LDRB     r2,[sp,#9]            ;1884
000682  eb002002          ADD      r0,r0,r2,LSL #8       ;1884
000686  b200              SXTH     r0,r0                 ;1884
000688  fb90f2f1          SDIV     r2,r0,r1              ;1886
00068c  fb010012          MLS      r0,r1,r2,r0           ;1886
000690  f1000030          ADD      r0,r0,#0x30           ;1886
000694  f8840023          STRB     r0,[r4,#0x23]         ;1886
000698  b210              SXTH     r0,r2                 ;1887
00069a  fb90f2f1          SDIV     r2,r0,r1              ;1888
00069e  fb010012          MLS      r0,r1,r2,r0           ;1888
0006a2  f1000030          ADD      r0,r0,#0x30           ;1888
0006a6  f8840021          STRB     r0,[r4,#0x21]         ;1888
0006aa  b210              SXTH     r0,r2                 ;1889
0006ac  b140              CBZ      r0,|L1.1728|
0006ae  fb90f2f1          SDIV     r2,r0,r1              ;1890
0006b2  fb010012          MLS      r0,r1,r2,r0           ;1890
0006b6  f1000030          ADD      r0,r0,#0x30           ;1890
0006ba  f8840020          STRB     r0,[r4,#0x20]         ;1890
0006be  e587              B        |L1.464|
                  |L1.1728|
0006c0  f8847020          STRB     r7,[r4,#0x20]         ;1891
0006c4  e584              B        |L1.464|
                  |L1.1734|
0006c6  f1040028          ADD      r0,r4,#0x28           ;1970
0006ca  2214              MOVS     r2,#0x14              ;1970
0006cc  a1bb              ADR      r1,|L1.2492|
0006ce  f7fffffe          BL       __aeabi_memcpy
0006d2  f04f0541          MOV      r5,#0x41              ;1971
0006d6  e567              B        |L1.424|
                  |L1.1752|
0006d8  a0bf              ADR      r0,|L1.2520|
0006da  6801              LDR      r1,[r0,#0]            ;1975
0006dc  f8c41029          STR      r1,[r4,#0x29]         ;1975
0006e0  6841              LDR      r1,[r0,#4]            ;1975
0006e2  f8c4102d          STR      r1,[r4,#0x2d]         ;1975
0006e6  8900              LDRH     r0,[r0,#8]            ;1975
0006e8  f8a40031          STRH     r0,[r4,#0x31]         ;1975
0006ec  f04f0533          MOV      r5,#0x33              ;1976
0006f0  e55a              B        |L1.424|
                  |L1.1778|
0006f2  2210              MOVS     r2,#0x10              ;1980
0006f4  a1bc              ADR      r1,|L1.2536|
0006f6  4648              MOV      r0,r9                 ;1980
0006f8  f7fffffe          BL       __aeabi_memcpy
0006fc  f04f0539          MOV      r5,#0x39              ;1981
000700  e552              B        |L1.424|
                  |L1.1794|
000702  2210              MOVS     r2,#0x10              ;1985
000704  a1bd              ADR      r1,|L1.2556|
000706  4648              MOV      r0,r9                 ;1985
000708  f7fffffe          BL       __aeabi_memcpy
00070c  f04f0539          MOV      r5,#0x39              ;1986
000710  e54a              B        |L1.424|
                  |L1.1810|
000712  f89d0011          LDRB     r0,[sp,#0x11]         ;1995
000716  2841              CMP      r0,#0x41              ;1995
000718  d01d              BEQ      |L1.1878|
                  |L1.1818|
00071a  1960              ADDS     r0,r4,r5              ;2002
00071c  220d              MOVS     r2,#0xd               ;2002
00071e  a1bc              ADR      r1,|L1.2576|
000720  f7fffffe          BL       __aeabi_memcpy
000724  f105050d          ADD      r5,r5,#0xd            ;2003
000728  b2ed              UXTB     r5,r5                 ;2003
00072a  f89d000e          LDRB     r0,[sp,#0xe]          ;2005
00072e  f89d100d          LDRB     r1,[sp,#0xd]          ;2005
000732  e9cd1000          STRD     r1,r0,[sp,#0]         ;2005
000736  f89d300c          LDRB     r3,[sp,#0xc]          ;2005
00073a  f89d2010          LDRB     r2,[sp,#0x10]         ;2005
00073e  f89d1011          LDRB     r1,[sp,#0x11]         ;2005
000742  f89d0012          LDRB     r0,[sp,#0x12]         ;2005
000746  f7fffffe          BL       datatime2str
00074a  4601              MOV      r1,r0                 ;2005
00074c  1960              ADDS     r0,r4,r5              ;2005
00074e  2213              MOVS     r2,#0x13              ;2005
000750  f7fffffe          BL       __aeabi_memcpy
000754  e53c              B        |L1.464|
                  |L1.1878|
000756  1960              ADDS     r0,r4,r5              ;1997
000758  220f              MOVS     r2,#0xf               ;1997
00075a  a1b1              ADR      r1,|L1.2592|
00075c  f7fffffe          BL       __aeabi_memcpy
000760  e536              B        |L1.464|
;;;2158   
                          ENDP

                  snmp_data PROC
;;;271    //-----------------------------------------------
;;;272    void snmp_data (void) 
000762  e92d5ff0          PUSH     {r4-r12,lr}
;;;273    {
;;;274    char i;
;;;275    
;;;276    for(i=0;i<64;i++) snmp_enmv_number[i]=i+1;
000766  f04f0000          MOV      r0,#0
00076a  4ab2              LDR      r2,|L1.2612|
                  |L1.1900|
00076c  f1000101          ADD      r1,r0,#1
000770  5411              STRB     r1,[r2,r0]
000772  b2c8              UXTB     r0,r1
000774  2840              CMP      r0,#0x40
000776  d3f9              BCC      |L1.1900|
;;;277    
;;;278    snmp_mains_power_voltage=net_U;
000778  f8df82bc          LDR      r8,|L1.2616|
00077c  4eaf              LDR      r6,|L1.2620|
00077e  f8b80000          LDRH     r0,[r8,#0]  ; net_U
000782  8430              STRH     r0,[r6,#0x20]
;;;279    #ifdef UKU_220_IPS_TERMOKOMPENSAT
;;;280    snmp_mains_power_frequency=net_F3;
000784  48ae              LDR      r0,|L1.2624|
000786  8800              LDRH     r0,[r0,#0]  ; net_F3
000788  8470              STRH     r0,[r6,#0x22]
;;;281    #else
;;;282    snmp_mains_power_frequency=net_F;
;;;283    #endif
;;;284    snmp_mains_power_voltage_phaseA=net_Ua;
00078a  48ae              LDR      r0,|L1.2628|
00078c  8800              LDRH     r0,[r0,#0]  ; net_Ua
00078e  8530              STRH     r0,[r6,#0x28]
;;;285    snmp_mains_power_voltage_phaseB=net_Ub;
000790  48ad              LDR      r0,|L1.2632|
000792  8800              LDRH     r0,[r0,#0]  ; net_Ub
000794  8570              STRH     r0,[r6,#0x2a]
;;;286    snmp_mains_power_voltage_phaseC=net_Uc;
000796  48ad              LDR      r0,|L1.2636|
000798  8800              LDRH     r0,[r0,#0]  ; net_Uc
00079a  85b0              STRH     r0,[r6,#0x2c]
;;;287    
;;;288    
;;;289    if(avar_stat&0x0001)snmp_mains_power_alarm=1;
00079c  48ac              LDR      r0,|L1.2640|
00079e  2400              MOVS     r4,#0                 ;276
0007a0  2501              MOVS     r5,#1
0007a2  6800              LDR      r0,[r0,#0]  ; avar_stat
0007a4  07c0              LSLS     r0,r0,#31
0007a6  2800              CMP      r0,#0
0007a8  d001              BEQ      |L1.1966|
0007aa  84f5              STRH     r5,[r6,#0x26]
0007ac  e000              B        |L1.1968|
                  |L1.1966|
;;;290    else snmp_mains_power_alarm=0;
0007ae  84f4              STRH     r4,[r6,#0x26]
                  |L1.1968|
;;;291    if(avar_stat&0x0001)snmp_mains_power_status=1;
0007b0  d001              BEQ      |L1.1974|
0007b2  84b5              STRH     r5,[r6,#0x24]
0007b4  e000              B        |L1.1976|
                  |L1.1974|
;;;292    else snmp_mains_power_status=0;
0007b6  84b4              STRH     r4,[r6,#0x24]
                  |L1.1976|
;;;293    
;;;294    for(i=0;i<3/*snmp_numofevents*/;i++)event2snmp(i);
0007b8  f04f0700          MOV      r7,#0
                  |L1.1980|
0007bc  4638              MOV      r0,r7
0007be  f7fffffe          BL       event2snmp
0007c2  f1070701          ADD      r7,r7,#1
0007c6  b2ff              UXTB     r7,r7
0007c8  2f03              CMP      r7,#3
0007ca  d3f7              BCC      |L1.1980|
;;;295    
;;;296    /*
;;;297    snmp_mains_power_status=0; 
;;;298    #if(UKU_VERSION==900)
;;;299    snmp_mains_power_status=2;
;;;300    #endif
;;;301    if(St&0x01)snmp_mains_power_status|=0x01;
;;;302    if(St&0x01)snmp_mains_power_alarm=1;
;;;303    
;;;304    
;;;305    
;;;306    
;;;307    
;;;308    
;;;309    
;;;310    //snmp_bpsnumber[0]=1;
;;;311    //snmp_bpsnumber[1]=2;
;;;312    
;;;313    
;;;314    snmp_sernum_lsb=0x1122;
;;;315    snmp_sernum_msb=0x3344;
;;;316    
;;;317    
;;;318    //memcpy(snmp_location,"lkhg;la",);
;;;319    
;;;320    
;;;321    snmp_numofbat=1;
;;;322    
;;;323    */
;;;324    snmp_device_code=AUSW_MAIN;
0007cc  48a1              LDR      r0,|L1.2644|
0007ce  f8df926c          LDR      r9,|L1.2620|
0007d2  f1090980          ADD      r9,r9,#0x80
0007d6  8800              LDRH     r0,[r0,#0]  ; AUSW_MAIN
0007d8  f8c90030          STR      r0,[r9,#0x30]  ; snmp_device_code
;;;325    
;;;326    snmp_sernum=AUSW_MAIN_NUMBER;
0007dc  489e              LDR      r0,|L1.2648|
0007de  6800              LDR      r0,[r0,#0]  ; AUSW_MAIN_NUMBER
0007e0  f8c90034          STR      r0,[r9,#0x34]  ; snmp_sernum
;;;327    
;;;328    snmp_load_voltage=load_U;
0007e4  489d              LDR      r0,|L1.2652|
0007e6  f1060612          ADD      r6,r6,#0x12
0007ea  8800              LDRH     r0,[r0,#0]  ; load_U
0007ec  83b0              STRH     r0,[r6,#0x1c]
;;;329    snmp_load_current=load_I;
0007ee  489c              LDR      r0,|L1.2656|
0007f0  8800              LDRH     r0,[r0,#0]  ; load_I
0007f2  83f0              STRH     r0,[r6,#0x1e]
;;;330    snmp_numofbat=NUMBAT;
0007f4  4f9b              LDR      r7,|L1.2660|
0007f6  8838              LDRH     r0,[r7,#0]  ; NUMBAT
0007f8  8030              STRH     r0,[r6,#0]
;;;331    snmp_numofbps=NUMIST;
0007fa  f8dfa26c          LDR      r10,|L1.2664|
0007fe  f8ba0000          LDRH     r0,[r10,#0]  ; NUMIST
000802  8070              STRH     r0,[r6,#2]
;;;332    snmp_numofinv=NUMINV;
000804  4899              LDR      r0,|L1.2668|
000806  8800              LDRH     r0,[r0,#0]  ; NUMINV
000808  80b0              STRH     r0,[r6,#4]
;;;333    snmp_numofavt=NUMAVT;
00080a  4899              LDR      r0,|L1.2672|
00080c  8800              LDRH     r0,[r0,#0]  ; NUMAVT
00080e  80f0              STRH     r0,[r6,#6]
;;;334    snmp_numofdt=NUMDT;
000810  4898              LDR      r0,|L1.2676|
000812  8800              LDRH     r0,[r0,#0]  ; NUMDT
000814  8130              STRH     r0,[r6,#8]
;;;335    snmp_numofsk=NUMSK;
000816  4898              LDR      r0,|L1.2680|
000818  8800              LDRH     r0,[r0,#0]  ; NUMSK
00081a  8170              STRH     r0,[r6,#0xa]
;;;336    snmp_numofevents=lc640_read_int(CNT_EVENT_LOG);
00081c  f6406002          MOV      r0,#0xe02
000820  f7fffffe          BL       lc640_read_int
000824  81b0              STRH     r0,[r6,#0xc]
;;;337    
;;;338    snmp_energy_vvod_phase_a=Uvv_eb2[0];
000826  4895              LDR      r0,|L1.2684|
000828  8801              LDRH     r1,[r0,#0]  ; Uvv_eb2
00082a  84f1              STRH     r1,[r6,#0x26]
;;;339    snmp_energy_vvod_phase_b=Uvv_eb2[1];
00082c  8841              LDRH     r1,[r0,#2]  ; Uvv_eb2
00082e  8531              STRH     r1,[r6,#0x28]
;;;340    snmp_energy_vvod_phase_c=Uvv_eb2[2];
000830  8880              LDRH     r0,[r0,#4]  ; Uvv_eb2
000832  8570              STRH     r0,[r6,#0x2a]
;;;341    snmp_energy_pes_phase_a=Upes_eb2[0];
000834  4892              LDR      r0,|L1.2688|
000836  8801              LDRH     r1,[r0,#0]  ; Upes_eb2
000838  85b1              STRH     r1,[r6,#0x2c]
;;;342    snmp_energy_pes_phase_b=Upes_eb2[1];
00083a  8841              LDRH     r1,[r0,#2]  ; Upes_eb2
00083c  85f1              STRH     r1,[r6,#0x2e]
;;;343    snmp_energy_pes_phase_c=Upes_eb2[2];
00083e  8880              LDRH     r0,[r0,#4]  ; Upes_eb2
000840  8630              STRH     r0,[r6,#0x30]
;;;344    
;;;345    #ifdef UKU_KONTUR
;;;346    snmp_energy_vvod_phase_a=Uvv0;
;;;347    snmp_energy_pes_phase_a=Uvv[1];
;;;348    #endif
;;;349    
;;;350    snmp_energy_total_energy=power_summary;
000842  4890              LDR      r0,|L1.2692|
000844  6800              LDR      r0,[r0,#0]  ; power_summary
000846  f8c90058          STR      r0,[r9,#0x58]  ; snmp_energy_total_energy
;;;351    snmp_energy_current_energy=power_current;
00084a  488f              LDR      r0,|L1.2696|
00084c  8800              LDRH     r0,[r0,#0]  ; power_current
00084e  86b0              STRH     r0,[r6,#0x34]
;;;352    snmp_energy_input_voltage=net_U;
000850  f8b80000          LDRH     r0,[r8,#0]  ; net_U
000854  8670              STRH     r0,[r6,#0x32]
000856  f1a60612          SUB      r6,r6,#0x12
;;;353    
;;;354    
;;;355    #ifdef UKU_ZVU
;;;356    snmp_bat_number[0]=1;
00085a  f1090038          ADD      r0,r9,#0x38
00085e  8005              STRH     r5,[r0,#0]
;;;357    snmp_bat_voltage[0]=out_U;
000860  488a              LDR      r0,|L1.2700|
000862  f109013c          ADD      r1,r9,#0x3c
000866  8800              LDRH     r0,[r0,#0]  ; out_U
000868  8008              STRH     r0,[r1,#0]
;;;358    snmp_bat_current[0]=Ib_ips_termokompensat;
00086a  4889              LDR      r0,|L1.2704|
00086c  f1010104          ADD      r1,r1,#4
000870  f9b00000          LDRSH    r0,[r0,#0]  ; Ib_ips_termokompensat
000874  8008              STRH     r0,[r1,#0]
;;;359    snmp_bat_rem_time[0]=bat_hndl_t_razr_min;
000876  4987              LDR      r1,|L1.2708|
000878  880a              LDRH     r2,[r1,#0]  ; bat_hndl_t_razr_min
00087a  f1090154          ADD      r1,r9,#0x54
00087e  800a              STRH     r2,[r1,#0]
;;;360    if(Ib_ips_termokompensat>0)snmp_bat_rem_time[0]=-1;
000880  f04f32ff          MOV      r2,#0xffffffff
000884  2800              CMP      r0,#0
000886  dd00              BLE      |L1.2186|
000888  800a              STRH     r2,[r1,#0]
                  |L1.2186|
;;;361    snmp_bat_temperature[0]=t_ext[0];
00088a  4883              LDR      r0,|L1.2712|
00088c  f9b03000          LDRSH    r3,[r0,#0]  ; t_ext
000890  486a              LDR      r0,|L1.2620|
000892  30c4              ADDS     r0,r0,#0xc4
000894  8003              STRH     r3,[r0,#0]
;;;362    if(ND_EXT[0])snmp_bat_temperature[0]=-1000;
000896  4981              LDR      r1,|L1.2716|
000898  7809              LDRB     r1,[r1,#0]  ; ND_EXT
00089a  b111              CBZ      r1,|L1.2210|
00089c  f64f4118          MOV      r1,#0xfc18
0008a0  8001              STRH     r1,[r0,#0]
                  |L1.2210|
;;;363    snmp_bat_capacity[0]=BAT_C_POINT_20;
0008a2  487f              LDR      r0,|L1.2720|
0008a4  8801              LDRH     r1,[r0,#0]  ; BAT_C_POINT_20
0008a6  4865              LDR      r0,|L1.2620|
0008a8  30c8              ADDS     r0,r0,#0xc8
0008aa  8001              STRH     r1,[r0,#0]
;;;364    snmp_bat_charge[0]=(bat_hndl_zvu_Q/10000L);
0008ac  487d              LDR      r0,|L1.2724|
0008ae  f2427110          MOV      r1,#0x2710
0008b2  6800              LDR      r0,[r0,#0]  ; bat_hndl_zvu_Q
0008b4  fb90f0f1          SDIV     r0,r0,r1
0008b8  4960              LDR      r1,|L1.2620|
0008ba  f10101cc          ADD      r1,r1,#0xcc
0008be  8008              STRH     r0,[r1,#0]
;;;365    snmp_bat_status[0]=bat_ips._av&1;
0008c0  4879              LDR      r0,|L1.2728|
0008c2  f890003d          LDRB     r0,[r0,#0x3d]  ; bat_ips
0008c6  f0000101          AND      r1,r0,#1
0008ca  485c              LDR      r0,|L1.2620|
0008cc  f10000d0          ADD      r0,r0,#0xd0
0008d0  8001              STRH     r1,[r0,#0]
;;;366    if(NUMBAT==0)snmp_bat_status[0]=0xff;
0008d2  883f              LDRH     r7,[r7,#0]  ; NUMBAT
0008d4  f04f01ff          MOV      r1,#0xff
0008d8  b907              CBNZ     r7,|L1.2268|
0008da  8001              STRH     r1,[r0,#0]
                  |L1.2268|
;;;367    #endif
;;;368    
;;;369    #ifndef UKU_ZVU
;;;370    snmp_bat_number[0]=1;
;;;371    snmp_bat_voltage[0]=bat[0]._Ub;
;;;372    snmp_bat_part_voltage[0]=bat[0]._Ubm;
;;;373    snmp_bat_current[0]=bat[0]._Ib;
;;;374    
;;;375    /*
;;;376    #ifdef UKU_220_IPS_TERMOKOMPENSAT
;;;377    if(((AUSW_MAIN==22063)||(AUSW_MAIN==22023))&&(bps[8]._device==dIBAT_METR))
;;;378    	{
;;;379    	snmp_bat_current[0]=Ib_ips_termokompensat;
;;;380    	}
;;;381    #endif*/
;;;382    
;;;383    snmp_bat_temperature[0]=bat[0]._Tb;
;;;384    if(bat[0]._nd) snmp_bat_temperature[0]=-1000;
;;;385    
;;;386    if(BAT_C_REAL[0]==0x5555)snmp_bat_capacity[0]=BAT_C_NOM[0];
;;;387    else snmp_bat_capacity[0]=BAT_C_REAL[0];
;;;388    /*
;;;389    #ifdef UKU_ZVU
;;;390    snmp_bat_charge[0]=(bat_hndl_zvu_Q/10000L);
;;;391    
;;;392    #else
;;;393    snmp_bat_charge[0]=bat[0]._zar;
;;;394    #endif */
;;;395    snmp_bat_charge[0]=bat[0]._zar;
;;;396    snmp_bat_status[0]=bat[0]._av;
;;;397    if(BAT_IS_ON[0]!=bisON)snmp_bat_status[0]=0xff;
;;;398    
;;;399    
;;;400    snmp_bat_number[1]=2;
;;;401    snmp_bat_voltage[1]=bat[1]._Ub;
;;;402    snmp_bat_part_voltage[1]=bat[1]._Ubm;
;;;403    snmp_bat_current[1]=bat[1]._Ib;
;;;404    snmp_bat_temperature[1]=bat[1]._Tb;
;;;405    if(bat[1]._nd) snmp_bat_temperature[1]=-1000;
;;;406    if(BAT_C_REAL[1]==0x5555)snmp_bat_capacity[1]=BAT_C_NOM[1];
;;;407    else snmp_bat_capacity[1]=BAT_C_REAL[1];
;;;408    snmp_bat_charge[1]=bat[1]._zar;
;;;409    snmp_bat_status[1]=bat[1]._av;
;;;410    if(BAT_IS_ON[1]!=bisON)snmp_bat_status[1]=0xff;
;;;411    #endif
;;;412    
;;;413    
;;;414    snmp_bps_number[0]=1;
0008dc  f8df91cc          LDR      r9,|L1.2732|
0008e0  46ae              MOV      lr,r5
0008e2  f8a95000          STRH     r5,[r9,#0]
;;;415    snmp_bps_voltage[0]=bps[0]._Uii;
0008e6  4f72              LDR      r7,|L1.2736|
0008e8  f1090c10          ADD      r12,r9,#0x10
0008ec  69f8              LDR      r0,[r7,#0x1c]  ; bps
0008ee  f8ac0000          STRH     r0,[r12,#0]
;;;416    snmp_bps_current[0]=bps[0]._Ii;
0008f2  f1090820          ADD      r8,r9,#0x20
0008f6  6a78              LDR      r0,[r7,#0x24]  ; bps
0008f8  f8a80000          STRH     r0,[r8,#0]
;;;417    snmp_bps_temperature[0]=bps[0]._Ti;
0008fc  f1080b10          ADD      r11,r8,#0x10
000900  6ab8              LDR      r0,[r7,#0x28]  ; bps
000902  f8ab0000          STRH     r0,[r11,#0]
;;;418    snmp_bps_stat[0]=bps[0]._av;
000906  f1080520          ADD      r5,r8,#0x20
00090a  7878              LDRB     r0,[r7,#1]  ; bps
00090c  8028              STRH     r0,[r5,#0]
;;;419    if(!(NUMIST>0))snmp_bps_stat[0]=0xff;												//Байт состояния БПСа.
00090e  f9ba0000          LDRSH    r0,[r10,#0]  ; NUMIST
000912  2800              CMP      r0,#0
000914  dc00              BGT      |L1.2328|
000916  8029              STRH     r1,[r5,#0]
                  |L1.2328|
;;;420    
;;;421    /*if(St_[0]&(1<<2))snmp_bps_stat[0]=(1<<3); 							//авария по Umin
;;;422    else if(St_[0]&(1<<3))snmp_bps_stat[0]=(1<<2); 						//авария по Umax
;;;423    else if(bps[0]._av&(1<<0))snmp_bps_stat[0]=(1<<1); 						//авария по Tmax
;;;424    else if(St_[0]&(1<<5))snmp_bps_stat[0]=(1<<5); 						//заблокирован
;;;425    else if((!(St_[0]&0x3c))&&(!St&0x01)&&(!OFFBP1))snmp_bps_stat[0]=1; 		//Работает
;;;426    */
;;;427    
;;;428    snmp_bps_number[1]=2;
000918  f04f0a02          MOV      r10,#2
00091c  f8a9a002          STRH     r10,[r9,#2]
;;;429    snmp_bps_voltage[1]=bps[1]._Uii;
000920  f8d7a080          LDR      r10,[r7,#0x80]  ; bps
000924  f8aca002          STRH     r10,[r12,#2]
;;;430    snmp_bps_current[1]=bps[1]._Ii;
000928  f8d7a088          LDR      r10,[r7,#0x88]  ; bps
00092c  f8a8a002          STRH     r10,[r8,#2]
;;;431    snmp_bps_temperature[1]=bps[1]._Ti;
000930  f8d7a08c          LDR      r10,[r7,#0x8c]  ; bps
000934  f8aba002          STRH     r10,[r11,#2]
;;;432    snmp_bps_stat[1]=bps[1]._av;
000938  f897a065          LDRB     r10,[r7,#0x65]  ; bps
00093c  f8a5a002          STRH     r10,[r5,#2]
;;;433    if(!(NUMIST>1))snmp_bps_stat[1]=0xff;												//Байт состояния БПСа.
000940  2801              CMP      r0,#1
000942  dc00              BGT      |L1.2374|
000944  8069              STRH     r1,[r5,#2]
                  |L1.2374|
;;;434    /*if(St_[1]&(1<<2))snmp_bps_stat[1]=(1<<3); 							//авария по Umin
;;;435    else if(St_[1]&(1<<3))snmp_bps_stat[1]=(1<<2); 						//авария по Umax
;;;436    else if(St_[1]&(1<<4))snmp_bps_stat[1]=(1<<1); 						//авария по Tmax
;;;437    else if(St_[1]&(1<<5))snmp_bps_stat[1]=(1<<5); 						//заблокирован
;;;438    else if((!(St_[1]&0x3c))&&(!St&0x01)&&(!OFFBP2))snmp_bps_stat[1]=1; 		//Работает
;;;439    */
;;;440    
;;;441    snmp_bps_number[2]=3;
000946  f04f0a03          MOV      r10,#3
00094a  f8a9a004          STRH     r10,[r9,#4]
;;;442    snmp_bps_voltage[2]=bps[2]._Uii;
00094e  f8d7a0e4          LDR      r10,[r7,#0xe4]  ; bps
000952  f8aca004          STRH     r10,[r12,#4]
;;;443    snmp_bps_current[2]=bps[2]._Ii;
000956  f8d7a0ec          LDR      r10,[r7,#0xec]  ; bps
00095a  f8a8a004          STRH     r10,[r8,#4]
;;;444    snmp_bps_temperature[2]=bps[2]._Ti;
00095e  f8dfb14c          LDR      r11,|L1.2732|
000962  f8d7a0f0          LDR      r10,[r7,#0xf0]  ; bps
000966  f10b0b30          ADD      r11,r11,#0x30
00096a  f8aba004          STRH     r10,[r11,#4]
;;;445    snmp_bps_stat[2]=bps[2]._av;
00096e  f897a0c9          LDRB     r10,[r7,#0xc9]  ; bps
000972  f8a5a004          STRH     r10,[r5,#4]
;;;446    if(!(NUMIST>2))snmp_bps_stat[2]=0xff;
000976  2802              CMP      r0,#2
000978  dc00              BGT      |L1.2428|
00097a  80a9              STRH     r1,[r5,#4]
                  |L1.2428|
;;;447    
;;;448    snmp_bps_number[3]=4;
00097c  e09a              B        |L1.2740|
00097e  0000              DCW      0x0000
                  |L1.2432|
000980  20ede520          DCB      " ",237,229," ",231,224,226,229,240,248,229,237,"  ",0
000984  e7e0e2e5
000988  f0f8e5ed
00098c  202000  
00098f  00                DCB      0
                  |L1.2448|
000990  2c2055ed          DCB      ", U",237,224,247,"   , ",194,", U",234,238,237,"   , ",194
000994  e0f72020
000998  202c20c2
00099c  2c2055ea
0009a0  eeed2020
0009a4  202c20c2
0009a8  2c2043e1          DCB      ", C",225,224,242,"    , ",192,"*",247," ",0
0009ac  e0f22020
0009b0  20202c20
0009b4  c02af720
0009b8  00      
0009b9  00                DCB      0
0009ba  00                DCB      0
0009bb  00                DCB      0
                  |L1.2492|
0009bc  40eef2ea          DCB      "@",238,242,234,235,254,247,232,235,241,255,"           "
0009c0  ebfef7e8
0009c4  ebf1ff20
0009c8  20202020
0009cc  20202020
0009d0  2020    
0009d2  202000            DCB      "  ",0
0009d5  00                DCB      0
0009d6  00                DCB      0
0009d7  00                DCB      0
                  |L1.2520|
0009d8  4020efe5          DCB      "@ ",239,229,240,229,227,240,229,226,"   ",0
0009dc  f0e5e3f0
0009e0  e5e22020
0009e4  2000    
0009e6  00                DCB      0
0009e7  00                DCB      0
                  |L1.2536|
0009e8  4020e7e0          DCB      "@ ",231,224,226,251,248,229,237,238," U",226,251,245,"."
0009ec  e2fbf8e5
0009f0  edee2055
0009f4  e2fbf52e
0009f8  202000            DCB      "  ",0
0009fb  00                DCB      0
                  |L1.2556|
0009fc  4020e7e0          DCB      "@ ",231,224,237,232,230,229,237,238," U",226,251,245,"."
000a00  ede8e6e5
000a04  edee2055
000a08  e2fbf52e
000a0c  202000            DCB      "  ",0
000a0f  00                DCB      0
                  |L1.2576|
000a10  2c2020f3          DCB      ",  ",243,241,242,240,224,237,229,237,224,"   ",0
000a14  f1f2f0e0
000a18  ede5ede0
000a1c  20202000
                  |L1.2592|
000a20  2c20ede5          DCB      ", ",237,229," ",243,241,242,240,224,237,229,237,224,"  "
000a24  20f3f1f2
000a28  f0e0ede5
000a2c  ede02020
000a30  00                DCB      0
000a31  00                DCB      0
000a32  00                DCB      0
000a33  00                DCB      0
                  |L1.2612|
                          DCD      ||.bss||+0x266
                  |L1.2616|
                          DCD      net_U
                  |L1.2620|
                          DCD      ||.data||
                  |L1.2624|
                          DCD      net_F3
                  |L1.2628|
                          DCD      net_Ua
                  |L1.2632|
                          DCD      net_Ub
                  |L1.2636|
                          DCD      net_Uc
                  |L1.2640|
                          DCD      avar_stat
                  |L1.2644|
                          DCD      AUSW_MAIN
                  |L1.2648|
                          DCD      AUSW_MAIN_NUMBER
                  |L1.2652|
                          DCD      load_U
                  |L1.2656|
                          DCD      load_I
                  |L1.2660|
                          DCD      NUMBAT
                  |L1.2664|
                          DCD      NUMIST
                  |L1.2668|
                          DCD      NUMINV
                  |L1.2672|
                          DCD      NUMAVT
                  |L1.2676|
                          DCD      NUMDT
                  |L1.2680|
                          DCD      NUMSK
                  |L1.2684|
                          DCD      Uvv_eb2
                  |L1.2688|
                          DCD      Upes_eb2
                  |L1.2692|
                          DCD      power_summary
                  |L1.2696|
                          DCD      power_current
                  |L1.2700|
                          DCD      out_U
                  |L1.2704|
                          DCD      Ib_ips_termokompensat
                  |L1.2708|
                          DCD      bat_hndl_t_razr_min
                  |L1.2712|
                          DCD      t_ext
                  |L1.2716|
                          DCD      ND_EXT
                  |L1.2720|
                          DCD      BAT_C_POINT_20
                  |L1.2724|
                          DCD      bat_hndl_zvu_Q
                  |L1.2728|
                          DCD      bat_ips
                  |L1.2732|
                          DCD      ||.bss||+0x78
                  |L1.2736|
                          DCD      bps
                  |L1.2740|
000ab4  f04f0a04          MOV      r10,#4
000ab8  f8a9a006          STRH     r10,[r9,#6]
;;;449    snmp_bps_voltage[3]=bps[3]._Uii;
000abc  f8d7a148          LDR      r10,[r7,#0x148]  ; bps
000ac0  f8aca006          STRH     r10,[r12,#6]
;;;450    snmp_bps_current[3]=bps[3]._Ii;
000ac4  f8d7a150          LDR      r10,[r7,#0x150]  ; bps
000ac8  f8a8a006          STRH     r10,[r8,#6]
;;;451    snmp_bps_temperature[3]=bps[3]._Ti;
000acc  f8dfa4d0          LDR      r10,|L1.4000|
000ad0  f8d7b154          LDR      r11,[r7,#0x154]  ; bps
000ad4  f8aab006          STRH     r11,[r10,#6]
;;;452    snmp_bps_stat[3]=bps[3]._av;
000ad8  f897b12d          LDRB     r11,[r7,#0x12d]  ; bps
000adc  f8a5b006          STRH     r11,[r5,#6]
;;;453    if(!(NUMIST>3))snmp_bps_stat[3]=0xff;
000ae0  2803              CMP      r0,#3
000ae2  dc00              BGT      |L1.2790|
000ae4  80e9              STRH     r1,[r5,#6]
                  |L1.2790|
;;;454    
;;;455    snmp_bps_number[4]=5;
000ae6  f04f0b05          MOV      r11,#5
000aea  f8a9b008          STRH     r11,[r9,#8]
;;;456    snmp_bps_voltage[4]=bps[4]._Uii;
000aee  f8d7b1ac          LDR      r11,[r7,#0x1ac]  ; bps
000af2  f8acb008          STRH     r11,[r12,#8]
;;;457    snmp_bps_current[4]=bps[4]._Ii;
000af6  f8d7b1b4          LDR      r11,[r7,#0x1b4]  ; bps
000afa  f8a8b008          STRH     r11,[r8,#8]
;;;458    snmp_bps_temperature[4]=bps[4]._Ti;
000afe  f8dfa4a0          LDR      r10,|L1.4000|
000b02  f8d7b1b8          LDR      r11,[r7,#0x1b8]  ; bps
000b06  f8aab008          STRH     r11,[r10,#8]
;;;459    snmp_bps_stat[4]=bps[4]._av;
000b0a  f897a191          LDRB     r10,[r7,#0x191]  ; bps
000b0e  f8a5a008          STRH     r10,[r5,#8]
;;;460    if(!(NUMIST>4))snmp_bps_stat[4]=0xff;
000b12  2804              CMP      r0,#4
000b14  dc00              BGT      |L1.2840|
000b16  8129              STRH     r1,[r5,#8]
                  |L1.2840|
;;;461    
;;;462    snmp_bps_number[5]=6;
000b18  f04f0a06          MOV      r10,#6
000b1c  f8a9a00a          STRH     r10,[r9,#0xa]
;;;463    snmp_bps_voltage[5]=bps[5]._Uii;
000b20  f8d7a210          LDR      r10,[r7,#0x210]  ; bps
000b24  f8aca00a          STRH     r10,[r12,#0xa]
;;;464    snmp_bps_current[5]=bps[5]._Ii;
000b28  f8d7a218          LDR      r10,[r7,#0x218]  ; bps
000b2c  f8a8a00a          STRH     r10,[r8,#0xa]
;;;465    snmp_bps_temperature[5]=bps[5]._Ti;
000b30  f8dfa46c          LDR      r10,|L1.4000|
000b34  f8d7b21c          LDR      r11,[r7,#0x21c]  ; bps
000b38  f8aab00a          STRH     r11,[r10,#0xa]
;;;466    snmp_bps_stat[5]=bps[5]._av;
000b3c  f897b1f5          LDRB     r11,[r7,#0x1f5]  ; bps
000b40  f8a5b00a          STRH     r11,[r5,#0xa]
;;;467    if(!(NUMIST>5))snmp_bps_stat[5]=0xff;
000b44  2805              CMP      r0,#5
000b46  dc00              BGT      |L1.2890|
000b48  8169              STRH     r1,[r5,#0xa]
                  |L1.2890|
;;;468    
;;;469    snmp_bps_number[6]=7;
000b4a  f04f0b07          MOV      r11,#7
000b4e  f8a9b00c          STRH     r11,[r9,#0xc]
;;;470    snmp_bps_voltage[6]=bps[6]._Uii;
000b52  f8d7b274          LDR      r11,[r7,#0x274]  ; bps
000b56  f8acb00c          STRH     r11,[r12,#0xc]
;;;471    snmp_bps_current[6]=bps[6]._Ii;
000b5a  f8d7b27c          LDR      r11,[r7,#0x27c]  ; bps
000b5e  f8a8b00c          STRH     r11,[r8,#0xc]
;;;472    snmp_bps_temperature[6]=bps[6]._Ti;
000b62  f8d7b280          LDR      r11,[r7,#0x280]  ; bps
000b66  f8aab00c          STRH     r11,[r10,#0xc]
;;;473    snmp_bps_stat[6]=bps[6]._av;
000b6a  f897b259          LDRB     r11,[r7,#0x259]  ; bps
000b6e  f8a5b00c          STRH     r11,[r5,#0xc]
;;;474    if(!(NUMIST>6))snmp_bps_stat[6]=0xff;
000b72  2806              CMP      r0,#6
000b74  dc00              BGT      |L1.2936|
000b76  81a9              STRH     r1,[r5,#0xc]
                  |L1.2936|
;;;475    
;;;476    snmp_bps_number[7]=8;
000b78  f04f0b08          MOV      r11,#8
000b7c  f8a9b00e          STRH     r11,[r9,#0xe]
;;;477    snmp_bps_voltage[7]=bps[7]._Uii;
000b80  f8d792d8          LDR      r9,[r7,#0x2d8]  ; bps
000b84  f8ac900e          STRH     r9,[r12,#0xe]
;;;478    snmp_bps_current[7]=bps[7]._Ii;
000b88  f8d7c2e0          LDR      r12,[r7,#0x2e0]  ; bps
000b8c  f8a8c00e          STRH     r12,[r8,#0xe]
;;;479    snmp_bps_temperature[7]=bps[7]._Ti;
000b90  f8d7c2e4          LDR      r12,[r7,#0x2e4]  ; bps
000b94  f8aac00e          STRH     r12,[r10,#0xe]
;;;480    snmp_bps_stat[7]=bps[7]._av;
000b98  f89772bd          LDRB     r7,[r7,#0x2bd]  ; bps
000b9c  81ef              STRH     r7,[r5,#0xe]
;;;481    if(!(NUMIST>7))snmp_bps_stat[7]=0xff;
000b9e  2807              CMP      r0,#7
000ba0  dc00              BGT      |L1.2980|
000ba2  81e9              STRH     r1,[r5,#0xe]
                  |L1.2980|
;;;482    
;;;483    
;;;484    
;;;485    snmp_inv_number[0]=1;
000ba4  49ff              LDR      r1,|L1.4004|
000ba6  f8a1e000          STRH     lr,[r1,#0]
;;;486    snmp_inv_voltage[0]=inv[0]._Uio;
000baa  48ff              LDR      r0,|L1.4008|
000bac  1d8d              ADDS     r5,r1,#6
000bae  6987              LDR      r7,[r0,#0x18]  ; inv
000bb0  802f              STRH     r7,[r5,#0]
;;;487    snmp_inv_current[0]=inv[0]._Ii;
000bb2  1daf              ADDS     r7,r5,#6
000bb4  f8d0c01c          LDR      r12,[r0,#0x1c]  ; inv
000bb8  f8a7c000          STRH     r12,[r7,#0]
;;;488    snmp_inv_temperature[0]=inv[0]._Ti;
000bbc  f1010812          ADD      r8,r1,#0x12
000bc0  f8d0c020          LDR      r12,[r0,#0x20]  ; inv
000bc4  f8a8c000          STRH     r12,[r8,#0]
;;;489    snmp_inv_stat[0]=inv[0]._flags_tm;
000bc8  f1010a18          ADD      r10,r1,#0x18
000bcc  f890c046          LDRB     r12,[r0,#0x46]  ; inv
000bd0  f8aac000          STRH     r12,[r10,#0]
;;;490    
;;;491    snmp_inv_number[1]=2;
000bd4  f04f0c02          MOV      r12,#2
000bd8  f8a1c002          STRH     r12,[r1,#2]
;;;492    snmp_inv_voltage[1]=inv[1]._Uio;
000bdc  f8d09078          LDR      r9,[r0,#0x78]  ; inv
000be0  f8a59002          STRH     r9,[r5,#2]
;;;493    snmp_inv_current[1]=inv[1]._Ii;
000be4  f8d0907c          LDR      r9,[r0,#0x7c]  ; inv
000be8  f8a79002          STRH     r9,[r7,#2]
;;;494    snmp_inv_temperature[1]=inv[1]._Ti;
000bec  f8d09080          LDR      r9,[r0,#0x80]  ; inv
000bf0  f1000064          ADD      r0,r0,#0x64
000bf4  f8a89002          STRH     r9,[r8,#2]
;;;495    snmp_inv_stat[1]=inv[1]._flags_tm;
000bf8  f8909042          LDRB     r9,[r0,#0x42]  ; inv
000bfc  f8aa9002          STRH     r9,[r10,#2]
;;;496    
;;;497    snmp_inv_number[2]=3;
000c00  f04f0903          MOV      r9,#3
000c04  f8a19004          STRH     r9,[r1,#4]
;;;498    snmp_inv_voltage[2]=inv[2]._Uio;
000c08  6f41              LDR      r1,[r0,#0x74]  ; inv
000c0a  80a9              STRH     r1,[r5,#4]
;;;499    snmp_inv_current[2]=inv[2]._Ii;
000c0c  6f81              LDR      r1,[r0,#0x78]  ; inv
000c0e  80b9              STRH     r1,[r7,#4]
;;;500    snmp_inv_temperature[2]=inv[2]._Ti;
000c10  6fc1              LDR      r1,[r0,#0x7c]  ; inv
000c12  f8a81004          STRH     r1,[r8,#4]
;;;501    snmp_inv_stat[2]=inv[2]._flags_tm;
000c16  f89000a2          LDRB     r0,[r0,#0xa2]  ; inv
000c1a  f8aa0004          STRH     r0,[r10,#4]
;;;502    
;;;503    
;;;504    
;;;505    
;;;506    					  
;;;507    snmp_sk_number[0]=1;
000c1e  f1a50b1a          SUB      r11,r5,#0x1a
000c22  f88be000          STRB     lr,[r11,#0]
;;;508    memcpy(&snmp_sk_name[0][0],"Door",10);
000c26  4fde              LDR      r7,|L1.4000|
000c28  a0e0              ADR      r0,|L1.4012|
000c2a  f1070758          ADD      r7,r7,#0x58
000c2e  6801              LDR      r1,[r0,#0]
000c30  6479              STR      r1,[r7,#0x44]  ; snmp_sk_name
000c32  6841              LDR      r1,[r0,#4]
000c34  64b9              STR      r1,[r7,#0x48]  ; snmp_sk_name
000c36  8900              LDRH     r0,[r0,#8]
000c38  f8a7004c          STRH     r0,[r7,#0x4c]
;;;509    if(sk_stat[0]==ssON) snmp_sk_aktiv[0]=1;
000c3c  f8dfa374          LDR      r10,|L1.4020|
000c40  f1a50016          SUB      r0,r5,#0x16
000c44  f89a1000          LDRB     r1,[r10,#0]  ; sk_stat
000c48  2901              CMP      r1,#1
000c4a  d07d              BEQ      |L1.3400|
;;;510    else snmp_sk_aktiv[0]=0;
000c4c  7004              STRB     r4,[r0,#0]
                  |L1.3150|
;;;511    if(!SK_SIGN[0])snmp_sk_alarm_aktiv[0]=1;
000c4e  49da              LDR      r1,|L1.4024|
000c50  880d              LDRH     r5,[r1,#0]  ; SK_SIGN
000c52  49d4              LDR      r1,|L1.4004|
000c54  390c              SUBS     r1,r1,#0xc
000c56  2d00              CMP      r5,#0
000c58  d077              BEQ      |L1.3402|
;;;512    else snmp_sk_alarm_aktiv[0]=0;
000c5a  700c              STRB     r4,[r1,#0]
                  |L1.3164|
;;;513    if(sk_av_stat[0]==sasON)	snmp_sk_alarm[0]=1;
000c5c  4dd7              LDR      r5,|L1.4028|
000c5e  f8958000          LDRB     r8,[r5,#0]  ; sk_av_stat
000c62  4dd0              LDR      r5,|L1.4004|
000c64  3d08              SUBS     r5,r5,#8
000c66  f1b80f01          CMP      r8,#1
000c6a  d06f              BEQ      |L1.3404|
;;;514    else                     snmp_sk_alarm[0]=0;
000c6c  702c              STRB     r4,[r5,#0]
                  |L1.3182|
;;;515    
;;;516    
;;;517    snmp_sk_number[1]=2;
000c6e  f04f0c02          MOV      r12,#2
000c72  f88bc001          STRB     r12,[r11,#1]
;;;518    memcpy(&snmp_sk_name[1][0],"Smoke",10);
000c76  f20f3c48          ADR      r12,|L1.4032|
000c7a  f8dc8000          LDR      r8,[r12,#0]
000c7e  f8c78058          STR      r8,[r7,#0x58]  ; snmp_sk_name
000c82  f8dc8004          LDR      r8,[r12,#4]
000c86  f8c7805c          STR      r8,[r7,#0x5c]  ; snmp_sk_name
000c8a  f8bcc008          LDRH     r12,[r12,#8]
000c8e  f8a7c060          STRH     r12,[r7,#0x60]
;;;519    if(sk_stat[1]==ssON) snmp_sk_aktiv[1]=1;
000c92  f89ac001          LDRB     r12,[r10,#1]  ; sk_stat
000c96  f1bc0f01          CMP      r12,#1
000c9a  d06b              BEQ      |L1.3444|
;;;520    else snmp_sk_aktiv[1]=0;
000c9c  7044              STRB     r4,[r0,#1]
                  |L1.3230|
;;;521    if(!SK_SIGN[1])snmp_sk_alarm_aktiv[1]=1;
000c9e  f8dfc318          LDR      r12,|L1.4024|
000ca2  f8bcc002          LDRH     r12,[r12,#2]  ; SK_SIGN
000ca6  f1bc0f00          CMP      r12,#0
000caa  d066              BEQ      |L1.3450|
;;;522    else snmp_sk_alarm_aktiv[1]=0;
000cac  704c              STRB     r4,[r1,#1]
                  |L1.3246|
;;;523    if(sk_av_stat[1]==sasON)	snmp_sk_alarm[1]=1;
000cae  f8dfc30c          LDR      r12,|L1.4028|
000cb2  f89cc001          LDRB     r12,[r12,#1]  ; sk_av_stat
000cb6  f1bc0f01          CMP      r12,#1
000cba  d061              BEQ      |L1.3456|
;;;524    else                     snmp_sk_alarm[1]=0;
000cbc  706c              STRB     r4,[r5,#1]
                  |L1.3262|
;;;525    
;;;526    snmp_sk_number[2]=3;
000cbe  f88b9002          STRB     r9,[r11,#2]
;;;527    memcpy(&snmp_sk_name[2][0],"Shock",10);
000cc2  f20f3c04          ADR      r12,|L1.4040|
000cc6  f8dc8000          LDR      r8,[r12,#0]
000cca  f8c7806c          STR      r8,[r7,#0x6c]  ; snmp_sk_name
000cce  f8dc8004          LDR      r8,[r12,#4]
000cd2  f8c78070          STR      r8,[r7,#0x70]  ; snmp_sk_name
000cd6  f8bcc008          LDRH     r12,[r12,#8]
000cda  f8a7c074          STRH     r12,[r7,#0x74]
;;;528    if(sk_stat[2]==ssON) snmp_sk_aktiv[2]=1;
000cde  f89a7002          LDRB     r7,[r10,#2]  ; sk_stat
000ce2  2f01              CMP      r7,#1
000ce4  d04f              BEQ      |L1.3462|
;;;529    else snmp_sk_aktiv[2]=0;
000ce6  7084              STRB     r4,[r0,#2]
                  |L1.3304|
;;;530    if(!SK_SIGN[2])snmp_sk_alarm_aktiv[2]=1;
000ce8  4fb3              LDR      r7,|L1.4024|
000cea  88bf              LDRH     r7,[r7,#4]  ; SK_SIGN
000cec  b37f              CBZ      r7,|L1.3406|
;;;531    else snmp_sk_alarm_aktiv[2]=0;
000cee  708c              STRB     r4,[r1,#2]
                  |L1.3312|
;;;532    if(sk_av_stat[2]==sasON)	snmp_sk_alarm[2]=1;
000cf0  f8df82c8          LDR      r8,|L1.4028|
000cf4  f8987002          LDRB     r7,[r8,#2]  ; sk_av_stat
000cf8  2f01              CMP      r7,#1
000cfa  d04a              BEQ      |L1.3474|
;;;533    else                     snmp_sk_alarm[2]=0;
000cfc  70ac              STRB     r4,[r5,#2]
                  |L1.3326|
;;;534    
;;;535    snmp_sk_number[3]=4;
000cfe  f04f0704          MOV      r7,#4
000d02  f88b7003          STRB     r7,[r11,#3]
;;;536    memcpy(&snmp_sk_name[3][0],"     ",10);
000d06  4fa6              LDR      r7,|L1.4000|
000d08  f10707d8          ADD      r7,r7,#0xd8
000d0c  f20f2cc0          ADR      r12,|L1.4048|
000d10  f8dcb000          LDR      r11,[r12,#0]
000d14  f8c7b000          STR      r11,[r7,#0]  ; snmp_sk_name
000d18  f8dcb004          LDR      r11,[r12,#4]
000d1c  f8c7b004          STR      r11,[r7,#4]  ; snmp_sk_name
000d20  f8bcc008          LDRH     r12,[r12,#8]
000d24  f8a7c008          STRH     r12,[r7,#8]
;;;537    if(sk_stat[3]==ssON) snmp_sk_aktiv[3]=1;
000d28  f89a7003          LDRB     r7,[r10,#3]  ; sk_stat
000d2c  2f01              CMP      r7,#1
000d2e  d034              BEQ      |L1.3482|
;;;538    else snmp_sk_aktiv[3]=0;
000d30  70c4              STRB     r4,[r0,#3]
                  |L1.3378|
;;;539    if(!SK_SIGN[3])snmp_sk_alarm_aktiv[3]=1;
000d32  48a1              LDR      r0,|L1.4024|
000d34  88c0              LDRH     r0,[r0,#6]  ; SK_SIGN
000d36  b378              CBZ      r0,|L1.3480|
;;;540    else snmp_sk_alarm_aktiv[3]=0;
000d38  70cc              STRB     r4,[r1,#3]
                  |L1.3386|
;;;541    if(sk_av_stat[3]==sasON)	snmp_sk_alarm[3]=1;
000d3a  f8980003          LDRB     r0,[r8,#3]  ; sk_av_stat
000d3e  2801              CMP      r0,#1
000d40  d031              BEQ      |L1.3494|
;;;542    else                     snmp_sk_alarm[3]=0;
000d42  70ec              STRB     r4,[r5,#3]
                  |L1.3396|
;;;543    
;;;544    
;;;545    if(makb[0]._cnt>8) snmp_makb_connect_status[0]=1;
000d44  48a4              LDR      r0,|L1.4056|
000d46  e003              B        |L1.3408|
                  |L1.3400|
000d48  e00b              B        |L1.3426|
                  |L1.3402|
000d4a  e00d              B        |L1.3432|
                  |L1.3404|
000d4c  e00f              B        |L1.3438|
                  |L1.3406|
000d4e  e01d              B        |L1.3468|
                  |L1.3408|
000d50  4994              LDR      r1,|L1.4004|
000d52  f9b05028          LDRSH    r5,[r0,#0x28]  ; makb
000d56  3124              ADDS     r1,r1,#0x24
000d58  2d08              CMP      r5,#8
000d5a  dd27              BLE      |L1.3500|
000d5c  f8a1e000          STRH     lr,[r1,#0]
000d60  e027              B        |L1.3506|
                  |L1.3426|
000d62  f880e000          STRB     lr,[r0,#0]            ;509
000d66  e772              B        |L1.3150|
                  |L1.3432|
000d68  f881e000          STRB     lr,[r1,#0]            ;511
000d6c  e776              B        |L1.3164|
                  |L1.3438|
000d6e  f885e000          STRB     lr,[r5,#0]            ;513
000d72  e77c              B        |L1.3182|
                  |L1.3444|
000d74  f880e001          STRB     lr,[r0,#1]            ;519
000d78  e791              B        |L1.3230|
                  |L1.3450|
000d7a  f881e001          STRB     lr,[r1,#1]            ;521
000d7e  e796              B        |L1.3246|
                  |L1.3456|
000d80  f885e001          STRB     lr,[r5,#1]            ;523
000d84  e79b              B        |L1.3262|
                  |L1.3462|
000d86  f880e002          STRB     lr,[r0,#2]            ;528
000d8a  e7ad              B        |L1.3304|
                  |L1.3468|
000d8c  f881e002          STRB     lr,[r1,#2]            ;530
000d90  e7ae              B        |L1.3312|
                  |L1.3474|
000d92  f885e002          STRB     lr,[r5,#2]            ;532
000d96  e7b2              B        |L1.3326|
                  |L1.3480|
000d98  e002              B        |L1.3488|
                  |L1.3482|
000d9a  f880e003          STRB     lr,[r0,#3]            ;537
000d9e  e7c8              B        |L1.3378|
                  |L1.3488|
000da0  f881e003          STRB     lr,[r1,#3]            ;539
000da4  e7c9              B        |L1.3386|
                  |L1.3494|
000da6  f885e003          STRB     lr,[r5,#3]            ;541
000daa  e7cb              B        |L1.3396|
                  |L1.3500|
;;;546    else if(makb[0]._cnt<2) snmp_makb_connect_status[0]=0;
000dac  2d02              CMP      r5,#2
000dae  da00              BGE      |L1.3506|
000db0  800c              STRH     r4,[r1,#0]
                  |L1.3506|
;;;547    if(makb[1]._cnt>8) snmp_makb_connect_status[1]=1;
000db2  f9b05052          LDRSH    r5,[r0,#0x52]  ; makb
000db6  2d08              CMP      r5,#8
000db8  dd02              BLE      |L1.3520|
000dba  f8a1e002          STRH     lr,[r1,#2]
000dbe  e002              B        |L1.3526|
                  |L1.3520|
;;;548    else if(makb[1]._cnt<2) snmp_makb_connect_status[1]=0;
000dc0  2d02              CMP      r5,#2
000dc2  da00              BGE      |L1.3526|
000dc4  804c              STRH     r4,[r1,#2]
                  |L1.3526|
;;;549    if(makb[2]._cnt>8) snmp_makb_connect_status[2]=1;
000dc6  f9b0507c          LDRSH    r5,[r0,#0x7c]  ; makb
000dca  2d08              CMP      r5,#8
000dcc  dd02              BLE      |L1.3540|
000dce  f8a1e004          STRH     lr,[r1,#4]
000dd2  e002              B        |L1.3546|
                  |L1.3540|
;;;550    else if(makb[2]._cnt<2) snmp_makb_connect_status[2]=0;
000dd4  2d02              CMP      r5,#2
000dd6  da00              BGE      |L1.3546|
000dd8  808c              STRH     r4,[r1,#4]
                  |L1.3546|
;;;551    if(makb[3]._cnt>8) snmp_makb_connect_status[3]=1;
000dda  f9b050a6          LDRSH    r5,[r0,#0xa6]  ; makb
000dde  2d08              CMP      r5,#8
000de0  dd02              BLE      |L1.3560|
000de2  f8a1e006          STRH     lr,[r1,#6]
000de6  e002              B        |L1.3566|
                  |L1.3560|
;;;552    else if(makb[3]._cnt<2) snmp_makb_connect_status[3]=0;
000de8  2d02              CMP      r5,#2
000dea  da00              BGE      |L1.3566|
000dec  80cc              STRH     r4,[r1,#6]
                  |L1.3566|
;;;553    
;;;554    snmp_makb_voltage0[0]=makb[0]._Ub[0];
000dee  4d6d              LDR      r5,|L1.4004|
000df0  8941              LDRH     r1,[r0,#0xa]  ; makb
000df2  352c              ADDS     r5,r5,#0x2c
000df4  8029              STRH     r1,[r5,#0]
;;;555    snmp_makb_voltage1[0]=makb[0]._Ub[1];
000df6  3508              ADDS     r5,r5,#8
000df8  8981              LDRH     r1,[r0,#0xc]  ; makb
000dfa  8029              STRH     r1,[r5,#0]
;;;556    snmp_makb_voltage2[0]=makb[0]._Ub[2];
000dfc  3508              ADDS     r5,r5,#8
000dfe  89c1              LDRH     r1,[r0,#0xe]  ; makb
000e00  8029              STRH     r1,[r5,#0]
;;;557    snmp_makb_voltage3[0]=makb[0]._Ub[3];
000e02  3508              ADDS     r5,r5,#8
000e04  8a01              LDRH     r1,[r0,#0x10]  ; makb
000e06  8029              STRH     r1,[r5,#0]
;;;558    snmp_makb_voltage4[0]=makb[0]._Ub[4];
000e08  3508              ADDS     r5,r5,#8
000e0a  8a41              LDRH     r1,[r0,#0x12]  ; makb
000e0c  8029              STRH     r1,[r5,#0]
;;;559    snmp_makb_voltage0[1]=makb[1]._Ub[0];
000e0e  3d20              SUBS     r5,r5,#0x20
000e10  8e81              LDRH     r1,[r0,#0x34]  ; makb
000e12  8069              STRH     r1,[r5,#2]
;;;560    snmp_makb_voltage1[1]=makb[1]._Ub[1];
000e14  3508              ADDS     r5,r5,#8
000e16  8ec1              LDRH     r1,[r0,#0x36]  ; makb
000e18  8069              STRH     r1,[r5,#2]
;;;561    snmp_makb_voltage2[1]=makb[1]._Ub[2];
000e1a  3508              ADDS     r5,r5,#8
000e1c  8f01              LDRH     r1,[r0,#0x38]  ; makb
000e1e  8069              STRH     r1,[r5,#2]
;;;562    snmp_makb_voltage3[1]=makb[1]._Ub[3];
000e20  3508              ADDS     r5,r5,#8
000e22  8f41              LDRH     r1,[r0,#0x3a]  ; makb
000e24  8069              STRH     r1,[r5,#2]
;;;563    snmp_makb_voltage4[1]=makb[1]._Ub[4];
000e26  3508              ADDS     r5,r5,#8
000e28  8f81              LDRH     r1,[r0,#0x3c]  ; makb
000e2a  8069              STRH     r1,[r5,#2]
;;;564    snmp_makb_voltage0[2]=makb[2]._Ub[0];
000e2c  3d20              SUBS     r5,r5,#0x20
000e2e  f8b0105e          LDRH     r1,[r0,#0x5e]  ; makb
000e32  80a9              STRH     r1,[r5,#4]
;;;565    snmp_makb_voltage1[2]=makb[2]._Ub[1];
000e34  3508              ADDS     r5,r5,#8
000e36  f8b01060          LDRH     r1,[r0,#0x60]  ; makb
000e3a  80a9              STRH     r1,[r5,#4]
;;;566    snmp_makb_voltage2[2]=makb[2]._Ub[2];
000e3c  3508              ADDS     r5,r5,#8
000e3e  f8b01062          LDRH     r1,[r0,#0x62]  ; makb
000e42  80a9              STRH     r1,[r5,#4]
;;;567    snmp_makb_voltage3[2]=makb[2]._Ub[3];
000e44  3508              ADDS     r5,r5,#8
000e46  f8b01064          LDRH     r1,[r0,#0x64]  ; makb
000e4a  80a9              STRH     r1,[r5,#4]
;;;568    snmp_makb_voltage4[2]=makb[2]._Ub[4];
000e4c  3508              ADDS     r5,r5,#8
000e4e  f8b01066          LDRH     r1,[r0,#0x66]  ; makb
000e52  80a9              STRH     r1,[r5,#4]
;;;569    snmp_makb_voltage0[3]=makb[3]._Ub[0];
000e54  3d20              SUBS     r5,r5,#0x20
000e56  f8b01088          LDRH     r1,[r0,#0x88]  ; makb
000e5a  80e9              STRH     r1,[r5,#6]
;;;570    snmp_makb_voltage1[3]=makb[3]._Ub[1];
000e5c  3508              ADDS     r5,r5,#8
000e5e  f8b0108a          LDRH     r1,[r0,#0x8a]  ; makb
000e62  80e9              STRH     r1,[r5,#6]
;;;571    snmp_makb_voltage2[3]=makb[3]._Ub[2];
000e64  3508              ADDS     r5,r5,#8
000e66  f8b0108c          LDRH     r1,[r0,#0x8c]  ; makb
000e6a  80e9              STRH     r1,[r5,#6]
;;;572    snmp_makb_voltage3[3]=makb[3]._Ub[3];
000e6c  3508              ADDS     r5,r5,#8
000e6e  f8b0108e          LDRH     r1,[r0,#0x8e]  ; makb
000e72  80e9              STRH     r1,[r5,#6]
;;;573    snmp_makb_voltage4[3]=makb[3]._Ub[4];
000e74  3508              ADDS     r5,r5,#8
000e76  f8b01090          LDRH     r1,[r0,#0x90]  ; makb
000e7a  80e9              STRH     r1,[r5,#6]
;;;574    
;;;575    snmp_makb_temper0[0]=makb[0]._T[0];
000e7c  3508              ADDS     r5,r5,#8
000e7e  8a81              LDRH     r1,[r0,#0x14]  ; makb
000e80  8029              STRH     r1,[r5,#0]
;;;576    snmp_makb_temper1[0]=makb[0]._T[1];
000e82  4948              LDR      r1,|L1.4004|
000e84  8ac5              LDRH     r5,[r0,#0x16]  ; makb
000e86  315c              ADDS     r1,r1,#0x5c
000e88  800d              STRH     r5,[r1,#0]
;;;577    snmp_makb_temper2[0]=makb[0]._T[2];
000e8a  f1010508          ADD      r5,r1,#8
000e8e  8b07              LDRH     r7,[r0,#0x18]  ; makb
000e90  802f              STRH     r7,[r5,#0]
;;;578    snmp_makb_temper3[0]=makb[0]._T[3];
000e92  f1010710          ADD      r7,r1,#0x10
000e96  f8b0c01a          LDRH     r12,[r0,#0x1a]  ; makb
000e9a  f8a7c000          STRH     r12,[r7,#0]
;;;579    snmp_makb_temper4[0]=makb[0]._T[4];
000e9e  f1010c18          ADD      r12,r1,#0x18
000ea2  f8b0801c          LDRH     r8,[r0,#0x1c]  ; makb
000ea6  f8ac8000          STRH     r8,[r12,#0]
;;;580    snmp_makb_temper0[1]=makb[1]._T[0];
000eaa  f1a10a08          SUB      r10,r1,#8
000eae  f8b0803e          LDRH     r8,[r0,#0x3e]  ; makb
000eb2  f8aa8002          STRH     r8,[r10,#2]
;;;581    snmp_makb_temper1[1]=makb[1]._T[1];
000eb6  f8b08040          LDRH     r8,[r0,#0x40]  ; makb
000eba  f8a18002          STRH     r8,[r1,#2]
;;;582    snmp_makb_temper2[1]=makb[1]._T[2];
000ebe  f8b08042          LDRH     r8,[r0,#0x42]  ; makb
000ec2  f8a58002          STRH     r8,[r5,#2]
;;;583    snmp_makb_temper3[1]=makb[1]._T[3];
000ec6  f8b08044          LDRH     r8,[r0,#0x44]  ; makb
000eca  f8a78002          STRH     r8,[r7,#2]
;;;584    snmp_makb_temper4[1]=makb[1]._T[4];
000ece  f8b08046          LDRH     r8,[r0,#0x46]  ; makb
000ed2  f8ac8002          STRH     r8,[r12,#2]
;;;585    snmp_makb_temper0[2]=makb[2]._T[0];
000ed6  f8b08068          LDRH     r8,[r0,#0x68]  ; makb
000eda  f8aa8004          STRH     r8,[r10,#4]
;;;586    snmp_makb_temper1[2]=makb[2]._T[1];
000ede  f8b0806a          LDRH     r8,[r0,#0x6a]  ; makb
000ee2  f8a18004          STRH     r8,[r1,#4]
;;;587    snmp_makb_temper2[2]=makb[2]._T[2];
000ee6  f8b0806c          LDRH     r8,[r0,#0x6c]  ; makb
000eea  f8a58004          STRH     r8,[r5,#4]
;;;588    snmp_makb_temper3[2]=makb[2]._T[3];
000eee  f8b0806e          LDRH     r8,[r0,#0x6e]  ; makb
000ef2  f8a78004          STRH     r8,[r7,#4]
;;;589    snmp_makb_temper4[2]=makb[2]._T[4];
000ef6  f8b08070          LDRH     r8,[r0,#0x70]  ; makb
000efa  f8ac8004          STRH     r8,[r12,#4]
;;;590    snmp_makb_temper0[3]=makb[3]._T[0];
000efe  f8b08092          LDRH     r8,[r0,#0x92]  ; makb
000f02  f8aa8006          STRH     r8,[r10,#6]
;;;591    snmp_makb_temper1[3]=makb[3]._T[1];
000f06  f8b08094          LDRH     r8,[r0,#0x94]  ; makb
000f0a  f8a18006          STRH     r8,[r1,#6]
;;;592    snmp_makb_temper2[3]=makb[3]._T[2];
000f0e  f8b01096          LDRH     r1,[r0,#0x96]  ; makb
000f12  80e9              STRH     r1,[r5,#6]
;;;593    snmp_makb_temper3[3]=makb[3]._T[3];
000f14  f8b01098          LDRH     r1,[r0,#0x98]  ; makb
000f18  80f9              STRH     r1,[r7,#6]
;;;594    snmp_makb_temper4[3]=makb[3]._T[4];
000f1a  f8b0109a          LDRH     r1,[r0,#0x9a]  ; makb
000f1e  f8ac1006          STRH     r1,[r12,#6]
;;;595    
;;;596    snmp_makb_temper0_stat[0]=makb[0]._T_nd[0];
000f22  f1070110          ADD      r1,r7,#0x10
000f26  8bc5              LDRH     r5,[r0,#0x1e]  ; makb
000f28  800d              STRH     r5,[r1,#0]
;;;597    snmp_makb_temper1_stat[0]=makb[0]._T_nd[1];
000f2a  f1010508          ADD      r5,r1,#8
000f2e  8c07              LDRH     r7,[r0,#0x20]  ; makb
000f30  802f              STRH     r7,[r5,#0]
;;;598    snmp_makb_temper2_stat[0]=makb[0]._T_nd[2];
000f32  f1010710          ADD      r7,r1,#0x10
000f36  f8b0c022          LDRH     r12,[r0,#0x22]  ; makb
000f3a  f8a7c000          STRH     r12,[r7,#0]
;;;599    snmp_makb_temper3_stat[0]=makb[0]._T_nd[3];
000f3e  f1010c18          ADD      r12,r1,#0x18
000f42  f8b08024          LDRH     r8,[r0,#0x24]  ; makb
000f46  f8ac8000          STRH     r8,[r12,#0]
;;;600    snmp_makb_temper4_stat[0]=makb[0]._T_nd[4];
000f4a  f1010820          ADD      r8,r1,#0x20
000f4e  f8b0a026          LDRH     r10,[r0,#0x26]  ; makb
000f52  f8a8a000          STRH     r10,[r8,#0]
;;;601    snmp_makb_temper0_stat[1]=makb[1]._T_nd[0];
000f56  f8b0a048          LDRH     r10,[r0,#0x48]  ; makb
000f5a  f8a1a002          STRH     r10,[r1,#2]
;;;602    snmp_makb_temper1_stat[1]=makb[1]._T_nd[1];
000f5e  f8b0a04a          LDRH     r10,[r0,#0x4a]  ; makb
000f62  f8a5a002          STRH     r10,[r5,#2]
;;;603    snmp_makb_temper2_stat[1]=makb[1]._T_nd[2];
000f66  f8b0a04c          LDRH     r10,[r0,#0x4c]  ; makb
000f6a  f8a7a002          STRH     r10,[r7,#2]
;;;604    snmp_makb_temper3_stat[1]=makb[1]._T_nd[3];
000f6e  f8b0a04e          LDRH     r10,[r0,#0x4e]  ; makb
000f72  f8aca002          STRH     r10,[r12,#2]
;;;605    snmp_makb_temper4_stat[1]=makb[1]._T_nd[4];
000f76  f8b0a050          LDRH     r10,[r0,#0x50]  ; makb
000f7a  f8a8a002          STRH     r10,[r8,#2]
;;;606    snmp_makb_temper0_stat[2]=makb[2]._T_nd[0];
000f7e  f8b0a072          LDRH     r10,[r0,#0x72]  ; makb
000f82  f8a1a004          STRH     r10,[r1,#4]
;;;607    snmp_makb_temper1_stat[2]=makb[2]._T_nd[1];
000f86  f8b0a074          LDRH     r10,[r0,#0x74]  ; makb
000f8a  f8a5a004          STRH     r10,[r5,#4]
;;;608    snmp_makb_temper2_stat[2]=makb[2]._T_nd[2];
000f8e  f8b0a076          LDRH     r10,[r0,#0x76]  ; makb
000f92  f8a7a004          STRH     r10,[r7,#4]
;;;609    snmp_makb_temper3_stat[2]=makb[2]._T_nd[3];
000f96  f8b0a078          LDRH     r10,[r0,#0x78]  ; makb
000f9a  f8aca004          STRH     r10,[r12,#4]
;;;610    snmp_makb_temper4_stat[2]=makb[2]._T_nd[4];
000f9e  e01d              B        |L1.4060|
                  |L1.4000|
                          DCD      ||.bss||+0xa8
                  |L1.4004|
                          DCD      ||.data||+0xf0
                  |L1.4008|
                          DCD      inv
                  |L1.4012|
000fac  446f6f72          DCB      "Door",0
000fb0  00      
000fb1  00                DCB      0
000fb2  00                DCB      0
000fb3  00                DCB      0
                  |L1.4020|
                          DCD      sk_stat
                  |L1.4024|
                          DCD      SK_SIGN
                  |L1.4028|
                          DCD      sk_av_stat
                  |L1.4032|
000fc0  536d6f6b          DCB      "Smoke",0
000fc4  6500    
000fc6  00                DCB      0
000fc7  00                DCB      0
                  |L1.4040|
000fc8  53686f63          DCB      "Shock",0
000fcc  6b00    
000fce  00                DCB      0
000fcf  00                DCB      0
                  |L1.4048|
000fd0  20202020          DCB      "     ",0
000fd4  2000    
000fd6  00                DCB      0
000fd7  00                DCB      0
                  |L1.4056|
                          DCD      makb
                  |L1.4060|
000fdc  f8b0a07a          LDRH     r10,[r0,#0x7a]  ; makb
000fe0  f8a8a004          STRH     r10,[r8,#4]
;;;611    snmp_makb_temper0_stat[3]=makb[3]._T_nd[0];
000fe4  f8b0a09c          LDRH     r10,[r0,#0x9c]  ; makb
000fe8  f8a1a006          STRH     r10,[r1,#6]
;;;612    snmp_makb_temper1_stat[3]=makb[3]._T_nd[1];
000fec  f8b0109e          LDRH     r1,[r0,#0x9e]  ; makb
000ff0  80e9              STRH     r1,[r5,#6]
;;;613    snmp_makb_temper2_stat[3]=makb[3]._T_nd[2];
000ff2  f8b010a0          LDRH     r1,[r0,#0xa0]  ; makb
000ff6  80f9              STRH     r1,[r7,#6]
;;;614    snmp_makb_temper3_stat[3]=makb[3]._T_nd[3];
000ff8  f8b010a2          LDRH     r1,[r0,#0xa2]  ; makb
000ffc  f8ac1006          STRH     r1,[r12,#6]
;;;615    snmp_makb_temper4_stat[3]=makb[3]._T_nd[4];
001000  f8b000a4          LDRH     r0,[r0,#0xa4]  ; makb
001004  f8a80006          STRH     r0,[r8,#6]
;;;616    
;;;617    
;;;618    snmp_klimat_box_temper=t_box;
001008  48f9              LDR      r0,|L1.5104|
00100a  8800              LDRH     r0,[r0,#0]  ; t_box
00100c  f8a6007c          STRH     r0,[r6,#0x7c]
;;;619    snmp_klimat_settings_box_alarm=TBOXMAX;
001010  48f8              LDR      r0,|L1.5108|
001012  f5a571ba          SUB      r1,r5,#0x174
001016  8800              LDRH     r0,[r0,#0]  ; TBOXMAX
001018  f8a1007e          STRH     r0,[r1,#0x7e]
;;;620    snmp_klimat_settings_vent_on=TBOXVENTON;
00101c  48f6              LDR      r0,|L1.5112|
00101e  8801              LDRH     r1,[r0,#0]  ; TBOXVENTON
001020  f1a500f4          SUB      r0,r5,#0xf4
001024  8001              STRH     r1,[r0,#0]
;;;621    snmp_klimat_settings_vent_off=TBOXVENTOFF;
001026  49f5              LDR      r1,|L1.5116|
001028  8809              LDRH     r1,[r1,#0]  ; TBOXVENTOFF
00102a  8041              STRH     r1,[r0,#2]
;;;622    snmp_klimat_settings_warm_on=TBOXWARMON;
00102c  49f4              LDR      r1,|L1.5120|
00102e  8809              LDRH     r1,[r1,#0]  ; TBOXWARMON
001030  8081              STRH     r1,[r0,#4]
;;;623    snmp_klimat_settings_warm_off=TBOXWARMOFF;
001032  49f4              LDR      r1,|L1.5124|
001034  8809              LDRH     r1,[r1,#0]  ; TBOXWARMOFF
001036  80c1              STRH     r1,[r0,#6]
;;;624    snmp_klimat_settings_load_on=TLOADENABLE;
001038  49f3              LDR      r1,|L1.5128|
00103a  8809              LDRH     r1,[r1,#0]  ; TLOADENABLE
00103c  8101              STRH     r1,[r0,#8]
;;;625    snmp_klimat_settings_load_off=TLOADDISABLE;
00103e  49f3              LDR      r1,|L1.5132|
001040  8809              LDRH     r1,[r1,#0]  ; TLOADDISABLE
001042  8141              STRH     r1,[r0,#0xa]
;;;626    snmp_klimat_settings_batt_on=TBATENABLE;
001044  49f2              LDR      r1,|L1.5136|
001046  8809              LDRH     r1,[r1,#0]  ; TBATENABLE
001048  8181              STRH     r1,[r0,#0xc]
;;;627    snmp_klimat_settings_batt_off=TBATDISABLE;
00104a  49f2              LDR      r1,|L1.5140|
00104c  8809              LDRH     r1,[r1,#0]  ; TBATDISABLE
00104e  81c1              STRH     r1,[r0,#0xe]
;;;628    
;;;629    snmp_dt_ext=t_ext[0];
001050  49f1              LDR      r1,|L1.5144|
001052  8203              STRH     r3,[r0,#0x10]
;;;630    snmp_dt_msan=t_ext[1];
001054  f9b17002          LDRSH    r7,[r1,#2]  ; t_ext
001058  8247              STRH     r7,[r0,#0x12]
;;;631    snmp_dt_epu=t_ext[2];
00105a  f9b1c004          LDRSH    r12,[r1,#4]  ; t_ext
00105e  f8a0c014          STRH     r12,[r0,#0x14]
;;;632    
;;;633    /*
;;;634    snmp_bat_voltage=Ubat;
;;;635    snmp_bat_current=Ibat;
;;;636    snmp_bat_temperature=t_b;
;;;637    if(BAT_C_REAL==0x5555)
;;;638    	{
;;;639    	snmp_bat_capacity=BAT_C_NOM*10;												    11
;;;640    	}
;;;641    else
;;;642    	{
;;;643    	snmp_bat_capacity=BAT_C_REAL;
;;;644    	}
;;;645    snmp_bat_charge=zar_percent;
;;;646    snmp_bat_status=0;
;;;647    if(St&0x02)snmp_bat_status|=0x01;
;;;648    if(Ibat>0)snmp_bat_status|=0x02;
;;;649    
;;;650    
;;;651    if(spc_stat==spc_OFF) snmp_spc_stat=0;
;;;652    else if(spc_stat==spc_KE) snmp_spc_stat=1;
;;;653    else if(spc_stat==spc_VZ) snmp_spc_stat=10;
;;;654    
;;;655    
;;;656    snmp_main_bps=MAIN_IST+1;
;;;657    */
;;;658    snmp_zv_en=ZV_ON;
001062  48ee              LDR      r0,|L1.5148|
001064  f5a571ba          SUB      r1,r5,#0x174
001068  8800              LDRH     r0,[r0,#0]  ; ZV_ON
00106a  f8a1004c          STRH     r0,[r1,#0x4c]
;;;659    snmp_alarm_auto_disable=AV_OFF_AVT;
00106e  48ec              LDR      r0,|L1.5152|
001070  8800              LDRH     r0,[r0,#0]  ; AV_OFF_AVT
001072  f8a1004e          STRH     r0,[r1,#0x4e]
;;;660    snmp_bat_test_time=TBAT;
001076  48eb              LDR      r0,|L1.5156|
001078  8800              LDRH     r0,[r0,#0]  ; TBAT
00107a  f8a10050          STRH     r0,[r1,#0x50]
;;;661    snmp_u_max=UMAX;
00107e  48ea              LDR      r0,|L1.5160|
001080  8800              LDRH     r0,[r0,#0]  ; UMAX
001082  f8a10052          STRH     r0,[r1,#0x52]
;;;662    snmp_u_min=UB20-DU;
001086  48e9              LDR      r0,|L1.5164|
001088  49e9              LDR      r1,|L1.5168|
00108a  f5a575ba          SUB      r5,r5,#0x174
00108e  8800              LDRH     r0,[r0,#0]  ; UB20
001090  8809              LDRH     r1,[r1,#0]  ; DU
001092  eba00101          SUB      r1,r0,r1
001096  f8a51054          STRH     r1,[r5,#0x54]
;;;663    snmp_u_0_grad=UB0;
00109a  49e6              LDR      r1,|L1.5172|
00109c  8809              LDRH     r1,[r1,#0]  ; UB0
00109e  f8a51056          STRH     r1,[r5,#0x56]
;;;664    snmp_u_20_grad=UB20;
0010a2  4629              MOV      r1,r5
0010a4  f8a10058          STRH     r0,[r1,#0x58]
;;;665    snmp_u_sign=USIGN;
0010a8  48e3              LDR      r0,|L1.5176|
0010aa  8800              LDRH     r0,[r0,#0]  ; USIGN
0010ac  f8a1005a          STRH     r0,[r1,#0x5a]
;;;666    snmp_u_min_power=UMN;
0010b0  48e2              LDR      r0,|L1.5180|
0010b2  8800              LDRH     r0,[r0,#0]  ; UMN
0010b4  f8a1005c          STRH     r0,[r1,#0x5c]
;;;667    snmp_u_max_power=UMAXN;	 //o_10
0010b8  48e1              LDR      r0,|L1.5184|
0010ba  8800              LDRH     r0,[r0,#0]  ; UMAXN
0010bc  f8a1005e          STRH     r0,[r1,#0x5e]
;;;668    snmp_u_withouth_bat=U0B;
0010c0  48e0              LDR      r0,|L1.5188|
0010c2  8800              LDRH     r0,[r0,#0]  ; U0B
0010c4  f8a10060          STRH     r0,[r1,#0x60]
;;;669    snmp_control_current=IKB;
0010c8  48df              LDR      r0,|L1.5192|
0010ca  8800              LDRH     r0,[r0,#0]  ; IKB
0010cc  f8a10062          STRH     r0,[r1,#0x62]
;;;670    snmp_max_charge_current=IZMAX;
0010d0  48de              LDR      r0,|L1.5196|
0010d2  8800              LDRH     r0,[r0,#0]  ; IZMAX
0010d4  f8a10064          STRH     r0,[r1,#0x64]
;;;671    snmp_max_current=IMAX;
0010d8  48dd              LDR      r0,|L1.5200|
0010da  8800              LDRH     r0,[r0,#0]  ; IMAX
0010dc  f8a10066          STRH     r0,[r1,#0x66]
;;;672    snmp_min_current=IMIN;
0010e0  48dc              LDR      r0,|L1.5204|
0010e2  8800              LDRH     r0,[r0,#0]  ; IMIN
0010e4  f8a10068          STRH     r0,[r1,#0x68]
;;;673    //snmp_max_current_koef=KIMAX;
;;;674    snmp_uvz=UVZ;
0010e8  48db              LDR      r0,|L1.5208|
0010ea  8800              LDRH     r0,[r0,#0]  ; UVZ
0010ec  f8a1006a          STRH     r0,[r1,#0x6a]
;;;675    snmp_powerup_psu_timeout=TZAS;
0010f0  48da              LDR      r0,|L1.5212|
0010f2  8800              LDRH     r0,[r0,#0]  ; TZAS
0010f4  f8a1006c          STRH     r0,[r1,#0x6c]
;;;676    snmp_max_temperature=TMAX;
0010f8  48d9              LDR      r0,|L1.5216|
0010fa  8800              LDRH     r0,[r0,#0]  ; TMAX
0010fc  f8a1006e          STRH     r0,[r1,#0x6e]
;;;677    snmp_tsign_bat=TBATSIGN; 
001100  49d8              LDR      r1,|L1.5220|
001102  8809              LDRH     r1,[r1,#0]  ; TBATSIGN
001104  f8a51070          STRH     r1,[r5,#0x70]
;;;678    snmp_tmax_bat=TBATMAX;
001108  49d7              LDR      r1,|L1.5224|
00110a  8809              LDRH     r1,[r1,#0]  ; TBATMAX
00110c  f8a51072          STRH     r1,[r5,#0x72]
;;;679    snmp_tsign_bps=TSIGN;
001110  49d6              LDR      r1,|L1.5228|
001112  8809              LDRH     r1,[r1,#0]  ; TSIGN
001114  f8a51074          STRH     r1,[r5,#0x74]
;;;680    snmp_tmax_bps=TMAX;
001118  4629              MOV      r1,r5
00111a  f8a10076          STRH     r0,[r1,#0x76]
;;;681    snmp_bat_part_alarm=UBM_AV; 
00111e  48d4              LDR      r0,|L1.5232|
001120  8800              LDRH     r0,[r0,#0]  ; UBM_AV
001122  f8a10078          STRH     r0,[r1,#0x78]
;;;682    snmp_power_cnt_adress=POWER_CNT_ADRESS;
001126  48d3              LDR      r0,|L1.5236|
001128  8800              LDRH     r0,[r0,#0]  ; POWER_CNT_ADRESS
00112a  f8a6007a          STRH     r0,[r6,#0x7a]
;;;683    
;;;684    for(i=0;i<12;i++)
00112e  f04f0000          MOV      r0,#0
;;;685    	{
;;;686    	snmp_avt_number[i]=i+1;
001132  4ed1              LDR      r6,|L1.5240|
;;;687    	if(avt_stat[i]==avtOFF)snmp_avt_stat[i]=0;
001134  f8df8344          LDR      r8,|L1.5244|
001138  f106050c          ADD      r5,r6,#0xc
                  |L1.4412|
00113c  f1000101          ADD      r1,r0,#1              ;686
001140  5431              STRB     r1,[r6,r0]            ;686
001142  f818a000          LDRB     r10,[r8,r0]
001146  f1ba0f00          CMP      r10,#0
00114a  d07d              BEQ      |L1.4680|
;;;688    	else snmp_avt_stat[i]=1;
00114c  f805e000          STRB     lr,[r5,r0]
                  |L1.4432|
001150  b2c8              UXTB     r0,r1                 ;684
001152  280c              CMP      r0,#0xc               ;684
001154  d3f2              BCC      |L1.4412|
;;;689    	}
;;;690    
;;;691    snmp_dt_number[0]=1;
001156  48ca              LDR      r0,|L1.5248|
001158  f880e000          STRB     lr,[r0,#0]
;;;692    snmp_dt_number[1]=2;
00115c  f04f0402          MOV      r4,#2
001160  7044              STRB     r4,[r0,#1]
;;;693    snmp_dt_number[2]=3;
001162  f8809002          STRB     r9,[r0,#2]
;;;694    //snmp_dt_number[3]=4;
;;;695    snmp_dt_temper[0]=t_ext[0];
001166  f1000078          ADD      r0,r0,#0x78
00116a  8003              STRH     r3,[r0,#0]
;;;696    snmp_dt_temper[1]=t_ext[1];
00116c  8047              STRH     r7,[r0,#2]
;;;697    snmp_dt_temper[2]=t_ext[2];
00116e  f8a0c004          STRH     r12,[r0,#4]
;;;698    //snmp_dt_temper[3]=t_ext[3];
;;;699    snmp_dt_error[0]=ND_EXT[0];
001172  4bc4              LDR      r3,|L1.5252|
001174  49c2              LDR      r1,|L1.5248|
001176  f1010103          ADD      r1,r1,#3
00117a  7818              LDRB     r0,[r3,#0]  ; ND_EXT
00117c  7008              STRB     r0,[r1,#0]
;;;700    if(NUMDT<1)snmp_dt_error[0]=0xff;
00117e  48c2              LDR      r0,|L1.5256|
001180  f9b00000          LDRSH    r0,[r0,#0]  ; NUMDT
001184  2801              CMP      r0,#1
001186  da00              BGE      |L1.4490|
001188  700a              STRB     r2,[r1,#0]
                  |L1.4490|
;;;701    snmp_dt_error[1]=ND_EXT[1];
00118a  785d              LDRB     r5,[r3,#1]  ; ND_EXT
00118c  704d              STRB     r5,[r1,#1]
;;;702    if(NUMDT<2)snmp_dt_error[0]=0xff;
00118e  2802              CMP      r0,#2
001190  da00              BGE      |L1.4500|
001192  700a              STRB     r2,[r1,#0]
                  |L1.4500|
;;;703    snmp_dt_error[2]=ND_EXT[2];
001194  789b              LDRB     r3,[r3,#2]  ; ND_EXT
001196  708b              STRB     r3,[r1,#2]
;;;704    if(NUMDT<3)snmp_dt_error[0]=0xff;
001198  2803              CMP      r0,#3
00119a  da00              BGE      |L1.4510|
00119c  700a              STRB     r2,[r1,#0]
                  |L1.4510|
;;;705    //snmp_dt_error[3]=ND_EXT[3];
;;;706    if(NUMDT<4)snmp_dt_error[0]=0xff;
00119e  2804              CMP      r0,#4
0011a0  da00              BGE      |L1.4516|
0011a2  700a              STRB     r2,[r1,#0]
                  |L1.4516|
;;;707    
;;;708    /*
;;;709    //Литиевые батареи
;;;710    snmp_lakb_number[0]=1;								//Номер ЛАКБ
;;;711    snmp_lakb_number[1]=2;								//Номер ЛАКБ
;;;712    snmp_lakb_voltage[0]=lakb[0]._tot_bat_volt;				//Напряжение ЛАКБ
;;;713    snmp_lakb_voltage[1]=lakb[1]._tot_bat_volt;				//Напряжение ЛАКБ
;;;714    snmp_lakb_max_cell_voltage[0]=lakb[0]._max_cell_volt;		//Максимальное напряжение ячейки ЛАКБ
;;;715    snmp_lakb_max_cell_voltage[1]=lakb[1]._max_cell_volt;		//Максимальное напряжение ячейки ЛАКБ
;;;716    snmp_lakb_min_cell_voltage[0]=lakb[0]._min_cell_volt;		//Минимальное напряжение ячейки ЛАКБ
;;;717    snmp_lakb_min_cell_voltage[1]=lakb[1]._min_cell_volt;		//Минимальное напряжение ячейки ЛАКБ
;;;718    snmp_lakb_max_cell_temperature[0]=lakb[0]._max_cell_temp;	//Максимальная температура ячейки ЛАКБ
;;;719    snmp_lakb_max_cell_temperature[1]=lakb[1]._max_cell_temp;	//Максимальная температура ячейки ЛАКБ
;;;720    snmp_lakb_min_cell_temperature[0]=lakb[0]._min_cell_temp;	//Минимальная температура ячейки ЛАКБ
;;;721    snmp_lakb_min_cell_temperature[1]=lakb[1]._min_cell_temp;	//Минимальная температура ячейки ЛАКБ
;;;722    snmp_lakb_ch_curr[0]=lakb[0]._ch_curr;					//Ток заряда ЛАКБ
;;;723    snmp_lakb_ch_curr[1]=lakb[1]._ch_curr;					//Ток заряда ЛАКБ
;;;724    snmp_lakb_dsch_curr[0]=lakb[0]._dsch_curr;				//Ток разряда ЛАКБ
;;;725    snmp_lakb_dsch_curr[1]=lakb[1]._dsch_curr;				//Ток разряда ЛАКБ
;;;726    snmp_lakb_rat_cap[0]=lakb[0]._rat_cap;					//Номинальная емкость ЛАКБ
;;;727    snmp_lakb_rat_cap[1]=lakb[1]._rat_cap;					//Номинальная емкость ЛАКБ
;;;728    snmp_lakb_soh[0]=lakb[0]._s_o_h;						//Остаточная емкость ЛАКБ
;;;729    snmp_lakb_soh[1]=lakb[1]._s_o_h;						//Остаточная емкость ЛАКБ
;;;730    snmp_lakb_soc[0]=lakb[0]._s_o_c;						//Заряд ЛАКБ
;;;731    snmp_lakb_soc[1]=lakb[1]._s_o_c;						//Заряд ЛАКБ
;;;732    snmp_lakb_cclv[0]=lakb[0]._c_c_l_v;  					//Максимальный ток заряда ЛАКБ
;;;733    snmp_lakb_cclv[1]=lakb[1]._c_c_l_v;  					//Максимальный ток заряда ЛАКБ
;;;734    snmp_lakb_rbt[0]=lakb[0]._r_b_t;						//Оцениваемое время работы ЛАКБ
;;;735    snmp_lakb_rbt[1]=lakb[1]._r_b_t;						//Оцениваемое время работы ЛАКБ
;;;736    snmp_lakb_flags1[0]=lakb[0]._flags1;					//Первый флаг состояния ЛАКБ
;;;737    snmp_lakb_flags1[1]=lakb[1]._flags1;					//Первый флаг состояния ЛАКБ
;;;738    snmp_lakb_flags2[0]=lakb[0]._flags2;					//Второй флаг состояния ЛАКБ
;;;739    snmp_lakb_flags2[1]=lakb[1]._flags2;					//Второй флаг состояния ЛАКБ */
;;;740    
;;;741    //Литиевые батареи
;;;742    snmp_lakb_number[0]=1;								//Номер ЛАКБ
0011a4  48b4              LDR      r0,|L1.5240|
0011a6  3068              ADDS     r0,r0,#0x68
0011a8  f8a0e000          STRH     lr,[r0,#0]
;;;743    snmp_lakb_number[1]=2;								//Номер ЛАКБ
0011ac  8044              STRH     r4,[r0,#2]
;;;744    snmp_lakb_number[2]=3;								//Номер ЛАКБ
0011ae  f8a09004          STRH     r9,[r0,#4]
;;;745    snmp_lakb_number[3]=4;								//Номер ЛАКБ
0011b2  f04f0104          MOV      r1,#4
0011b6  80c1              STRH     r1,[r0,#6]
;;;746    snmp_lakb_number[4]=5;								//Номер ЛАКБ
0011b8  f04f0105          MOV      r1,#5
0011bc  8101              STRH     r1,[r0,#8]
;;;747    snmp_lakb_number[5]=6;								//Номер ЛАКБ
0011be  f04f0106          MOV      r1,#6
0011c2  8141              STRH     r1,[r0,#0xa]
;;;748    snmp_lakb_number[6]=7;								//Номер ЛАКБ
0011c4  f04f0107          MOV      r1,#7
0011c8  8181              STRH     r1,[r0,#0xc]
;;;749    
;;;750    for (i=0;i<3;i++)
0011ca  f04f0000          MOV      r0,#0
;;;751    	{
;;;752    	snmp_lakb_voltage[i]=lakb[i]._tot_bat_volt;				//Напряжение ЛАКБ
0011ce  4baa              LDR      r3,|L1.5240|
0011d0  4aae              LDR      r2,|L1.5260|
0011d2  f1030376          ADD      r3,r3,#0x76
;;;753    	snmp_lakb_max_cell_voltage[i]=lakb[i]._max_cell_volt;		//Максимальное напряжение ячейки ЛАКБ
0011d6  f103040e          ADD      r4,r3,#0xe
;;;754    	snmp_lakb_min_cell_voltage[i]=lakb[i]._min_cell_volt;		//Минимальное напряжение ячейки ЛАКБ
0011da  f103051c          ADD      r5,r3,#0x1c
;;;755    	snmp_lakb_max_cell_temperature[i]=lakb[i]._max_cell_temp;	//Максимальная температура ячейки ЛАКБ
0011de  f103062a          ADD      r6,r3,#0x2a
;;;756    	//snmp_lakb_max_cell_temperature[1]=lakb[1]._max_cell_temp;	//Максимальная температура ячейки ЛАКБ
;;;757    	snmp_lakb_min_cell_temperature[i]=lakb[i]._min_cell_temp;	//Минимальная температура ячейки ЛАКБ
0011e2  f1030738          ADD      r7,r3,#0x38
;;;758    	//snmp_lakb_min_cell_temperature[1]=lakb[1]._min_cell_temp;	//Минимальная температура ячейки ЛАКБ
;;;759    	snmp_lakb_ch_curr[i]=lakb[i]._ch_curr;					//Ток заряда ЛАКБ
0011e6  f1030c46          ADD      r12,r3,#0x46
;;;760    	//snmp_lakb_ch_curr[1]=lakb[1]._ch_curr;					//Ток заряда ЛАКБ
;;;761    	snmp_lakb_dsch_curr[i]=lakb[i]._dsch_curr;				//Ток разряда ЛАКБ
0011ea  f1030854          ADD      r8,r3,#0x54
;;;762    	//snmp_lakb_dsch_curr[1]=lakb[1]._dsch_curr;				//Ток разряда ЛАКБ
;;;763    	snmp_lakb_rat_cap[i]=lakb[i]._rat_cap;					//Номинальная емкость ЛАКБ
0011ee  f1030962          ADD      r9,r3,#0x62
;;;764    	//snmp_lakb_rat_cap[1]=lakb[1]._rat_cap;					//Номинальная емкость ЛАКБ
;;;765    	snmp_lakb_soh[i]=lakb[i]._s_o_h;						//Остаточная емкость ЛАКБ
0011f2  f1030a70          ADD      r10,r3,#0x70
                  |L1.4598|
0011f6  eb000180          ADD      r1,r0,r0,LSL #2       ;752
0011fa  eb021101          ADD      r1,r2,r1,LSL #4       ;752
0011fe  f8b1b008          LDRH     r11,[r1,#8]           ;752
001202  f823b010          STRH     r11,[r3,r0,LSL #1]    ;752
001206  f8b1b000          LDRH     r11,[r1,#0]           ;753
00120a  f824b010          STRH     r11,[r4,r0,LSL #1]    ;753
00120e  f8b1b002          LDRH     r11,[r1,#2]           ;754
001212  f825b010          STRH     r11,[r5,r0,LSL #1]    ;754
001216  f8b1b004          LDRH     r11,[r1,#4]           ;755
00121a  f826b010          STRH     r11,[r6,r0,LSL #1]    ;755
00121e  f8b1b006          LDRH     r11,[r1,#6]           ;757
001222  f827b010          STRH     r11,[r7,r0,LSL #1]    ;757
001226  f8b1b00a          LDRH     r11,[r1,#0xa]         ;759
00122a  f82cb010          STRH     r11,[r12,r0,LSL #1]   ;759
00122e  f8b1b00c          LDRH     r11,[r1,#0xc]         ;761
001232  f828b010          STRH     r11,[r8,r0,LSL #1]    ;761
001236  f8b1b00e          LDRH     r11,[r1,#0xe]         ;763
00123a  f829b010          STRH     r11,[r9,r0,LSL #1]    ;763
00123e  f8b1b010          LDRH     r11,[r1,#0x10]
001242  f82ab010          STRH     r11,[r10,r0,LSL #1]
;;;766    	//snmp_lakb_soh[1]=lakb[1]._s_o_h;						//Остаточная емкость ЛАКБ
;;;767    	snmp_lakb_soc[i]=lakb[i]._s_o_c;						//Заряд ЛАКБ
001246  e000              B        |L1.4682|
                  |L1.4680|
001248  e055              B        |L1.4854|
                  |L1.4682|
00124a  f8dfb22c          LDR      r11,|L1.5240|
00124e  f8b1e012          LDRH     lr,[r1,#0x12]
001252  f10b0bf4          ADD      r11,r11,#0xf4
001256  f82be010          STRH     lr,[r11,r0,LSL #1]
;;;768    	//snmp_lakb_soc[1]=lakb[1]._s_o_c;						//Заряд ЛАКБ
;;;769    	snmp_lakb_cclv[i]=lakb[i]._c_c_l_v;  					//Максимальный ток заряда ЛАКБ
00125a  f10b0b0e          ADD      r11,r11,#0xe
00125e  f8b1e014          LDRH     lr,[r1,#0x14]
001262  f82be010          STRH     lr,[r11,r0,LSL #1]
;;;770    	//snmp_lakb_cclv[1]=lakb[1]._c_c_l_v;  					//Максимальный ток заряда ЛАКБ
;;;771    	snmp_lakb_rbt[i]=lakb[i]._r_b_t;						//Оцениваемое время работы ЛАКБ
001266  f10b0b0e          ADD      r11,r11,#0xe
00126a  f8b1e016          LDRH     lr,[r1,#0x16]
00126e  f82be010          STRH     lr,[r11,r0,LSL #1]
;;;772    	//snmp_lakb_rbt[1]=lakb[1]._r_b_t;						//Оцениваемое время работы ЛАКБ
;;;773    	snmp_lakb_flags1[i]=lakb[i]._flags1;					//Первый флаг состояния ЛАКБ
001272  f10b0b0e          ADD      r11,r11,#0xe
001276  f8b1e01a          LDRH     lr,[r1,#0x1a]
00127a  f82be010          STRH     lr,[r11,r0,LSL #1]
;;;774    	//snmp_lakb_flags1[1]=lakb[1]._flags1;					//Первый флаг состояния ЛАКБ
;;;775    	snmp_lakb_flags2[i]=lakb[i]._flags2;					//Второй флаг состояния ЛАКБ
00127e  f10b0b0e          ADD      r11,r11,#0xe
001282  f8b1e01c          LDRH     lr,[r1,#0x1c]
001286  f82be010          STRH     lr,[r11,r0,LSL #1]
;;;776    	//snmp_lakb_flags2[1]=lakb[1]._flags2;					//Второй флаг состояния ЛАКБ
;;;777    
;;;778    	snmp_lakb_cell_temperature_1[i]= lakb[i]._cell_temp_1;
00128a  f8dfb1f4          LDR      r11,|L1.5248|
00128e  f891e03a          LDRB     lr,[r1,#0x3a]
001292  f10b0b06          ADD      r11,r11,#6
001296  f80be000          STRB     lr,[r11,r0]
;;;779    	snmp_lakb_cell_temperature_2[i]= lakb[i]._cell_temp_2;
00129a  f8dfe1e4          LDR      lr,|L1.5248|
00129e  f891b03b          LDRB     r11,[r1,#0x3b]
0012a2  f10e0e09          ADD      lr,lr,#9
0012a6  f80eb000          STRB     r11,[lr,r0]
;;;780    	snmp_lakb_cell_temperature_3[i]= lakb[i]._cell_temp_3;
0012aa  f10e0e03          ADD      lr,lr,#3
0012ae  f891b03c          LDRB     r11,[r1,#0x3c]
0012b2  f80eb000          STRB     r11,[lr,r0]
;;;781    	snmp_lakb_cell_temperature_4[i]= lakb[i]._cell_temp_4;
0012b6  f10e0e03          ADD      lr,lr,#3
0012ba  f891b03d          LDRB     r11,[r1,#0x3d]
0012be  f80eb000          STRB     r11,[lr,r0]
;;;782    	snmp_lakb_cell_temperature_ambient[i]=lakb[i]._cell_temp_ambient;
0012c2  f10e0e03          ADD      lr,lr,#3
0012c6  f891b03e          LDRB     r11,[r1,#0x3e]
0012ca  f80eb000          STRB     r11,[lr,r0]
;;;783    	snmp_lakb_cell_temperature_power[i]=lakb[i]._cell_temp_power;
0012ce  f10e0b03          ADD      r11,lr,#3
0012d2  f891103f          LDRB     r1,[r1,#0x3f]
0012d6  f80b1000          STRB     r1,[r11,r0]
0012da  f1000001          ADD      r0,r0,#1              ;750
0012de  b2c0              UXTB     r0,r0                 ;750
0012e0  2803              CMP      r0,#3                 ;750
0012e2  d388              BCC      |L1.4598|
;;;784    	}
;;;785    
;;;786    for (i=0;i<7;i++)
0012e4  f04f0000          MOV      r0,#0
                  |L1.4840|
0012e8  f1000001          ADD      r0,r0,#1
0012ec  b2c0              UXTB     r0,r0
0012ee  2807              CMP      r0,#7
0012f0  d3fa              BCC      |L1.4840|
;;;787    {
;;;788    /*
;;;789    snmp_lakb_damp1[i][0]=ABCDEF[(lakb_damp[i][0])>>4];			//Дамп
;;;790    snmp_lakb_damp1[i][1]=ABCDEF[(lakb_damp[i][0])&0x0f];			//Дамп
;;;791    snmp_lakb_damp1[i][2]=' ';
;;;792    snmp_lakb_damp1[i][3]=ABCDEF[(lakb_damp[i][1])>>4];			//Дамп
;;;793    snmp_lakb_damp1[i][4]=ABCDEF[(lakb_damp[i][1])&0x0f];			//Дамп
;;;794    snmp_lakb_damp1[i][5]=' ';
;;;795    snmp_lakb_damp1[i][6]=ABCDEF[(lakb_damp[i][2])>>4];			//Дамп
;;;796    snmp_lakb_damp1[i][7]=ABCDEF[(lakb_damp[i][2])&0x0f];			//Дамп
;;;797    snmp_lakb_damp1[i][8]=' ';
;;;798    snmp_lakb_damp1[i][9]=ABCDEF[(lakb_damp[i][3])>>4];			//Дамп
;;;799    snmp_lakb_damp1[i][10]=ABCDEF[(lakb_damp[i][3])&0x0f];			//Дамп
;;;800    snmp_lakb_damp1[i][11]=' ';
;;;801    snmp_lakb_damp1[i][12]=ABCDEF[(lakb_damp[i][4])>>4];			//Дамп
;;;802    snmp_lakb_damp1[i][13]=ABCDEF[(lakb_damp[i][4])&0x0f];			//Дамп
;;;803    snmp_lakb_damp1[i][14]=' '; 
;;;804    snmp_lakb_damp1[i][15]=ABCDEF[(lakb_damp[i][5])>>4];			//Дамп
;;;805    snmp_lakb_damp1[i][16]=ABCDEF[(lakb_damp[i][5])&0x0f];			//Дамп
;;;806    snmp_lakb_damp1[i][17]=' ';
;;;807    snmp_lakb_damp1[i][18]=ABCDEF[(lakb_damp[i][6])>>4];			//Дамп
;;;808    snmp_lakb_damp1[i][19]=ABCDEF[(lakb_damp[i][6])&0x0f];			//Дамп
;;;809    snmp_lakb_damp1[i][20]=' ';
;;;810    snmp_lakb_damp1[i][21]=ABCDEF[(lakb_damp[i][7])>>4];			//Дамп
;;;811    snmp_lakb_damp1[i][22]=ABCDEF[(lakb_damp[i][7])&0x0f];			//Дамп
;;;812    snmp_lakb_damp1[i][23]=' ';
;;;813    snmp_lakb_damp1[i][24]=ABCDEF[(lakb_damp[i][8])>>4];			//Дамп
;;;814    snmp_lakb_damp1[i][25]=ABCDEF[(lakb_damp[i][8])&0x0f];			//Дамп
;;;815    snmp_lakb_damp1[i][26]=' ';
;;;816    snmp_lakb_damp1[i][27]=ABCDEF[(lakb_damp[i][9])>>4];			//Дамп
;;;817    snmp_lakb_damp1[i][28]=ABCDEF[(lakb_damp[i][9])&0x0f];			//Дамп
;;;818    snmp_lakb_damp1[i][29]=0; 
;;;819    
;;;820    snmp_lakb_damp1[i][30]=ABCDEF[(lakb_damp[i][10])>>4];			//Дамп
;;;821    snmp_lakb_damp1[i][31]=ABCDEF[(lakb_damp[i][10])&0x0f];			//Дамп
;;;822    snmp_lakb_damp1[i][32]=' ';
;;;823    snmp_lakb_damp1[i][33]=ABCDEF[(lakb_damp[i][11])>>4];			//Дамп
;;;824    snmp_lakb_damp1[i][34]=ABCDEF[(lakb_damp[i][11])&0x0f];			//Дамп
;;;825    snmp_lakb_damp1[i][35]=' ';
;;;826    snmp_lakb_damp1[i][36]=ABCDEF[(lakb_damp[i][12])>>4];			//Дамп
;;;827    snmp_lakb_damp1[i][37]=ABCDEF[(lakb_damp[i][12])&0x0f];			//Дамп
;;;828    snmp_lakb_damp1[i][38]=' ';
;;;829    snmp_lakb_damp1[i][39]=ABCDEF[(lakb_damp[i][13])>>4];			//Дамп
;;;830    snmp_lakb_damp1[i][40]=ABCDEF[(lakb_damp[i][13])&0x0f];			//Дамп
;;;831    snmp_lakb_damp1[i][41]=' ';
;;;832    snmp_lakb_damp1[i][42]=ABCDEF[(lakb_damp[i][14])>>4];			//Дамп
;;;833    snmp_lakb_damp1[i][43]=ABCDEF[(lakb_damp[i][14])&0x0f];			//Дамп
;;;834    snmp_lakb_damp1[i][44]=' '; 
;;;835    snmp_lakb_damp1[i][45]=ABCDEF[(lakb_damp[i][15])>>4];			//Дамп
;;;836    snmp_lakb_damp1[i][46]=ABCDEF[(lakb_damp[i][15])&0x0f];			//Дамп
;;;837    snmp_lakb_damp1[i][47]=' ';
;;;838    snmp_lakb_damp1[i][48]=ABCDEF[(lakb_damp[i][16])>>4];			//Дамп
;;;839    snmp_lakb_damp1[i][49]=ABCDEF[(lakb_damp[i][16])&0x0f];			//Дамп
;;;840    snmp_lakb_damp1[i][50]=' ';
;;;841    snmp_lakb_damp1[i][51]=ABCDEF[(lakb_damp[i][17])>>4];			//Дамп
;;;842    snmp_lakb_damp1[i][52]=ABCDEF[(lakb_damp[i][17])&0x0f];			//Дамп
;;;843    snmp_lakb_damp1[i][53]=' ';
;;;844    snmp_lakb_damp1[i][54]=ABCDEF[(lakb_damp[i][18])>>4];			//Дамп
;;;845    snmp_lakb_damp1[i][55]=ABCDEF[(lakb_damp[i][18])&0x0f];			//Дамп
;;;846    snmp_lakb_damp1[i][56]=' ';
;;;847    snmp_lakb_damp1[i][57]=ABCDEF[(lakb_damp[i][19])>>4];			//Дамп
;;;848    snmp_lakb_damp1[i][58]=ABCDEF[(lakb_damp[i][19])&0x0f];			//Дамп
;;;849    snmp_lakb_damp1[i][59]=0; 
;;;850    
;;;851    
;;;852    snmp_lakb_damp1[i][60]=ABCDEF[(lakb_damp[i][20])>>4];			//Дамп
;;;853    snmp_lakb_damp1[i][61]=ABCDEF[(lakb_damp[i][20])&0x0f];			//Дамп
;;;854    snmp_lakb_damp1[i][62]=' ';
;;;855    snmp_lakb_damp1[i][63]=ABCDEF[(lakb_damp[i][21])>>4];			//Дамп
;;;856    snmp_lakb_damp1[i][64]=ABCDEF[(lakb_damp[i][21])&0x0f];			//Дамп
;;;857    snmp_lakb_damp1[i][65]=' ';
;;;858    snmp_lakb_damp1[i][66]=ABCDEF[(lakb_damp[i][22])>>4];			//Дамп
;;;859    snmp_lakb_damp1[i][67]=ABCDEF[(lakb_damp[i][22])&0x0f];			//Дамп
;;;860    snmp_lakb_damp1[i][68]=' ';
;;;861    snmp_lakb_damp1[i][69]=ABCDEF[(lakb_damp[i][23])>>4];			//Дамп
;;;862    snmp_lakb_damp1[i][70]=ABCDEF[(lakb_damp[i][23])&0x0f];			//Дамп
;;;863    snmp_lakb_damp1[i][71]=' ';
;;;864    snmp_lakb_damp1[i][72]=ABCDEF[(lakb_damp[i][24])>>4];			//Дамп
;;;865    snmp_lakb_damp1[i][73]=ABCDEF[(lakb_damp[i][24])&0x0f];			//Дамп
;;;866    snmp_lakb_damp1[i][74]=' '; 
;;;867    snmp_lakb_damp1[i][75]=ABCDEF[(lakb_damp[i][25])>>4];			//Дамп
;;;868    snmp_lakb_damp1[i][76]=ABCDEF[(lakb_damp[i][25])&0x0f];			//Дамп
;;;869    snmp_lakb_damp1[i][77]=' ';
;;;870    snmp_lakb_damp1[i][78]=ABCDEF[(lakb_damp[i][26])>>4];			//Дамп
;;;871    snmp_lakb_damp1[i][79]=ABCDEF[(lakb_damp[i][26])&0x0f];			//Дамп
;;;872    snmp_lakb_damp1[i][80]=' ';
;;;873    snmp_lakb_damp1[i][81]=ABCDEF[(lakb_damp[i][27])>>4];			//Дамп
;;;874    snmp_lakb_damp1[i][82]=ABCDEF[(lakb_damp[i][27])&0x0f];			//Дамп
;;;875    snmp_lakb_damp1[i][83]=' ';
;;;876    snmp_lakb_damp1[i][84]=ABCDEF[(lakb_damp[i][28])>>4];			//Дамп
;;;877    snmp_lakb_damp1[i][85]=ABCDEF[(lakb_damp[i][28])&0x0f];			//Дамп
;;;878    snmp_lakb_damp1[i][86]=' ';
;;;879    snmp_lakb_damp1[i][87]=ABCDEF[(lakb_damp[i][29])>>4];			//Дамп
;;;880    snmp_lakb_damp1[i][88]=ABCDEF[(lakb_damp[i][29])&0x0f];			//Дамп
;;;881    snmp_lakb_damp1[i][89]=0;
;;;882    
;;;883    
;;;884    snmp_lakb_damp1[i][90]=ABCDEF[(lakb_damp[i][30])>>4];			//Дамп
;;;885    snmp_lakb_damp1[i][91]=ABCDEF[(lakb_damp[i][30])&0x0f];			//Дамп
;;;886    snmp_lakb_damp1[i][92]=' ';
;;;887    snmp_lakb_damp1[i][93]=ABCDEF[(lakb_damp[i][31])>>4];			//Дамп
;;;888    snmp_lakb_damp1[i][94]=ABCDEF[(lakb_damp[i][31])&0x0f];			//Дамп
;;;889    snmp_lakb_damp1[i][95]=' ';
;;;890    snmp_lakb_damp1[i][96]=ABCDEF[(lakb_damp[i][32])>>4];			//Дамп
;;;891    snmp_lakb_damp1[i][97]=ABCDEF[(lakb_damp[i][32])&0x0f];			//Дамп
;;;892    snmp_lakb_damp1[i][98]=' ';
;;;893    snmp_lakb_damp1[i][99]=ABCDEF[(lakb_damp[i][33])>>4];			//Дамп
;;;894    snmp_lakb_damp1[i][100]=ABCDEF[(lakb_damp[i][33])&0x0f];			//Дамп
;;;895    snmp_lakb_damp1[i][101]=' ';
;;;896    snmp_lakb_damp1[i][102]=ABCDEF[(lakb_damp[i][34])>>4];			//Дамп
;;;897    snmp_lakb_damp1[i][103]=ABCDEF[(lakb_damp[i][34])&0x0f];			//Дамп
;;;898    snmp_lakb_damp1[i][104]=' '; 
;;;899    snmp_lakb_damp1[i][105]=ABCDEF[(lakb_damp[i][35])>>4];			//Дамп
;;;900    snmp_lakb_damp1[i][106]=ABCDEF[(lakb_damp[i][35])&0x0f];			//Дамп
;;;901    snmp_lakb_damp1[i][107]=' ';
;;;902    snmp_lakb_damp1[i][108]=ABCDEF[(lakb_damp[i][36])>>4];			//Дамп
;;;903    snmp_lakb_damp1[i][109]=ABCDEF[(lakb_damp[i][36])&0x0f];			//Дамп
;;;904    snmp_lakb_damp1[i][110]=' ';
;;;905    snmp_lakb_damp1[i][111]=ABCDEF[(lakb_damp[i][37])>>4];			//Дамп
;;;906    snmp_lakb_damp1[i][112]=ABCDEF[(lakb_damp[i][37])&0x0f];			//Дамп
;;;907    snmp_lakb_damp1[i][113]=' ';
;;;908    snmp_lakb_damp1[i][114]=ABCDEF[(lakb_damp[i][38])>>4];			//Дамп
;;;909    snmp_lakb_damp1[i][115]=ABCDEF[(lakb_damp[i][38])&0x0f];			//Дамп
;;;910    snmp_lakb_damp1[i][116]=' ';
;;;911    snmp_lakb_damp1[i][117]=ABCDEF[(lakb_damp[i][39])>>4];			//Дамп
;;;912    snmp_lakb_damp1[i][118]=ABCDEF[(lakb_damp[i][39])&0x0f];			//Дамп
;;;913    snmp_lakb_damp1[i][119]=0; 
;;;914     
;;;915    
;;;916    snmp_lakb_damp1[i][120]=ABCDEF[(lakb_damp[i][40])>>4];			//Дамп
;;;917    snmp_lakb_damp1[i][121]=ABCDEF[(lakb_damp[i][40])&0x0f];			//Дамп
;;;918    snmp_lakb_damp1[i][122]=' ';
;;;919    snmp_lakb_damp1[i][123]=ABCDEF[(lakb_damp[i][41])>>4];			//Дамп
;;;920    snmp_lakb_damp1[i][124]=ABCDEF[(lakb_damp[i][41])&0x0f];			//Дамп
;;;921    snmp_lakb_damp1[i][125]=' ';
;;;922    snmp_lakb_damp1[i][126]=ABCDEF[(lakb_damp[i][42])>>4];			//Дамп
;;;923    snmp_lakb_damp1[i][127]=ABCDEF[(lakb_damp[i][42])&0x0f];			//Дамп
;;;924    snmp_lakb_damp1[i][128]=' ';
;;;925    snmp_lakb_damp1[i][129]=ABCDEF[(lakb_damp[i][43])>>4];			//Дамп
;;;926    snmp_lakb_damp1[i][130]=ABCDEF[(lakb_damp[i][43])&0x0f];			//Дамп
;;;927    snmp_lakb_damp1[i][131]=' ';
;;;928    snmp_lakb_damp1[i][132]=ABCDEF[(lakb_damp[i][44])>>4];			//Дамп
;;;929    snmp_lakb_damp1[i][133]=ABCDEF[(lakb_damp[i][44])&0x0f];			//Дамп
;;;930    snmp_lakb_damp1[i][134]=' '; 
;;;931    snmp_lakb_damp1[i][135]=ABCDEF[(lakb_damp[i][45])>>4];			//Дамп
;;;932    snmp_lakb_damp1[i][136]=ABCDEF[(lakb_damp[i][45])&0x0f];			//Дамп
;;;933    snmp_lakb_damp1[i][137]=' ';
;;;934    snmp_lakb_damp1[i][138]=ABCDEF[(lakb_damp[i][46])>>4];			//Дамп
;;;935    snmp_lakb_damp1[i][139]=ABCDEF[(lakb_damp[i][46])&0x0f];			//Дамп
;;;936    snmp_lakb_damp1[i][140]=' ';
;;;937    snmp_lakb_damp1[i][141]=ABCDEF[(lakb_damp[i][47])>>4];			//Дамп
;;;938    snmp_lakb_damp1[i][142]=ABCDEF[(lakb_damp[i][47])&0x0f];			//Дамп
;;;939    snmp_lakb_damp1[i][143]=' ';
;;;940    snmp_lakb_damp1[i][144]=ABCDEF[(lakb_damp[i][48])>>4];			//Дамп
;;;941    snmp_lakb_damp1[i][145]=ABCDEF[(lakb_damp[i][48])&0x0f];			//Дамп
;;;942    snmp_lakb_damp1[i][146]=' ';
;;;943    snmp_lakb_damp1[i][147]=ABCDEF[(lakb_damp[i][49])>>4];			//Дамп
;;;944    snmp_lakb_damp1[i][148]=ABCDEF[(lakb_damp[i][49])&0x0f];			//Дамп
;;;945    snmp_lakb_damp1[i][149]=0;  */
;;;946    }
;;;947    
;;;948    #ifdef UKU_TELECORE2017
;;;949    snmp_warm_sign=0;
;;;950    if(TELECORE2017_KLIMAT_WARM_SIGNAL==0) snmp_warm_sign=2;
;;;951    else if(TELECORE2017_KLIMAT_WARM_SIGNAL==1) snmp_warm_sign=1;
;;;952    snmp_cool_sign=0;
;;;953    if(TELECORE2017_KLIMAT_VENT_SIGNAL==0) snmp_cool_sign=2;
;;;954    else if(TELECORE2017_KLIMAT_VENT_SIGNAL==1) snmp_cool_sign=1;
;;;955    snmp_warm_on_temper=(signed char)TELECORE2017_KLIMAT_WARM_ON; 
;;;956    snmp_warm_off_temper=(signed char)TELECORE2017_KLIMAT_WARM_OFF;
;;;957    snmp_warm_q=(signed char)TELECORE2017_KLIMAT_CAP;	
;;;958    snmp_cool_20_temper=(signed char)TELECORE2017_KLIMAT_VENT_ON20;
;;;959    snmp_cool_40_temper=(signed char)TELECORE2017_KLIMAT_VENT_ON40;
;;;960    snmp_cool_60_temper=(signed char)TELECORE2017_KLIMAT_VENT_ON60;
;;;961    snmp_cool_80_temper=(signed char)TELECORE2017_KLIMAT_VENT_ON80;
;;;962    snmp_cool_100_temper=(signed char)TELECORE2017_KLIMAT_VENT_ON100;
;;;963    snmp_cool_20_dtemper=(signed char)TELECORE2017_KLIMAT_DVENT_ON20;
;;;964    snmp_cool_40_dtemper=(signed char)TELECORE2017_KLIMAT_DVENT_ON40;
;;;965    snmp_cool_60_dtemper=(signed char)TELECORE2017_KLIMAT_DVENT_ON60;
;;;966    snmp_cool_80_dtemper=(signed char)TELECORE2017_KLIMAT_DVENT_ON80;
;;;967    snmp_cool_100_dtemper=(signed char)TELECORE2017_KLIMAT_DVENT_ON100;
;;;968    snmp_warm_stat=0;
;;;969    if(warm_stat_k==wsON) snmp_warm_stat=1;
;;;970    #endif
;;;971    }
0012f2  e8bd9ff0          POP      {r4-r12,pc}
                  |L1.4854|
0012f6  542c              STRB     r4,[r5,r0]            ;687
0012f8  e72a              B        |L1.4432|
;;;972    //-----------------------------------------------
                          ENDP

                  snmp_location_write PROC
;;;982    //-----------------------------------------------
;;;983    void snmp_location_write (int mode) 
0012fa  b570              PUSH     {r4-r6,lr}
;;;984    {
;;;985    char i;
;;;986    if(mode==MIB_WRITE)
0012fc  2801              CMP      r0,#1
0012fe  d10c              BNE      |L1.4890|
;;;987    	{
;;;988    	for(i=0;i<64;i++)
001300  f04f0400          MOV      r4,#0
;;;989    		{
;;;990    		lc640_write(EE_LOCATION+i,snmp_location[i]);
001304  4d62              LDR      r5,|L1.5264|
                  |L1.4870|
001306  f5047065          ADD      r0,r4,#0x394
00130a  5d29              LDRB     r1,[r5,r4]
00130c  f7fffffe          BL       lc640_write
001310  f1040401          ADD      r4,r4,#1              ;988
001314  b2e4              UXTB     r4,r4                 ;988
001316  2c40              CMP      r4,#0x40              ;988
001318  d3f5              BCC      |L1.4870|
                  |L1.4890|
;;;991    		}
;;;992    	}
;;;993    }
00131a  bd70              POP      {r4-r6,pc}
;;;994    
                          ENDP

                  snmp_alarm_aktiv_write1 PROC
;;;995    //-----------------------------------------------
;;;996    void snmp_alarm_aktiv_write1(int mode)
00131c  2801              CMP      r0,#1
;;;997    {
;;;998    if(mode==MIB_WRITE)
00131e  d10f              BNE      |L1.4928|
;;;999    	{
;;;1000   	if(!snmp_sk_alarm_aktiv[0])   lc640_write_int(ADR_SK_SIGN[0],0xffff);
001320  4857              LDR      r0,|L1.5248|
001322  304e              ADDS     r0,r0,#0x4e
001324  7801              LDRB     r1,[r0,#0]  ; snmp_sk_alarm_aktiv
001326  485b              LDR      r0,|L1.5268|
001328  b121              CBZ      r1,|L1.4916|
;;;1001   	else lc640_write_int(ADR_SK_SIGN[0],0);
00132a  f9b00000          LDRSH    r0,[r0,#0]  ; ADR_SK_SIGN
00132e  2100              MOVS     r1,#0
001330  f7ffbffe          B.W      lc640_write_int
                  |L1.4916|
001334  f9b00000          LDRSH    r0,[r0,#0]            ;1000  ; ADR_SK_SIGN
001338  f04f31ff          MOV      r1,#0xffffffff        ;1000
00133c  f7ffbffe          B.W      lc640_write_int
                  |L1.4928|
;;;1002   	}
;;;1003   }
001340  4770              BX       lr
;;;1004   
                          ENDP

                  snmp_alarm_aktiv_write2 PROC
;;;1005   //-----------------------------------------------
;;;1006   void snmp_alarm_aktiv_write2(int mode)
001342  2801              CMP      r0,#1
;;;1007   {
;;;1008   if(mode==MIB_WRITE)
001344  d10f              BNE      |L1.4966|
;;;1009   	{
;;;1010   	if(!snmp_sk_alarm_aktiv[1])   lc640_write_int(ADR_SK_SIGN[1],0xffff);
001346  484e              LDR      r0,|L1.5248|
001348  304e              ADDS     r0,r0,#0x4e
00134a  7841              LDRB     r1,[r0,#1]  ; snmp_sk_alarm_aktiv
00134c  4851              LDR      r0,|L1.5268|
00134e  b121              CBZ      r1,|L1.4954|
;;;1011   	else lc640_write_int(ADR_SK_SIGN[1],0);
001350  f9b00002          LDRSH    r0,[r0,#2]  ; ADR_SK_SIGN
001354  2100              MOVS     r1,#0
001356  f7ffbffe          B.W      lc640_write_int
                  |L1.4954|
00135a  f9b00002          LDRSH    r0,[r0,#2]            ;1010  ; ADR_SK_SIGN
00135e  f04f31ff          MOV      r1,#0xffffffff        ;1010
001362  f7ffbffe          B.W      lc640_write_int
                  |L1.4966|
;;;1012   	}
;;;1013   }
001366  4770              BX       lr
;;;1014   
                          ENDP

                  snmp_zv_on_write PROC
;;;1044   //-----------------------------------------------
;;;1045   void snmp_zv_on_write (int mode)
001368  2801              CMP      r0,#1
;;;1046   {
;;;1047   if(mode==MIB_WRITE)
00136a  d106              BNE      |L1.4986|
;;;1048   	{
;;;1049   	lc640_write_int(EE_ZV_ON,snmp_zv_en);
00136c  4844              LDR      r0,|L1.5248|
00136e  3896              SUBS     r0,r0,#0x96
001370  f9b0104c          LDRSH    r1,[r0,#0x4c]  ; snmp_zv_en
001374  2086              MOVS     r0,#0x86
001376  f7ffbffe          B.W      lc640_write_int
                  |L1.4986|
;;;1050   	}
;;;1051   }
00137a  4770              BX       lr
;;;1052   
                          ENDP

                  snmp_alarm_auto_disable_write PROC
;;;1053   //-----------------------------------------------
;;;1054   void snmp_alarm_auto_disable_write (int mode)
00137c  2801              CMP      r0,#1
;;;1055   {
;;;1056   if(mode==MIB_WRITE)
00137e  d106              BNE      |L1.5006|
;;;1057   	{
;;;1058        lc640_write_int(EE_AV_OFF_AVT,snmp_alarm_auto_disable);
001380  483f              LDR      r0,|L1.5248|
001382  3896              SUBS     r0,r0,#0x96
001384  f9b0104e          LDRSH    r1,[r0,#0x4e]  ; snmp_alarm_auto_disable
001388  2080              MOVS     r0,#0x80
00138a  f7ffbffe          B.W      lc640_write_int
                  |L1.5006|
;;;1059   	}
;;;1060   }
00138e  4770              BX       lr
;;;1061   
                          ENDP

                  snmp_bat_test_time_write PROC
;;;1062   //-----------------------------------------------
;;;1063   void snmp_bat_test_time_write (int mode)
001390  2801              CMP      r0,#1
;;;1064   {
;;;1065   if(mode==MIB_WRITE)
001392  d106              BNE      |L1.5026|
;;;1066   	{
;;;1067   	lc640_write_int(EE_TBAT,snmp_bat_test_time);
001394  483a              LDR      r0,|L1.5248|
001396  3896              SUBS     r0,r0,#0x96
001398  f9b01050          LDRSH    r1,[r0,#0x50]  ; snmp_bat_test_time
00139c  20c2              MOVS     r0,#0xc2
00139e  f7ffbffe          B.W      lc640_write_int
                  |L1.5026|
;;;1068   	}
;;;1069   }
0013a2  4770              BX       lr
;;;1070   
                          ENDP

                  snmp_uvz_write PROC
;;;1071   //-----------------------------------------------
;;;1072   void snmp_uvz_write (int mode)
0013a4  2801              CMP      r0,#1
;;;1073   {
;;;1074   if(mode==MIB_WRITE)
0013a6  d105              BNE      |L1.5044|
;;;1075   	{
;;;1076   	lc640_write_int(EE_UVZ,UVZ);
0013a8  482b              LDR      r0,|L1.5208|
0013aa  f9b01000          LDRSH    r1,[r0,#0]  ; UVZ
0013ae  20de              MOVS     r0,#0xde
0013b0  f7ffbffe          B.W      lc640_write_int
                  |L1.5044|
;;;1077   	}
;;;1078   }
0013b4  4770              BX       lr
;;;1079   
                          ENDP

                  snmp_imax_vz_write PROC
;;;1080   //-----------------------------------------------
;;;1081   void snmp_imax_vz_write (int mode)
0013b6  2801              CMP      r0,#1
;;;1082   {
;;;1083   if(mode==MIB_WRITE)
0013b8  d106              BNE      |L1.5064|
;;;1084   	{
;;;1085   	lc640_write_int(EE_IMAX_VZ,IMAX_VZ);
0013ba  4837              LDR      r0,|L1.5272|
0013bc  f9b01000          LDRSH    r1,[r0,#0]  ; IMAX_VZ
0013c0  f44f70d2          MOV      r0,#0x1a4
0013c4  f7ffbffe          B.W      lc640_write_int
                  |L1.5064|
;;;1086   	}
;;;1087   }	
0013c8  4770              BX       lr
;;;1088   
                          ENDP

                  snmp_vz_hr_write PROC
;;;1089   //-----------------------------------------------
;;;1090   void snmp_vz_hr_write (int mode)
0013ca  2801              CMP      r0,#1
;;;1091   {
;;;1092   if(mode==MIB_WRITE)
0013cc  d105              BNE      |L1.5082|
;;;1093   	{
;;;1094   	lc640_write_int(EE_VZ_HR,VZ_HR);
0013ce  4833              LDR      r0,|L1.5276|
0013d0  f9b01000          LDRSH    r1,[r0,#0]  ; VZ_HR
0013d4  20c0              MOVS     r0,#0xc0
0013d6  f7ffbffe          B.W      lc640_write_int
                  |L1.5082|
;;;1095   	}
;;;1096   }
0013da  4770              BX       lr
;;;1097   
                          ENDP

                  snmp_vz_ch_vent_block_write PROC
;;;1098   //-----------------------------------------------
;;;1099   void snmp_vz_ch_vent_block_write (int mode)
0013dc  2801              CMP      r0,#1
;;;1100   {
;;;1101   if(mode==MIB_WRITE)
0013de  d106              BNE      |L1.5102|
;;;1102   	{
;;;1103   	lc640_write_int(EE_VZ_CH_VENT_BLOK,VZ_CH_VENT_BLOK);
0013e0  482f              LDR      r0,|L1.5280|
0013e2  f9b01000          LDRSH    r1,[r0,#0]  ; VZ_CH_VENT_BLOK
0013e6  f44f70e8          MOV      r0,#0x1d0
0013ea  f7ffbffe          B.W      lc640_write_int
                  |L1.5102|
;;;1104   	}
;;;1105   }
0013ee  4770              BX       lr
                  |L1.5104|
                          DCD      t_box
                  |L1.5108|
                          DCD      TBOXMAX
                  |L1.5112|
                          DCD      TBOXVENTON
                  |L1.5116|
                          DCD      TBOXVENTOFF
                  |L1.5120|
                          DCD      TBOXWARMON
                  |L1.5124|
                          DCD      TBOXWARMOFF
                  |L1.5128|
                          DCD      TLOADENABLE
                  |L1.5132|
                          DCD      TLOADDISABLE
                  |L1.5136|
                          DCD      TBATENABLE
                  |L1.5140|
                          DCD      TBATDISABLE
                  |L1.5144|
                          DCD      t_ext
                  |L1.5148|
                          DCD      ZV_ON
                  |L1.5152|
                          DCD      AV_OFF_AVT
                  |L1.5156|
                          DCD      TBAT
                  |L1.5160|
                          DCD      UMAX
                  |L1.5164|
                          DCD      UB20
                  |L1.5168|
                          DCD      ||DU||
                  |L1.5172|
                          DCD      UB0
                  |L1.5176|
                          DCD      USIGN
                  |L1.5180|
                          DCD      UMN
                  |L1.5184|
                          DCD      UMAXN
                  |L1.5188|
                          DCD      U0B
                  |L1.5192|
                          DCD      IKB
                  |L1.5196|
                          DCD      IZMAX
                  |L1.5200|
                          DCD      IMAX
                  |L1.5204|
                          DCD      IMIN
                  |L1.5208|
                          DCD      UVZ
                  |L1.5212|
                          DCD      TZAS
                  |L1.5216|
                          DCD      TMAX
                  |L1.5220|
                          DCD      TBATSIGN
                  |L1.5224|
                          DCD      TBATMAX
                  |L1.5228|
                          DCD      TSIGN
                  |L1.5232|
                          DCD      UBM_AV
                  |L1.5236|
                          DCD      POWER_CNT_ADRESS
                  |L1.5240|
                          DCD      ||.bss||+0x12c
                  |L1.5244|
                          DCD      avt_stat
                  |L1.5248|
                          DCD      ||.data||+0x96
                  |L1.5252|
                          DCD      ND_EXT
                  |L1.5256|
                          DCD      NUMDT
                  |L1.5260|
                          DCD      lakb
                  |L1.5264|
                          DCD      ||.bss||+0x14
                  |L1.5268|
                          DCD      ADR_SK_SIGN
                  |L1.5272|
                          DCD      IMAX_VZ
                  |L1.5276|
                          DCD      VZ_HR
                  |L1.5280|
                          DCD      VZ_CH_VENT_BLOK
                          ENDP

                  snmp_spz_i_max_write PROC
;;;1107   //-----------------------------------------------
;;;1108   void snmp_spz_i_max_write (int mode)
0014a4  2801              CMP      r0,#1
;;;1109   {
;;;1110   if(mode==MIB_WRITE)
0014a6  d1a2              BNE      |L1.5102|
;;;1111   	{
;;;1112   	lc640_write_int(EE_SPEED_CHRG_CURR,speedChrgCurr);
0014a8  48ff              LDR      r0,|L1.6312|
0014aa  f9b01000          LDRSH    r1,[r0,#0]  ; speedChrgCurr
0014ae  f44f708b          MOV      r0,#0x116
0014b2  f7ffbffe          B.W      lc640_write_int
;;;1113   	}
;;;1114   }
0014b6  e79a              B        |L1.5102|
;;;1115   
                          ENDP

                  snmp_spz_u_write PROC
;;;1116   //-----------------------------------------------
;;;1117   void snmp_spz_u_write (int mode)
0014b8  2801              CMP      r0,#1
;;;1118   {
;;;1119   if(mode==MIB_WRITE)
0014ba  d198              BNE      |L1.5102|
;;;1120   	{
;;;1121   	lc640_write_int(EE_SPEED_CHRG_VOLT,speedChrgVolt);
0014bc  48fb              LDR      r0,|L1.6316|
0014be  f9b01000          LDRSH    r1,[r0,#0]  ; speedChrgVolt
0014c2  f44f708c          MOV      r0,#0x118
0014c6  f7ffbffe          B.W      lc640_write_int
;;;1122   	}
;;;1123   }
0014ca  e790              B        |L1.5102|
;;;1124   
                          ENDP

                  snmp_spz_time_write PROC
;;;1125   //-----------------------------------------------
;;;1126   void snmp_spz_time_write (int mode)
0014cc  2801              CMP      r0,#1
;;;1127   {
;;;1128   if(mode==MIB_WRITE)
0014ce  d18e              BNE      |L1.5102|
;;;1129   	{
;;;1130   	lc640_write_int(EE_SPEED_CHRG_TIME,speedChrgTimeInHour);
0014d0  48f7              LDR      r0,|L1.6320|
0014d2  f9b01000          LDRSH    r1,[r0,#0]  ; speedChrgTimeInHour
0014d6  f44f708d          MOV      r0,#0x11a
0014da  f7ffbffe          B.W      lc640_write_int
;;;1131   	}
;;;1132   }
0014de  e786              B        |L1.5102|
;;;1133   
                          ENDP

                  snmp_spz_avt_en_write PROC
;;;1134   //-----------------------------------------------
;;;1135   void snmp_spz_avt_en_write (int mode)
0014e0  2801              CMP      r0,#1
;;;1136   {
;;;1137   if(mode==MIB_WRITE)
0014e2  d184              BNE      |L1.5102|
;;;1138   	{
;;;1139   	lc640_write_int(EE_SPEED_CHRG_AVT_EN,speedChrgAvtEn);
0014e4  48f3              LDR      r0,|L1.6324|
0014e6  f9b01000          LDRSH    r1,[r0,#0]  ; speedChrgAvtEn
0014ea  f44f708e          MOV      r0,#0x11c
0014ee  f7ffbffe          B.W      lc640_write_int
;;;1140   	}
;;;1141   }
0014f2  e77c              B        |L1.5102|
;;;1142   
                          ENDP

                  snmp_spz_delta_write PROC
;;;1143   //-----------------------------------------------
;;;1144   void snmp_spz_delta_write (int mode)
0014f4  2801              CMP      r0,#1
;;;1145   {
;;;1146   if(mode==MIB_WRITE)
0014f6  d106              BNE      |L1.5382|
;;;1147   	{
;;;1148   	lc640_write_int(EE_SPEED_CHRG_D_U,speedChrgDU);
0014f8  48ef              LDR      r0,|L1.6328|
0014fa  f9b01000          LDRSH    r1,[r0,#0]  ; speedChrgDU
0014fe  f44f708f          MOV      r0,#0x11e
001502  f7ffbffe          B.W      lc640_write_int
                  |L1.5382|
;;;1149   	}
;;;1150   }
001506  e772              B        |L1.5102|
;;;1151   
                          ENDP

                  snmp_spz_block_en_src_write PROC
;;;1152   //-----------------------------------------------
;;;1153   void snmp_spz_block_en_src_write (int mode)
001508  2801              CMP      r0,#1
;;;1154   {
;;;1155   if(mode==MIB_WRITE)
00150a  d106              BNE      |L1.5402|
;;;1156   	{
;;;1157   	lc640_write_int(EE_SPEED_CHRG_BLOCK_SRC,speedChrgBlckSrc);
00150c  48eb              LDR      r0,|L1.6332|
00150e  f9b01000          LDRSH    r1,[r0,#0]  ; speedChrgBlckSrc
001512  f44f7090          MOV      r0,#0x120
001516  f7ffbffe          B.W      lc640_write_int
                  |L1.5402|
;;;1158   	}
;;;1159   }
00151a  e768              B        |L1.5102|
;;;1160   
                          ENDP

                  snmp_spz_block_log_write PROC
;;;1161   //-----------------------------------------------
;;;1162   void snmp_spz_block_log_write (int mode)
00151c  2801              CMP      r0,#1
;;;1163   {
;;;1164   if(mode==MIB_WRITE)
00151e  d106              BNE      |L1.5422|
;;;1165   	{
;;;1166   	lc640_write_int(EE_SPEED_CHRG_BLOCK_LOG,speedChrgBlckLog);
001520  48e7              LDR      r0,|L1.6336|
001522  f9b01000          LDRSH    r1,[r0,#0]  ; speedChrgBlckLog
001526  f44f7091          MOV      r0,#0x122
00152a  f7ffbffe          B.W      lc640_write_int
                  |L1.5422|
;;;1167   	}
;;;1168   }
00152e  e75e              B        |L1.5102|
;;;1169   
                          ENDP

                  snmp_spz_vent_block_write PROC
;;;1170   //-----------------------------------------------
;;;1171   void snmp_spz_vent_block_write (int mode)
001530  2801              CMP      r0,#1
;;;1172   {
;;;1173   if(mode==MIB_WRITE)
001532  d106              BNE      |L1.5442|
;;;1174   	{
;;;1175   	lc640_write_int(EE_SP_CH_VENT_BLOK,SP_CH_VENT_BLOK);
001534  48e3              LDR      r0,|L1.6340|
001536  f9b01000          LDRSH    r1,[r0,#0]  ; SP_CH_VENT_BLOK
00153a  f44f70e7          MOV      r0,#0x1ce
00153e  f7ffbffe          B.W      lc640_write_int
                  |L1.5442|
;;;1176   	}
;;;1177   }
001542  e754              B        |L1.5102|
;;;1178   
                          ENDP

                  snmp_u_max_write PROC
;;;1179   //-----------------------------------------------
;;;1180   void snmp_u_max_write (int mode)
001544  2801              CMP      r0,#1
;;;1181   {
;;;1182   if(mode==MIB_WRITE)
001546  d105              BNE      |L1.5460|
;;;1183   	{
;;;1184        lc640_write_int(EE_UMAX,snmp_u_max);
001548  48df              LDR      r0,|L1.6344|
00154a  f9b01052          LDRSH    r1,[r0,#0x52]  ; snmp_u_max
00154e  2078              MOVS     r0,#0x78
001550  f7ffbffe          B.W      lc640_write_int
                  |L1.5460|
;;;1185   	}
;;;1186   }
001554  e74b              B        |L1.5102|
;;;1187   
                          ENDP

                  snmp_u_out_kontr_max_write PROC
;;;1188   //-----------------------------------------------
;;;1189   void snmp_u_out_kontr_max_write (int mode)
001556  2801              CMP      r0,#1
;;;1190   {
;;;1191   if(mode==MIB_WRITE)
001558  d106              BNE      |L1.5480|
;;;1192   	{
;;;1193   	lc640_write_int(EE_U_OUT_KONTR_MAX,U_OUT_KONTR_MAX);
00155a  48dc              LDR      r0,|L1.6348|
00155c  f9b01000          LDRSH    r1,[r0,#0]  ; U_OUT_KONTR_MAX
001560  f44f7095          MOV      r0,#0x12a
001564  f7ffbffe          B.W      lc640_write_int
                  |L1.5480|
;;;1194   	}
;;;1195   }
001568  e741              B        |L1.5102|
;;;1196   
                          ENDP

                  snmp_u_out_kontr_min_write PROC
;;;1197   //-----------------------------------------------
;;;1198   void snmp_u_out_kontr_min_write (int mode)
00156a  2801              CMP      r0,#1
;;;1199   {
;;;1200   if(mode==MIB_WRITE)
00156c  d106              BNE      |L1.5500|
;;;1201   	{
;;;1202   	lc640_write_int(EE_U_OUT_KONTR_MIN,U_OUT_KONTR_MIN);
00156e  48d8              LDR      r0,|L1.6352|
001570  f9b01000          LDRSH    r1,[r0,#0]  ; U_OUT_KONTR_MIN
001574  f44f7096          MOV      r0,#0x12c
001578  f7ffbffe          B.W      lc640_write_int
                  |L1.5500|
;;;1203   	}
;;;1204   }
00157c  e737              B        |L1.5102|
;;;1205   
                          ENDP

                  snmp_u_out_kontr_delay_write PROC
;;;1206   //-----------------------------------------------
;;;1207   void snmp_u_out_kontr_delay_write (int mode)
00157e  2801              CMP      r0,#1
;;;1208   {
;;;1209   if(mode==MIB_WRITE)
001580  d106              BNE      |L1.5520|
;;;1210   	{
;;;1211   	lc640_write_int(EE_U_OUT_KONTR_DELAY,U_OUT_KONTR_DELAY);
001582  48d4              LDR      r0,|L1.6356|
001584  f9b01000          LDRSH    r1,[r0,#0]  ; U_OUT_KONTR_DELAY
001588  f44f7097          MOV      r0,#0x12e
00158c  f7ffbffe          B.W      lc640_write_int
                  |L1.5520|
;;;1212   	}
;;;1213   }
001590  e72d              B        |L1.5102|
;;;1214   
                          ENDP

                  snmp_u_min_write PROC
;;;1215   //-----------------------------------------------
;;;1216   void snmp_u_min_write (int mode)
001592  2801              CMP      r0,#1
;;;1217   {
;;;1218   if(mode==MIB_WRITE)
001594  d109              BNE      |L1.5546|
;;;1219   	{
;;;1220        lc640_write_int(EE_DU,UB20-snmp_u_min);
001596  48d0              LDR      r0,|L1.6360|
001598  49cb              LDR      r1,|L1.6344|
00159a  8800              LDRH     r0,[r0,#0]  ; UB20
00159c  f8b11054          LDRH     r1,[r1,#0x54]  ; snmp_u_min
0015a0  1a40              SUBS     r0,r0,r1
0015a2  b201              SXTH     r1,r0
0015a4  20c8              MOVS     r0,#0xc8
0015a6  f7ffbffe          B.W      lc640_write_int
                  |L1.5546|
;;;1221   	}
;;;1222   }
0015aa  e720              B        |L1.5102|
;;;1223   
                          ENDP

                  snmp_u_ips_set_write PROC
;;;1224   //-----------------------------------------------
;;;1225   void snmp_u_ips_set_write (int mode)
0015ac  b510              PUSH     {r4,lr}
;;;1226   {
;;;1227   if(mode==MIB_WRITE)
0015ae  2801              CMP      r0,#1
0015b0  d10c              BNE      |L1.5580|
;;;1228   	{
;;;1229   	lc640_write_int(EE_UB0,snmp_u_0_grad);
0015b2  4cc5              LDR      r4,|L1.6344|
0015b4  207a              MOVS     r0,#0x7a
0015b6  f9b41056          LDRSH    r1,[r4,#0x56]  ; snmp_u_0_grad
0015ba  f7fffffe          BL       lc640_write_int
;;;1230   	lc640_write_int(EE_UB20,snmp_u_0_grad);
0015be  f9b41056          LDRSH    r1,[r4,#0x56]  ; snmp_u_0_grad
0015c2  e8bd4010          POP      {r4,lr}
0015c6  207c              MOVS     r0,#0x7c
0015c8  f7ffbffe          B.W      lc640_write_int
                  |L1.5580|
;;;1231   	}
;;;1232   }
0015cc  bd10              POP      {r4,pc}
;;;1233   //-----------------------------------------------
                          ENDP

                  snmp_u_0_grad_write PROC
;;;1234   void snmp_u_0_grad_write (int mode)
0015ce  2801              CMP      r0,#1
;;;1235   {
;;;1236   if(mode==MIB_WRITE)
0015d0  d105              BNE      |L1.5598|
;;;1237   	{
;;;1238   	lc640_write_int(EE_UB0,snmp_u_0_grad);
0015d2  48bd              LDR      r0,|L1.6344|
0015d4  f9b01056          LDRSH    r1,[r0,#0x56]  ; snmp_u_0_grad
0015d8  207a              MOVS     r0,#0x7a
0015da  f7ffbffe          B.W      lc640_write_int
                  |L1.5598|
;;;1239   	}
;;;1240   }
0015de  e706              B        |L1.5102|
;;;1241   //-----------------------------------------------
                          ENDP

                  snmp_u_20_grad_write PROC
;;;1242   void snmp_u_20_grad_write (int mode)
0015e0  2801              CMP      r0,#1
;;;1243   {
;;;1244   if(mode==MIB_WRITE)
0015e2  d105              BNE      |L1.5616|
;;;1245   	{
;;;1246   	lc640_write_int(EE_UB20,snmp_u_20_grad);
0015e4  48b8              LDR      r0,|L1.6344|
0015e6  f9b01058          LDRSH    r1,[r0,#0x58]  ; snmp_u_20_grad
0015ea  207c              MOVS     r0,#0x7c
0015ec  f7ffbffe          B.W      lc640_write_int
                  |L1.5616|
;;;1247   	}
;;;1248   }
0015f0  e6fd              B        |L1.5102|
;;;1249   
                          ENDP

                  snmp_u_sign_write PROC
;;;1250   //-----------------------------------------------
;;;1251   void snmp_u_sign_write (int mode)
0015f2  2801              CMP      r0,#1
;;;1252   {
;;;1253   if(mode==MIB_WRITE)
0015f4  d105              BNE      |L1.5634|
;;;1254   	{
;;;1255       lc640_write_int(EE_USIGN,snmp_u_sign);
0015f6  48b4              LDR      r0,|L1.6344|
0015f8  f9b0105a          LDRSH    r1,[r0,#0x5a]  ; snmp_u_sign
0015fc  2082              MOVS     r0,#0x82
0015fe  f7ffbffe          B.W      lc640_write_int
                  |L1.5634|
;;;1256   	}
;;;1257   }
001602  e6f4              B        |L1.5102|
;;;1258   //-----------------------------------------------
                          ENDP

                  snmp_u_min_power_write PROC
;;;1259   void snmp_u_min_power_write (int mode)
001604  2801              CMP      r0,#1
;;;1260   {
;;;1261   if(mode==MIB_WRITE)
001606  d105              BNE      |L1.5652|
;;;1262   	{
;;;1263   	lc640_write_int(EE_UMN,snmp_u_min_power);
001608  48af              LDR      r0,|L1.6344|
00160a  f9b0105c          LDRSH    r1,[r0,#0x5c]  ; snmp_u_min_power
00160e  2084              MOVS     r0,#0x84
001610  f7ffbffe          B.W      lc640_write_int
                  |L1.5652|
;;;1264   	}
;;;1265   }
001614  e6eb              B        |L1.5102|
;;;1266   //o_10_s
                          ENDP

                  snmp_u_max_power_write PROC
;;;1267   //-----------------------------------------------
;;;1268   void snmp_u_max_power_write (int mode)
001616  2801              CMP      r0,#1
;;;1269   {
;;;1270   if(mode==MIB_WRITE)
001618  d106              BNE      |L1.5672|
;;;1271   	{
;;;1272   	lc640_write_int(EE_UMAXN,snmp_u_max_power);
00161a  48ab              LDR      r0,|L1.6344|
00161c  f9b0105e          LDRSH    r1,[r0,#0x5e]  ; snmp_u_max_power
001620  f2411076          MOV      r0,#0x1176
001624  f7ffbffe          B.W      lc640_write_int
                  |L1.5672|
;;;1273   	}
;;;1274   }
001628  e6e1              B        |L1.5102|
;;;1275   //o_10_e
                          ENDP

                  snmp_u_withouth_bat_write PROC
;;;1276   //-----------------------------------------------
;;;1277   void snmp_u_withouth_bat_write (int mode)
00162a  2801              CMP      r0,#1
;;;1278   {
;;;1279   if(mode==MIB_WRITE)
00162c  d105              BNE      |L1.5690|
;;;1280   	{
;;;1281   	lc640_write_int(EE_U0B,snmp_u_withouth_bat);
00162e  48a6              LDR      r0,|L1.6344|
001630  f9b01060          LDRSH    r1,[r0,#0x60]  ; snmp_u_withouth_bat
001634  2094              MOVS     r0,#0x94
001636  f7ffbffe          B.W      lc640_write_int
                  |L1.5690|
;;;1282   	}
;;;1283   }
00163a  e6d8              B        |L1.5102|
;;;1284   
                          ENDP

                  snmp_control_current_write PROC
;;;1285   //-----------------------------------------------
;;;1286   void snmp_control_current_write (int mode)
00163c  2801              CMP      r0,#1
;;;1287   {
;;;1288   if(mode==MIB_WRITE)
00163e  d105              BNE      |L1.5708|
;;;1289   	{
;;;1290   	lc640_write_int(EE_IKB,snmp_control_current);
001640  48a1              LDR      r0,|L1.6344|
001642  f9b01062          LDRSH    r1,[r0,#0x62]  ; snmp_control_current
001646  2088              MOVS     r0,#0x88
001648  f7ffbffe          B.W      lc640_write_int
                  |L1.5708|
;;;1291   	}
;;;1292   }
00164c  e6cf              B        |L1.5102|
;;;1293   
                          ENDP

                  snmp_max_charge_current_write PROC
;;;1294   //-----------------------------------------------
;;;1295   void snmp_max_charge_current_write (int mode)
00164e  2801              CMP      r0,#1
;;;1296   {
;;;1297   if(mode==MIB_WRITE)
001650  d105              BNE      |L1.5726|
;;;1298   	{
;;;1299   	lc640_write_int(EE_IZMAX,snmp_max_charge_current);
001652  489d              LDR      r0,|L1.6344|
001654  f9b01064          LDRSH    r1,[r0,#0x64]  ; snmp_max_charge_current
001658  2092              MOVS     r0,#0x92
00165a  f7ffbffe          B.W      lc640_write_int
                  |L1.5726|
;;;1300   	}
;;;1301   }
00165e  e6c6              B        |L1.5102|
;;;1302   
                          ENDP

                  snmp_max_current_write PROC
;;;1303   //-----------------------------------------------
;;;1304   void snmp_max_current_write (int mode)
001660  2801              CMP      r0,#1
;;;1305   {
;;;1306   if(mode==MIB_WRITE)
001662  d105              BNE      |L1.5744|
;;;1307   	{
;;;1308        lc640_write_int(EE_IMAX,snmp_max_current);
001664  4898              LDR      r0,|L1.6344|
001666  f9b01066          LDRSH    r1,[r0,#0x66]  ; snmp_max_current
00166a  208c              MOVS     r0,#0x8c
00166c  f7ffbffe          B.W      lc640_write_int
                  |L1.5744|
;;;1309   	}
;;;1310   }
001670  e6bd              B        |L1.5102|
;;;1311   
                          ENDP

                  snmp_min_current_write PROC
;;;1312   //-----------------------------------------------
;;;1313   void snmp_min_current_write (int mode)
001672  2801              CMP      r0,#1
;;;1314   {
;;;1315   if(mode==MIB_WRITE)
001674  d105              BNE      |L1.5762|
;;;1316   	{
;;;1317        lc640_write_int(EE_IMIN,snmp_min_current);
001676  4894              LDR      r0,|L1.6344|
001678  f9b01068          LDRSH    r1,[r0,#0x68]  ; snmp_min_current
00167c  208e              MOVS     r0,#0x8e
00167e  f7ffbffe          B.W      lc640_write_int
                  |L1.5762|
;;;1318   	}
;;;1319   }
001682  e6b4              B        |L1.5102|
;;;1320   
                          ENDP

                  snmp_powerup_psu_timeout_write PROC
;;;1339   //-----------------------------------------------
;;;1340   void snmp_powerup_psu_timeout_write (int mode)
001684  2801              CMP      r0,#1
;;;1341   {
;;;1342   if(mode==MIB_WRITE)
001686  d105              BNE      |L1.5780|
;;;1343   	{
;;;1344        lc640_write_int(EE_TZAS,snmp_powerup_psu_timeout);
001688  488f              LDR      r0,|L1.6344|
00168a  f9b0106c          LDRSH    r1,[r0,#0x6c]  ; snmp_powerup_psu_timeout
00168e  2096              MOVS     r0,#0x96
001690  f7ffbffe          B.W      lc640_write_int
                  |L1.5780|
;;;1345   	}
;;;1346   }
001694  e6ab              B        |L1.5102|
;;;1347   
                          ENDP

                  snmp_tsign_bat_write PROC
;;;1357   //-----------------------------------------------
;;;1358   void snmp_tsign_bat_write(int mode)
001696  2801              CMP      r0,#1
;;;1359   {
;;;1360   if(mode==MIB_WRITE)
001698  d105              BNE      |L1.5798|
;;;1361   	{
;;;1362    	lc640_write_int(EE_TBATSIGN,snmp_tsign_bat);
00169a  488b              LDR      r0,|L1.6344|
00169c  f9b01070          LDRSH    r1,[r0,#0x70]  ; snmp_tsign_bat
0016a0  20ce              MOVS     r0,#0xce
0016a2  f7ffbffe          B.W      lc640_write_int
                  |L1.5798|
;;;1363   	}
;;;1364   }
0016a6  e6a2              B        |L1.5102|
;;;1365   //-----------------------------------------------
                          ENDP

                  snmp_tmax_bat_write PROC
;;;1366   void snmp_tmax_bat_write(int mode)
0016a8  2801              CMP      r0,#1
;;;1367   {
;;;1368   if(mode==MIB_WRITE)
0016aa  d105              BNE      |L1.5816|
;;;1369   	{
;;;1370    	lc640_write_int(EE_TBATMAX,snmp_tmax_bat);
0016ac  4886              LDR      r0,|L1.6344|
0016ae  f9b01072          LDRSH    r1,[r0,#0x72]  ; snmp_tmax_bat
0016b2  20cc              MOVS     r0,#0xcc
0016b4  f7ffbffe          B.W      lc640_write_int
                  |L1.5816|
;;;1371   	}
;;;1372   }
0016b8  e699              B        |L1.5102|
;;;1373   //-----------------------------------------------
                          ENDP

                  snmp_tsign_bps_write PROC
;;;1374   void snmp_tsign_bps_write(int mode)
0016ba  2801              CMP      r0,#1
;;;1375   {
;;;1376   if(mode==MIB_WRITE)
0016bc  d105              BNE      |L1.5834|
;;;1377   	{
;;;1378   	lc640_write_int(EE_TSIGN,snmp_tsign_bps);
0016be  4882              LDR      r0,|L1.6344|
0016c0  f9b01074          LDRSH    r1,[r0,#0x74]  ; snmp_tsign_bps
0016c4  20c6              MOVS     r0,#0xc6
0016c6  f7ffbffe          B.W      lc640_write_int
                  |L1.5834|
;;;1379   	}
;;;1380   }
0016ca  e690              B        |L1.5102|
;;;1381   //-----------------------------------------------
                          ENDP

                  snmp_tmax_bps_write PROC
;;;1382   void snmp_tmax_bps_write(int mode)
0016cc  2801              CMP      r0,#1
;;;1383   {
;;;1384   if(mode==MIB_WRITE)
0016ce  d105              BNE      |L1.5852|
;;;1385   	{
;;;1386   	lc640_write_int(EE_TMAX,snmp_tmax_bps);
0016d0  487d              LDR      r0,|L1.6344|
0016d2  f9b01076          LDRSH    r1,[r0,#0x76]  ; snmp_tmax_bps
0016d6  207e              MOVS     r0,#0x7e
0016d8  f7ffbffe          B.W      lc640_write_int
                  |L1.5852|
;;;1387   	}
;;;1388   }
0016dc  e687              B        |L1.5102|
;;;1389   
                          ENDP

                  snmp_bat_part_alarm_write PROC
;;;1400   //-----------------------------------------------
;;;1401   void snmp_bat_part_alarm_write(int mode)
0016de  2801              CMP      r0,#1
;;;1402   {
;;;1403   if(mode==MIB_WRITE)
0016e0  d106              BNE      |L1.5872|
;;;1404   	{
;;;1405   	lc640_write_int(EE_UBM_AV,snmp_bat_part_alarm);
0016e2  4879              LDR      r0,|L1.6344|
0016e4  f9b01078          LDRSH    r1,[r0,#0x78]  ; snmp_bat_part_alarm
0016e8  f44f7019          MOV      r0,#0x264
0016ec  f7ffbffe          B.W      lc640_write_int
                  |L1.5872|
;;;1406   	}
;;;1407   }
0016f0  e67d              B        |L1.5102|
;;;1408   //-----------------------------------------------
                          ENDP

                  snmp_power_cnt_adress_write PROC
;;;1409   void snmp_power_cnt_adress_write(int mode)
0016f2  2801              CMP      r0,#1
;;;1410   {
;;;1411   if(mode==MIB_WRITE)
0016f4  d106              BNE      |L1.5892|
;;;1412   	{
;;;1413   	lc640_write_int(EE_POWER_CNT_ADRESS,snmp_power_cnt_adress);
0016f6  4874              LDR      r0,|L1.6344|
0016f8  f9b0107a          LDRSH    r1,[r0,#0x7a]  ; snmp_power_cnt_adress
0016fc  f2402062          MOV      r0,#0x262
001700  f7ffbffe          B.W      lc640_write_int
                  |L1.5892|
;;;1414   	}
;;;1415   }
001704  e673              B        |L1.5102|
;;;1416   
                          ENDP

                  snmp_command_execute PROC
;;;1417   //-----------------------------------------------
;;;1418   void snmp_command_execute (int mode)
001706  e92d41f0          PUSH     {r4-r8,lr}
;;;1419   {
;;;1420   if(mode==MIB_WRITE)
00170a  2801              CMP      r0,#1
00170c  d11a              BNE      |L1.5956|
;;;1421   	{
;;;1422   	
;;;1423   	//snmp_command=0x5555;
;;;1424   
;;;1425   	switch (snmp_command)
00170e  4c6e              LDR      r4,|L1.6344|
;;;1426   		{
;;;1427   		case SNMP_BPS_DISABLE:
;;;1428   			{
;;;1429   			snmp_command=COMMAND_OK;
;;;1430   
;;;1431   		/*	switch (snmp_command_parametr)
;;;1432   				{
;;;1433   			
;;;1434   				case 1: 
;;;1435   				{
;;;1436   				St_[0]|=0x20;
;;;1437   				St_[1]&=0xdf;
;;;1438   				St&=0xfb;
;;;1439   				cnt_src[1]=10;
;;;1440   				snmp_plazma++;
;;;1441   				snmp_plazma++;
;;;1442   				break;
;;;1443   				}
;;;1444   			
;;;1445   				case 2:
;;;1446   				{
;;;1447   				St_[1]|=0x20;
;;;1448   				St_[0]&=0xdf;
;;;1449   				St&=0xfb;
;;;1450   				cnt_src[0]=10;	
;;;1451   				snmp_plazma++;
;;;1452   				break;
;;;1453   				}*/	
;;;1454   			
;;;1455   				//break;
;;;1456   			//	}
;;;1457   			if(snmp_command_parametr==1) 
;;;1458   				{
;;;1459   			//	St_[0]|=0x20;
;;;1460   			//	St_[1]&=0xdf;
;;;1461   			//	St&=0xfb;
;;;1462   		//		cnt_src[1]=10;
;;;1463   		//		snmp_plazma++;
;;;1464   		//		snmp_plazma++;
;;;1465   				}
;;;1466   			
;;;1467   			else if(snmp_command_parametr==2)
;;;1468   				{
;;;1469   			//	St_[1]|=0x20;
;;;1470   			//	St_[0]&=0xdf;
;;;1471   			//	St&=0xfb;
;;;1472   		//		cnt_src[0]=10;	
;;;1473   		//		snmp_plazma++;
;;;1474   				}	
;;;1475   			
;;;1476   			break;
;;;1477   			}
;;;1478   
;;;1479   		case SNMP_BPS_UNDISABLE:
;;;1480   			{
;;;1481   			snmp_command=COMMAND_OK;
;;;1482   		//	St_[0]&=0xdf;
;;;1483   		//	St_[1]&=0xdf;
;;;1484   			break;
;;;1485   			}
;;;1486   
;;;1487   		case SNMP_SPEC_VZ:
;;;1488   			{
;;;1489   			//if((snmp_command_parametr>=1)&&(snmp_command_parametr<=24))
;;;1490   				{
;;;1491   				if(spc_stat==spcOFF)
001710  4f73              LDR      r7,|L1.6368|
001712  4620              MOV      r0,r4                 ;1425
001714  f9b42048          LDRSH    r2,[r4,#0x48]         ;1425  ; snmp_command
001718  f2455555          MOV      r5,#0x5555            ;1429
00171c  1ed2              SUBS     r2,r2,#3              ;1425
;;;1492   					{
;;;1493   					vz_start(VZ_HR);
;;;1494   				 	snmp_command=COMMAND_OK;
;;;1495   					}
;;;1496   				else
;;;1497    					{
;;;1498   					snmp_command=COMAND_FAIL;	
00171e  43ee              MVNS     r6,r5
;;;1499    					}
;;;1500   				}
;;;1501   		/*	else 
;;;1502   				{
;;;1503   				snmp_command=WRONG_PARAMETER;
;;;1504   				}*/
;;;1505   			break;
;;;1506   			}
;;;1507   
;;;1508   		case SNMP_SPEC_SPZ:
;;;1509   			{
;;;1510   			//if((snmp_command_parametr>=1)&&(snmp_command_parametr<=24))
;;;1511   				{
;;;1512   				if(sp_ch_stat==scsOFF)
001720  f8df81b8          LDR      r8,|L1.6364|
001724  f9b0004a          LDRSH    r0,[r0,#0x4a]         ;1457
001728  7839              LDRB     r1,[r7,#0]            ;1491
00172a  2a0b              CMP      r2,#0xb               ;1425
00172c  d240              BCS      |L1.6064|
00172e  e8dff002          TBB      [pc,r2]               ;1425
001732  0e2a              DCB      0x0e,0x2a
001734  063f300b          DCB      0x06,0x3f,0x30,0x0b
001738  3f3f3f3f          DCB      0x3f,0x3f,0x3f,0x3f
00173c  1a00              DCB      0x1a,0x00
00173e  f8a45048          STRH     r5,[r4,#0x48]         ;1429
001742  2801              CMP      r0,#1                 ;1457
                  |L1.5956|
;;;1513   					{
;;;1514   					speedChargeStartStop();
;;;1515   					spch_plazma[0]++;
;;;1516   				 	snmp_command=COMMAND_OK;
;;;1517   					}
;;;1518   				else
;;;1519    					{
;;;1520   					snmp_command=COMAND_FAIL;	
;;;1521    					}
;;;1522   				} 
;;;1523   		/*	else 
;;;1524   				{
;;;1525   				snmp_command=WRONG_PARAMETER;
;;;1526   				}*/
;;;1527   			break;
;;;1528   			}
;;;1529   
;;;1530   		case SNMP_SPEC_KE:
;;;1531   			{
;;;1532   	  	//	if(!(St&0x02)&&(NUMBAT))
;;;1533   				{
;;;1534   				//spc_stat=spc_KE;
;;;1535   			//zar_cnt_ee_ke=0;
;;;1536   			//	zar_cnt=0L;
;;;1537   				ke_start(snmp_command_parametr);
;;;1538   				snmp_command=COMMAND_OK;
;;;1539   				}
;;;1540   		//	else
;;;1541   				{
;;;1542   				snmp_command=COMAND_FAIL;	
;;;1543   				}
;;;1544   			break;
;;;1545   			}
;;;1546   
;;;1547   		case SNMP_SPEC_DISABLE:
;;;1548   			{
;;;1549   			if(spc_stat==spcVZ)vz_stop();
;;;1550   			spc_stat=spcOFF;
;;;1551   
;;;1552   			if(sp_ch_stat!=scsOFF)speedChargeStartStop();
;;;1553   			
;;;1554   			snmp_command=COMMAND_OK;
;;;1555   			break;
;;;1556   			}
;;;1557   
;;;1558   
;;;1559   		default:
;;;1560   			{
;;;1561   			snmp_command=COMMAND_INVALID;
;;;1562   			break;
;;;1563   			}
;;;1564   		}
;;;1565   /*		else if((UIB2[1]==0x52)&&(UIB2[4]==5)&&(UIB2[5]==5)&&(UIB2[6])&&(UIB2[6]<=NUMIST)&&(UIB2[6]==UIB2[7])) 	//Выключение источника 
;;;1566   		{
;;;1567   	
;;;1568   		if((UIB2[6]==1)&&(UIB2[7]==1)) 
;;;1569   			{
;;;1570   			St_[0]|=0x20;
;;;1571   			St_[1]&=0xdf;
;;;1572   			St&=0xfb;
;;;1573   			cnt_src[1]=10;
;;;1574   			}
;;;1575   			
;;;1576   		else if((UIB2[6]==2)&&(UIB2[7]==2))
;;;1577   			{
;;;1578   			St_[1]|=0x20;
;;;1579   			St_[0]&=0xdf;
;;;1580   			St&=0xfb;
;;;1581   			cnt_src[0]=10;
;;;1582   			}	
;;;1583   		
;;;1584        	memo_out2[0]=0x33;
;;;1585        	memo_out2[1]=0x62;
;;;1586        	memo_out2[2]=4;
;;;1587        	memo_out2[3]=0x03;
;;;1588        	
;;;1589        	memo_out2[4]=5;
;;;1590        	memo_out2[5]=5;
;;;1591        	memo_out2[6]=UIB2[6];
;;;1592        	memo_out2[7]=UIB2[6];
;;;1593            	memo_out2[8]=crc_87(memo_out2,8);
;;;1594   		memo_out2[9]=crc_95(memo_out2,8);
;;;1595        	uart_out_adr2(memo_out2,10); 		
;;;1596   		} */
;;;1597   
;;;1598   
;;;1599   
;;;1600   	}
;;;1601   }
001744  e8bd81f0          POP      {r4-r8,pc}
001748  f8a45048          STRH     r5,[r4,#0x48]         ;1481
00174c  e7fa              B        |L1.5956|
00174e  b111              CBZ      r1,|L1.5974|
001750  f8a46048          STRH     r6,[r4,#0x48]         ;1498
001754  e7f6              B        |L1.5956|
                  |L1.5974|
001756  4863              LDR      r0,|L1.6372|
001758  8800              LDRH     r0,[r0,#0]            ;1493  ; VZ_HR
00175a  b2c0              UXTB     r0,r0                 ;1493
00175c  f7fffffe          BL       vz_start
001760  f8a45048          STRH     r5,[r4,#0x48]         ;1494
001764  e7ee              B        |L1.5956|
001766  f8980000          LDRB     r0,[r8,#0]            ;1512  ; sp_ch_stat
00176a  b110              CBZ      r0,|L1.6002|
00176c  f8a46048          STRH     r6,[r4,#0x48]         ;1520
001770  e7e8              B        |L1.5956|
                  |L1.6002|
001772  f7fffffe          BL       speedChargeStartStop
001776  485c              LDR      r0,|L1.6376|
001778  7801              LDRB     r1,[r0,#0]            ;1515  ; spch_plazma
00177a  f1010101          ADD      r1,r1,#1              ;1515
00177e  7001              STRB     r1,[r0,#0]            ;1515
001780  f8a45048          STRH     r5,[r4,#0x48]         ;1516
001784  e7de              B        |L1.5956|
001786  b2c0              UXTB     r0,r0                 ;1537
001788  f7fffffe          BL       ke_start
00178c  f8a46048          STRH     r6,[r4,#0x48]         ;1542
001790  e7d8              B        |L1.5956|
001792  2902              CMP      r1,#2                 ;1549
001794  d101              BNE      |L1.6042|
001796  f7fffffe          BL       vz_stop
                  |L1.6042|
00179a  f04f0000          MOV      r0,#0                 ;1550
00179e  7038              STRB     r0,[r7,#0]            ;1550
0017a0  f8980000          LDRB     r0,[r8,#0]            ;1552  ; sp_ch_stat
0017a4  b108              CBZ      r0,|L1.6058|
0017a6  f7fffffe          BL       speedChargeStartStop
                  |L1.6058|
0017aa  f8a45048          STRH     r5,[r4,#0x48]         ;1554
0017ae  e7c9              B        |L1.5956|
                  |L1.6064|
0017b0  f64e60ee          MOV      r0,#0xeeee            ;1561
0017b4  f8a40048          STRH     r0,[r4,#0x48]         ;1561
0017b8  e7c4              B        |L1.5956|
;;;1602   
                          ENDP

                  snmp_trap_send PROC
;;;2159   //-----------------------------------------------
;;;2160   void snmp_trap_send(char* str, signed short in0, signed short in1, signed short in2)
0017ba  e92d41f0          PUSH     {r4-r8,lr}
;;;2161   {
;;;2162   for(snmp_trap_send_i=0;snmp_trap_send_i<100;snmp_trap_send_i++)
0017be  4f42              LDR      r7,|L1.6344|
0017c0  f04f0500          MOV      r5,#0
0017c4  73fd              STRB     r5,[r7,#0xf]
;;;2163   	{
;;;2164   	snmp_spc_trap_message[snmp_trap_send_i]=0;
0017c6  4e49              LDR      r6,|L1.6380|
                  |L1.6088|
0017c8  7bfc              LDRB     r4,[r7,#0xf]  ; snmp_trap_send_i
0017ca  5535              STRB     r5,[r6,r4]
0017cc  f1040401          ADD      r4,r4,#1              ;2162
0017d0  b2e4              UXTB     r4,r4                 ;2162
0017d2  73fc              STRB     r4,[r7,#0xf]          ;2162
0017d4  2c64              CMP      r4,#0x64              ;2162
0017d6  d3f7              BCC      |L1.6088|
;;;2165   	}
;;;2166   
;;;2167   
;;;2168   obj[0] = 0;
0017d8  f8dfc114          LDR      r12,|L1.6384|
0017dc  f8ac5000          STRH     r5,[r12,#0]
;;;2169   snmp_trap_send_ii=1;
0017e0  f04f0801          MOV      r8,#1
0017e4  f8878010          STRB     r8,[r7,#0x10]
;;;2170   if(str!=0)
0017e8  b1a8              CBZ      r0,|L1.6166|
;;;2171   	{
;;;2172   	obj[0]++;
0017ea  f8ac8000          STRH     r8,[r12,#0]
;;;2173   	for(snmp_trap_send_i=0;snmp_trap_send_i<100&&(str[snmp_trap_send_i]);snmp_trap_send_i++)
0017ee  73fd              STRB     r5,[r7,#0xf]
0017f0  e003              B        |L1.6138|
                  |L1.6130|
;;;2174   		{
;;;2175   		snmp_spc_trap_message[snmp_trap_send_i]=str[snmp_trap_send_i];
0017f2  5535              STRB     r5,[r6,r4]
0017f4  f1040401          ADD      r4,r4,#1              ;2173
0017f8  73fc              STRB     r4,[r7,#0xf]          ;2173
                  |L1.6138|
0017fa  7bfc              LDRB     r4,[r7,#0xf]          ;2173  ; snmp_trap_send_i
0017fc  2c64              CMP      r4,#0x64              ;2173
0017fe  d202              BCS      |L1.6150|
001800  5d05              LDRB     r5,[r0,r4]            ;2173
001802  2d00              CMP      r5,#0                 ;2173
001804  d1f5              BNE      |L1.6130|
                  |L1.6150|
;;;2176   		}
;;;2177   	obj[snmp_trap_send_ii] = 7;
001806  f04f0007          MOV      r0,#7
00180a  f82c0018          STRH     r0,[r12,r8,LSL #1]
;;;2178   	snmp_trap_send_ii++;
00180e  f1080801          ADD      r8,r8,#1
001812  f8878010          STRB     r8,[r7,#0x10]
                  |L1.6166|
;;;2179   	}
;;;2180   if(in0!=0xffff)
001816  f64f74ff          MOV      r4,#0xffff
00181a  42a1              CMP      r1,r4
00181c  d00e              BEQ      |L1.6204|
;;;2181   	{
;;;2182   	obj[0]++;
00181e  f8bc0000          LDRH     r0,[r12,#0]  ; obj
001822  f1000001          ADD      r0,r0,#1
001826  f8ac0000          STRH     r0,[r12,#0]
;;;2183   	snmp_spc_trap_value_0=in0;
00182a  8679              STRH     r1,[r7,#0x32]
;;;2184   	obj[snmp_trap_send_ii] = 8;
00182c  7c38              LDRB     r0,[r7,#0x10]  ; snmp_trap_send_ii
00182e  f04f0108          MOV      r1,#8
001832  f82c1010          STRH     r1,[r12,r0,LSL #1]
;;;2185   	snmp_trap_send_ii++;
001836  f1000001          ADD      r0,r0,#1
00183a  7438              STRB     r0,[r7,#0x10]
                  |L1.6204|
;;;2186   	}
;;;2187   if(in1!=0xffff)
00183c  42a2              CMP      r2,r4
00183e  d00e              BEQ      |L1.6238|
;;;2188   	{
;;;2189   	obj[0]++;
001840  f8bc0000          LDRH     r0,[r12,#0]  ; obj
001844  f1000001          ADD      r0,r0,#1
001848  f8ac0000          STRH     r0,[r12,#0]
;;;2190   	snmp_spc_trap_value_1=in1;
00184c  86ba              STRH     r2,[r7,#0x34]
;;;2191   	obj[snmp_trap_send_ii] = 9;
00184e  7c38              LDRB     r0,[r7,#0x10]  ; snmp_trap_send_ii
001850  f04f0109          MOV      r1,#9
001854  f82c1010          STRH     r1,[r12,r0,LSL #1]
;;;2192   	snmp_trap_send_ii++;
001858  f1000001          ADD      r0,r0,#1
00185c  7438              STRB     r0,[r7,#0x10]
                  |L1.6238|
;;;2193   	}
;;;2194   if(in2!=0xffff)
00185e  42a3              CMP      r3,r4
001860  d00e              BEQ      |L1.6272|
;;;2195   	{
;;;2196   	obj[0]++;
001862  f8bc0000          LDRH     r0,[r12,#0]  ; obj
001866  f1000001          ADD      r0,r0,#1
00186a  f8ac0000          STRH     r0,[r12,#0]
;;;2197   	snmp_spc_trap_value_2=in2;
00186e  86fb              STRH     r3,[r7,#0x36]
;;;2198   	obj[snmp_trap_send_ii] = 10;
001870  7c38              LDRB     r0,[r7,#0x10]  ; snmp_trap_send_ii
001872  f04f010a          MOV      r1,#0xa
001876  f82c1010          STRH     r1,[r12,r0,LSL #1]
;;;2199   	snmp_trap_send_ii++;
00187a  f1000001          ADD      r0,r0,#1
00187e  7438              STRB     r0,[r7,#0x10]
                  |L1.6272|
;;;2200   	}
;;;2201   
;;;2202   
;;;2203   if((ETH_TRAP1_IP_1!=255)&&(ETH_TRAP1_IP_2!=255)&&(ETH_TRAP1_IP_3!=255)&&(ETH_TRAP1_IP_4!=255))
001880  481c              LDR      r0,|L1.6388|
;;;2204   	{
;;;2205   	temp_ip[0]= ETH_TRAP1_IP_1;
001882  4c11              LDR      r4,|L1.6344|
001884  f9b00000          LDRSH    r0,[r0,#0]            ;2203  ; ETH_TRAP1_IP_1
001888  34ec              ADDS     r4,r4,#0xec
00188a  28ff              CMP      r0,#0xff              ;2203
00188c  d048              BEQ      |L1.6432|
00188e  491a              LDR      r1,|L1.6392|
001890  f9b11000          LDRSH    r1,[r1,#0]            ;2203  ; ETH_TRAP1_IP_2
001894  29ff              CMP      r1,#0xff              ;2203
001896  d043              BEQ      |L1.6432|
001898  4a18              LDR      r2,|L1.6396|
00189a  f9b22000          LDRSH    r2,[r2,#0]            ;2203  ; ETH_TRAP1_IP_3
00189e  2aff              CMP      r2,#0xff              ;2203
0018a0  d03e              BEQ      |L1.6432|
0018a2  4b17              LDR      r3,|L1.6400|
0018a4  e02e              B        |L1.6404|
0018a6  0000              DCW      0x0000
                  |L1.6312|
                          DCD      speedChrgCurr
                  |L1.6316|
                          DCD      speedChrgVolt
                  |L1.6320|
                          DCD      speedChrgTimeInHour
                  |L1.6324|
                          DCD      speedChrgAvtEn
                  |L1.6328|
                          DCD      speedChrgDU
                  |L1.6332|
                          DCD      speedChrgBlckSrc
                  |L1.6336|
                          DCD      speedChrgBlckLog
                  |L1.6340|
                          DCD      SP_CH_VENT_BLOK
                  |L1.6344|
                          DCD      ||.data||
                  |L1.6348|
                          DCD      U_OUT_KONTR_MAX
                  |L1.6352|
                          DCD      U_OUT_KONTR_MIN
                  |L1.6356|
                          DCD      U_OUT_KONTR_DELAY
                  |L1.6360|
                          DCD      UB20
                  |L1.6364|
                          DCD      sp_ch_stat
                  |L1.6368|
                          DCD      spc_stat
                  |L1.6372|
                          DCD      VZ_HR
                  |L1.6376|
                          DCD      spch_plazma
                  |L1.6380|
                          DCD      ||.bss||+0xc8
                  |L1.6384|
                          DCD      ||.bss||+0x2a6
                  |L1.6388|
                          DCD      ETH_TRAP1_IP_1
                  |L1.6392|
                          DCD      ETH_TRAP1_IP_2
                  |L1.6396|
                          DCD      ETH_TRAP1_IP_3
                  |L1.6400|
                          DCD      ETH_TRAP1_IP_4
                  |L1.6404|
001904  f9b33000          LDRSH    r3,[r3,#0]            ;2203  ; ETH_TRAP1_IP_4
001908  2bff              CMP      r3,#0xff              ;2203
00190a  d009              BEQ      |L1.6432|
00190c  7020              STRB     r0,[r4,#0]
;;;2206   	temp_ip[1]= ETH_TRAP1_IP_2;
00190e  7061              STRB     r1,[r4,#1]
;;;2207   	temp_ip[2]= ETH_TRAP1_IP_3;
001910  70a2              STRB     r2,[r4,#2]
;;;2208   	temp_ip[3]= ETH_TRAP1_IP_4;
001912  70e3              STRB     r3,[r4,#3]
;;;2209   	snmp_trap (temp_ip, 6, 3, obj);
001914  4b97              LDR      r3,|L1.7028|
001916  2203              MOVS     r2,#3
001918  2106              MOVS     r1,#6
00191a  4620              MOV      r0,r4
00191c  f7fffffe          BL       snmp_trap
                  |L1.6432|
;;;2210   	}
;;;2211   if((ETH_TRAP2_IP_1!=255)&&(ETH_TRAP2_IP_2!=255)&&(ETH_TRAP2_IP_3!=255)&&(ETH_TRAP2_IP_4!=255))
001920  4895              LDR      r0,|L1.7032|
001922  f9b01000          LDRSH    r1,[r0,#0]  ; ETH_TRAP2_IP_1
001926  29ff              CMP      r1,#0xff
001928  d018              BEQ      |L1.6492|
00192a  4894              LDR      r0,|L1.7036|
00192c  f9b02000          LDRSH    r2,[r0,#0]  ; ETH_TRAP2_IP_2
001930  2aff              CMP      r2,#0xff
001932  d013              BEQ      |L1.6492|
001934  4892              LDR      r0,|L1.7040|
001936  f9b00000          LDRSH    r0,[r0,#0]  ; ETH_TRAP2_IP_3
00193a  28ff              CMP      r0,#0xff
00193c  d00e              BEQ      |L1.6492|
00193e  4b91              LDR      r3,|L1.7044|
001940  f9b33000          LDRSH    r3,[r3,#0]  ; ETH_TRAP2_IP_4
001944  2bff              CMP      r3,#0xff
001946  d009              BEQ      |L1.6492|
;;;2212   	{
;;;2213   	temp_ip[0]= ETH_TRAP2_IP_1;
001948  7021              STRB     r1,[r4,#0]
;;;2214   	temp_ip[1]= ETH_TRAP2_IP_2;
00194a  7062              STRB     r2,[r4,#1]
;;;2215   	temp_ip[2]= ETH_TRAP2_IP_3;
00194c  70a0              STRB     r0,[r4,#2]
;;;2216   	temp_ip[3]= ETH_TRAP2_IP_4;
00194e  70e3              STRB     r3,[r4,#3]
;;;2217   	snmp_trap (temp_ip, 6, 3, obj);
001950  4b88              LDR      r3,|L1.7028|
001952  2203              MOVS     r2,#3
001954  2106              MOVS     r1,#6
001956  488c              LDR      r0,|L1.7048|
001958  f7fffffe          BL       snmp_trap
                  |L1.6492|
;;;2218   	}
;;;2219   
;;;2220   if((ETH_TRAP3_IP_1!=255)&&(ETH_TRAP3_IP_2!=255)&&(ETH_TRAP3_IP_3!=255)&&(ETH_TRAP3_IP_4!=255))
00195c  488b              LDR      r0,|L1.7052|
00195e  f9b01000          LDRSH    r1,[r0,#0]  ; ETH_TRAP3_IP_1
001962  29ff              CMP      r1,#0xff
001964  d018              BEQ      |L1.6552|
001966  488a              LDR      r0,|L1.7056|
001968  f9b02000          LDRSH    r2,[r0,#0]  ; ETH_TRAP3_IP_2
00196c  2aff              CMP      r2,#0xff
00196e  d013              BEQ      |L1.6552|
001970  4888              LDR      r0,|L1.7060|
001972  f9b03000          LDRSH    r3,[r0,#0]  ; ETH_TRAP3_IP_3
001976  2bff              CMP      r3,#0xff
001978  d00e              BEQ      |L1.6552|
00197a  4887              LDR      r0,|L1.7064|
00197c  f9b00000          LDRSH    r0,[r0,#0]  ; ETH_TRAP3_IP_4
001980  28ff              CMP      r0,#0xff
001982  d009              BEQ      |L1.6552|
;;;2221   	{
;;;2222   	temp_ip[0]= ETH_TRAP3_IP_1;
001984  7021              STRB     r1,[r4,#0]
;;;2223   	temp_ip[1]= ETH_TRAP3_IP_2;
001986  7062              STRB     r2,[r4,#1]
;;;2224   	temp_ip[2]= ETH_TRAP3_IP_3;
001988  70a3              STRB     r3,[r4,#2]
;;;2225   	temp_ip[3]= ETH_TRAP3_IP_4;
00198a  70e0              STRB     r0,[r4,#3]
;;;2226   	snmp_trap (temp_ip, 6, 3, obj);
00198c  4b79              LDR      r3,|L1.7028|
00198e  2203              MOVS     r2,#3
001990  2106              MOVS     r1,#6
001992  487d              LDR      r0,|L1.7048|
001994  f7fffffe          BL       snmp_trap
                  |L1.6552|
;;;2227   	}
;;;2228   
;;;2229   if((ETH_TRAP4_IP_1!=255)&&(ETH_TRAP4_IP_2!=255)&&(ETH_TRAP4_IP_3!=255)&&(ETH_TRAP4_IP_4!=255))
001998  4880              LDR      r0,|L1.7068|
00199a  f9b03000          LDRSH    r3,[r0,#0]  ; ETH_TRAP4_IP_1
00199e  2bff              CMP      r3,#0xff
0019a0  d018              BEQ      |L1.6612|
0019a2  487f              LDR      r0,|L1.7072|
0019a4  f9b00000          LDRSH    r0,[r0,#0]  ; ETH_TRAP4_IP_2
0019a8  28ff              CMP      r0,#0xff
0019aa  d013              BEQ      |L1.6612|
0019ac  497d              LDR      r1,|L1.7076|
0019ae  f9b11000          LDRSH    r1,[r1,#0]  ; ETH_TRAP4_IP_3
0019b2  29ff              CMP      r1,#0xff
0019b4  d00e              BEQ      |L1.6612|
0019b6  4a7c              LDR      r2,|L1.7080|
0019b8  f9b22000          LDRSH    r2,[r2,#0]  ; ETH_TRAP4_IP_4
0019bc  2aff              CMP      r2,#0xff
0019be  d009              BEQ      |L1.6612|
;;;2230   	{
;;;2231   	temp_ip[0]= ETH_TRAP4_IP_1;
0019c0  7023              STRB     r3,[r4,#0]
;;;2232   	temp_ip[1]= ETH_TRAP4_IP_2;
0019c2  7060              STRB     r0,[r4,#1]
;;;2233   	temp_ip[2]= ETH_TRAP4_IP_3;
0019c4  70a1              STRB     r1,[r4,#2]
;;;2234   	temp_ip[3]= ETH_TRAP4_IP_4;
0019c6  70e2              STRB     r2,[r4,#3]
;;;2235   	snmp_trap (temp_ip, 6, 3, obj);
0019c8  4b6a              LDR      r3,|L1.7028|
0019ca  2203              MOVS     r2,#3
0019cc  2106              MOVS     r1,#6
0019ce  486e              LDR      r0,|L1.7048|
0019d0  f7fffffe          BL       snmp_trap
                  |L1.6612|
;;;2236   	}
;;;2237   
;;;2238   if((ETH_TRAP5_IP_1!=255)&&(ETH_TRAP5_IP_2!=255)&&(ETH_TRAP5_IP_3!=255)&&(ETH_TRAP5_IP_4!=255))
0019d4  4875              LDR      r0,|L1.7084|
0019d6  f9b02000          LDRSH    r2,[r0,#0]  ; ETH_TRAP5_IP_1
0019da  2aff              CMP      r2,#0xff
0019dc  d01a              BEQ      |L1.6676|
0019de  4874              LDR      r0,|L1.7088|
0019e0  f9b01000          LDRSH    r1,[r0,#0]  ; ETH_TRAP5_IP_2
0019e4  29ff              CMP      r1,#0xff
0019e6  d015              BEQ      |L1.6676|
0019e8  4872              LDR      r0,|L1.7092|
0019ea  f9b00000          LDRSH    r0,[r0,#0]  ; ETH_TRAP5_IP_3
0019ee  28ff              CMP      r0,#0xff
0019f0  d010              BEQ      |L1.6676|
0019f2  4b71              LDR      r3,|L1.7096|
0019f4  f9b33000          LDRSH    r3,[r3,#0]  ; ETH_TRAP5_IP_4
0019f8  2bff              CMP      r3,#0xff
0019fa  d00b              BEQ      |L1.6676|
;;;2239   	{
;;;2240   	temp_ip[0]= ETH_TRAP5_IP_1;
0019fc  7022              STRB     r2,[r4,#0]
;;;2241   	temp_ip[1]= ETH_TRAP5_IP_2;
0019fe  7061              STRB     r1,[r4,#1]
;;;2242   	temp_ip[2]= ETH_TRAP5_IP_3;
001a00  70a0              STRB     r0,[r4,#2]
;;;2243   	temp_ip[3]= ETH_TRAP5_IP_4;
001a02  70e3              STRB     r3,[r4,#3]
;;;2244   	snmp_trap (temp_ip, 6, 3, obj);
001a04  e8bd41f0          POP      {r4-r8,lr}
001a08  2203              MOVS     r2,#3
001a0a  4b5a              LDR      r3,|L1.7028|
001a0c  2106              MOVS     r1,#6
001a0e  485e              LDR      r0,|L1.7048|
001a10  f7ffbffe          B.W      snmp_trap
                  |L1.6676|
;;;2245   	}			
;;;2246   }
001a14  e696              B        |L1.5956|
;;;2247   
                          ENDP

                  snmp_warm_sign_write PROC
;;;2322   //-----------------------------------------------
;;;2323   void snmp_warm_sign_write(int mode)
001a16  2801              CMP      r0,#1
;;;2324   {
;;;2325   if(mode==MIB_WRITE)
001a18  d10c              BNE      |L1.6708|
;;;2326   	{
;;;2327        if(snmp_warm_sign==1)lc640_write_int(EE_TELECORE2017_KLIMAT_WARM_SIGNAL,1);
001a1a  485b              LDR      r0,|L1.7048|
001a1c  38ec              SUBS     r0,r0,#0xec
001a1e  7801              LDRB     r1,[r0,#0]  ; snmp_warm_sign
001a20  f44f7082          MOV      r0,#0x104
001a24  2901              CMP      r1,#1
001a26  d002              BEQ      |L1.6702|
;;;2328   	 else lc640_write_int(EE_TELECORE2017_KLIMAT_WARM_SIGNAL,0);
001a28  2100              MOVS     r1,#0
001a2a  f7ffbffe          B.W      lc640_write_int
                  |L1.6702|
001a2e  2101              MOVS     r1,#1                 ;2327
001a30  f7ffbffe          B.W      lc640_write_int
                  |L1.6708|
;;;2329   	}
;;;2330   }
001a34  e4db              B        |L1.5102|
;;;2331   
                          ENDP

                  snmp_cool_sign_write PROC
;;;2332   //-----------------------------------------------
;;;2333   void snmp_cool_sign_write(int mode)
001a36  2801              CMP      r0,#1
;;;2334   {
;;;2335   if(mode==MIB_WRITE)
001a38  d10c              BNE      |L1.6740|
;;;2336   	{
;;;2337       if(snmp_cool_sign==1)lc640_write_int(EE_TELECORE2017_KLIMAT_VENT_SIGNAL,1);
001a3a  4853              LDR      r0,|L1.7048|
001a3c  38ec              SUBS     r0,r0,#0xec
001a3e  7841              LDRB     r1,[r0,#1]  ; snmp_cool_sign
001a40  f44f708a          MOV      r0,#0x114
001a44  2901              CMP      r1,#1
001a46  d002              BEQ      |L1.6734|
;;;2338   	else lc640_write_int(EE_TELECORE2017_KLIMAT_VENT_SIGNAL,0);
001a48  2100              MOVS     r1,#0
001a4a  f7ffbffe          B.W      lc640_write_int
                  |L1.6734|
001a4e  2101              MOVS     r1,#1                 ;2337
001a50  f7ffbffe          B.W      lc640_write_int
                  |L1.6740|
;;;2339   	}
;;;2340   }
001a54  e4cb              B        |L1.5102|
;;;2341   
                          ENDP

                  snmp_warm_on_temper_write PROC
;;;2342   //-----------------------------------------------
;;;2343   void snmp_warm_on_temper_write(int mode)
001a56  2801              CMP      r0,#1
;;;2344   {
;;;2345   if(mode==MIB_WRITE)
001a58  d107              BNE      |L1.6762|
;;;2346   	{
;;;2347        lc640_write_int(EE_TELECORE2017_KLIMAT_WARM_ON,snmp_warm_on_temper);
001a5a  484b              LDR      r0,|L1.7048|
001a5c  38ec              SUBS     r0,r0,#0xec
001a5e  f9901002          LDRSB    r1,[r0,#2]  ; snmp_warm_on_temper
001a62  f44f7083          MOV      r0,#0x106
001a66  f7ffbffe          B.W      lc640_write_int
                  |L1.6762|
;;;2348   	}
;;;2349   }
001a6a  e4c0              B        |L1.5102|
;;;2350   
                          ENDP

                  snmp_warm_off_temper_write PROC
;;;2351   //-----------------------------------------------
;;;2352   void snmp_warm_off_temper_write(int mode)
001a6c  2801              CMP      r0,#1
;;;2353   {
;;;2354   if(mode==MIB_WRITE)
001a6e  d107              BNE      |L1.6784|
;;;2355   	{
;;;2356        lc640_write_int(EE_TELECORE2017_KLIMAT_WARM_OFF,snmp_warm_off_temper);
001a70  4845              LDR      r0,|L1.7048|
001a72  38ec              SUBS     r0,r0,#0xec
001a74  f9901003          LDRSB    r1,[r0,#3]  ; snmp_warm_off_temper
001a78  f44f7084          MOV      r0,#0x108
001a7c  f7ffbffe          B.W      lc640_write_int
                  |L1.6784|
;;;2357   	}
;;;2358   }
001a80  e4b5              B        |L1.5102|
;;;2359   
                          ENDP

                  snmp_warm_q_write PROC
;;;2360   //-----------------------------------------------
;;;2361   void snmp_warm_q_write(int mode)
001a82  2801              CMP      r0,#1
;;;2362   {
;;;2363   if(mode==MIB_WRITE)
001a84  d107              BNE      |L1.6806|
;;;2364   	{
;;;2365        lc640_write_int(EE_TELECORE2017_KLIMAT_CAP,snmp_warm_q);
001a86  4840              LDR      r0,|L1.7048|
001a88  38ec              SUBS     r0,r0,#0xec
001a8a  f9901004          LDRSB    r1,[r0,#4]  ; snmp_warm_q
001a8e  f44f7085          MOV      r0,#0x10a
001a92  f7ffbffe          B.W      lc640_write_int
                  |L1.6806|
;;;2366   	}
;;;2367   }
001a96  e4aa              B        |L1.5102|
;;;2368   
                          ENDP

                  snmp_cool_100_temper_write PROC
;;;2369   //-----------------------------------------------
;;;2370   void snmp_cool_100_temper_write(int mode)
001a98  2801              CMP      r0,#1
;;;2371   {
;;;2372   if(mode==MIB_WRITE)
001a9a  d107              BNE      |L1.6828|
;;;2373   	{
;;;2374        lc640_write_int(EE_TELECORE2017_KLIMAT_VENT_ON100,snmp_cool_100_temper);
001a9c  483a              LDR      r0,|L1.7048|
001a9e  38ec              SUBS     r0,r0,#0xec
001aa0  f9901005          LDRSB    r1,[r0,#5]  ; snmp_cool_100_temper
001aa4  f44f70a3          MOV      r0,#0x146
001aa8  f7ffbffe          B.W      lc640_write_int
                  |L1.6828|
;;;2375   	}
;;;2376   }
001aac  e49f              B        |L1.5102|
;;;2377   
                          ENDP

                  snmp_cool_80_temper_write PROC
;;;2378   //-----------------------------------------------
;;;2379   void snmp_cool_80_temper_write(int mode)
001aae  2801              CMP      r0,#1
;;;2380   {
;;;2381   if(mode==MIB_WRITE)
001ab0  d107              BNE      |L1.6850|
;;;2382   	{
;;;2383        lc640_write_int(EE_TELECORE2017_KLIMAT_VENT_ON80,snmp_cool_80_temper);
001ab2  4835              LDR      r0,|L1.7048|
001ab4  38ec              SUBS     r0,r0,#0xec
001ab6  f9901006          LDRSB    r1,[r0,#6]  ; snmp_cool_80_temper
001aba  f44f70a2          MOV      r0,#0x144
001abe  f7ffbffe          B.W      lc640_write_int
                  |L1.6850|
;;;2384   	}
;;;2385   }
001ac2  e494              B        |L1.5102|
;;;2386   
                          ENDP

                  snmp_cool_60_temper_write PROC
;;;2387   //-----------------------------------------------
;;;2388   void snmp_cool_60_temper_write(int mode)
001ac4  2801              CMP      r0,#1
;;;2389   {
;;;2390   if(mode==MIB_WRITE)
001ac6  d107              BNE      |L1.6872|
;;;2391   	{
;;;2392        lc640_write_int(EE_TELECORE2017_KLIMAT_VENT_ON60,snmp_cool_60_temper);
001ac8  482f              LDR      r0,|L1.7048|
001aca  38ec              SUBS     r0,r0,#0xec
001acc  f9901007          LDRSB    r1,[r0,#7]  ; snmp_cool_60_temper
001ad0  f44f70a1          MOV      r0,#0x142
001ad4  f7ffbffe          B.W      lc640_write_int
                  |L1.6872|
;;;2393   	}
;;;2394   }
001ad8  e489              B        |L1.5102|
;;;2395   
                          ENDP

                  snmp_cool_40_temper_write PROC
;;;2396   //-----------------------------------------------
;;;2397   void snmp_cool_40_temper_write(int mode)
001ada  2801              CMP      r0,#1
;;;2398   {
;;;2399   if(mode==MIB_WRITE)
001adc  d107              BNE      |L1.6894|
;;;2400   	{
;;;2401        lc640_write_int(EE_TELECORE2017_KLIMAT_VENT_ON40,snmp_cool_40_temper);
001ade  482a              LDR      r0,|L1.7048|
001ae0  38ec              SUBS     r0,r0,#0xec
001ae2  f9901008          LDRSB    r1,[r0,#8]  ; snmp_cool_40_temper
001ae6  f44f70a0          MOV      r0,#0x140
001aea  f7ffbffe          B.W      lc640_write_int
                  |L1.6894|
;;;2402   	}
;;;2403   }
001aee  e47e              B        |L1.5102|
;;;2404   
                          ENDP

                  snmp_cool_20_temper_write PROC
;;;2405   //-----------------------------------------------
;;;2406   void snmp_cool_20_temper_write(int mode)
001af0  2801              CMP      r0,#1
;;;2407   {
;;;2408   if(mode==MIB_WRITE)
001af2  d107              BNE      |L1.6916|
;;;2409   	{
;;;2410        lc640_write_int(EE_TELECORE2017_KLIMAT_VENT_ON20,snmp_cool_20_temper);
001af4  4824              LDR      r0,|L1.7048|
001af6  38ec              SUBS     r0,r0,#0xec
001af8  f9901009          LDRSB    r1,[r0,#9]  ; snmp_cool_20_temper
001afc  f44f709f          MOV      r0,#0x13e
001b00  f7ffbffe          B.W      lc640_write_int
                  |L1.6916|
;;;2411   	}
;;;2412   }
001b04  e473              B        |L1.5102|
;;;2413   
                          ENDP

                  snmp_cool_100_dtemper_write PROC
;;;2414   //-----------------------------------------------
;;;2415   void snmp_cool_100_dtemper_write(int mode)
001b06  2801              CMP      r0,#1
;;;2416   {
;;;2417   if(mode==MIB_WRITE)
001b08  d107              BNE      |L1.6938|
;;;2418   	{
;;;2419        lc640_write_int(EE_TELECORE2017_KLIMAT_DVENT_ON100,snmp_cool_100_dtemper);
001b0a  481f              LDR      r0,|L1.7048|
001b0c  38ec              SUBS     r0,r0,#0xec
001b0e  f990100a          LDRSB    r1,[r0,#0xa]  ; snmp_cool_100_dtemper
001b12  f44f70a9          MOV      r0,#0x152
001b16  f7ffbffe          B.W      lc640_write_int
                  |L1.6938|
;;;2420   	}
;;;2421   }
001b1a  e468              B        |L1.5102|
;;;2422   
                          ENDP

                  snmp_cool_80_dtemper_write PROC
;;;2423   //-----------------------------------------------
;;;2424   void snmp_cool_80_dtemper_write(int mode)
001b1c  2801              CMP      r0,#1
;;;2425   {
;;;2426   if(mode==MIB_WRITE)
001b1e  d107              BNE      |L1.6960|
;;;2427   	{
;;;2428        lc640_write_int(EE_TELECORE2017_KLIMAT_DVENT_ON80,snmp_cool_80_dtemper);
001b20  4819              LDR      r0,|L1.7048|
001b22  38ec              SUBS     r0,r0,#0xec
001b24  f990100b          LDRSB    r1,[r0,#0xb]  ; snmp_cool_80_dtemper
001b28  f44f70a8          MOV      r0,#0x150
001b2c  f7ffbffe          B.W      lc640_write_int
                  |L1.6960|
;;;2429   	}
;;;2430   }
001b30  e45d              B        |L1.5102|
;;;2431   
                          ENDP

                  snmp_cool_60_dtemper_write PROC
;;;2432   //-----------------------------------------------
;;;2433   void snmp_cool_60_dtemper_write(int mode)
001b32  2801              CMP      r0,#1
;;;2434   {
;;;2435   if(mode==MIB_WRITE)
001b34  d107              BNE      |L1.6982|
;;;2436   	{
;;;2437        lc640_write_int(EE_TELECORE2017_KLIMAT_DVENT_ON60,snmp_cool_60_dtemper);
001b36  4814              LDR      r0,|L1.7048|
001b38  38ec              SUBS     r0,r0,#0xec
001b3a  f990100c          LDRSB    r1,[r0,#0xc]  ; snmp_cool_60_dtemper
001b3e  f44f70a7          MOV      r0,#0x14e
001b42  f7ffbffe          B.W      lc640_write_int
                  |L1.6982|
;;;2438   	}
;;;2439   }
001b46  e452              B        |L1.5102|
;;;2440   
                          ENDP

                  snmp_cool_40_dtemper_write PROC
;;;2441   //-----------------------------------------------
;;;2442   void snmp_cool_40_dtemper_write(int mode)
001b48  2801              CMP      r0,#1
;;;2443   {
;;;2444   if(mode==MIB_WRITE)
001b4a  d107              BNE      |L1.7004|
;;;2445   	{
;;;2446        lc640_write_int(EE_TELECORE2017_KLIMAT_DVENT_ON40,snmp_cool_40_dtemper);
001b4c  480e              LDR      r0,|L1.7048|
001b4e  38ec              SUBS     r0,r0,#0xec
001b50  f990100d          LDRSB    r1,[r0,#0xd]  ; snmp_cool_40_dtemper
001b54  f44f70a6          MOV      r0,#0x14c
001b58  f7ffbffe          B.W      lc640_write_int
                  |L1.7004|
;;;2447   	}
;;;2448   }
001b5c  e447              B        |L1.5102|
;;;2449   
                          ENDP

                  snmp_cool_20_dtemper_write PROC
;;;2450   //-----------------------------------------------
;;;2451   void snmp_cool_20_dtemper_write(int mode)
001b5e  2801              CMP      r0,#1
;;;2452   {
;;;2453   if(mode==MIB_WRITE)
001b60  d107              BNE      |L1.7026|
;;;2454   	{
;;;2455        lc640_write_int(EE_TELECORE2017_KLIMAT_DVENT_ON20,snmp_cool_20_dtemper);
001b62  4809              LDR      r0,|L1.7048|
001b64  38ec              SUBS     r0,r0,#0xec
001b66  f990100e          LDRSB    r1,[r0,#0xe]  ; snmp_cool_20_dtemper
001b6a  f44f70a5          MOV      r0,#0x14a
001b6e  f7ffbffe          B.W      lc640_write_int
                  |L1.7026|
;;;2456   	}
;;;2457   }
001b72  e43c              B        |L1.5102|
;;;2458   
                          ENDP

                  |L1.7028|
                          DCD      ||.bss||+0x2a6
                  |L1.7032|
                          DCD      ETH_TRAP2_IP_1
                  |L1.7036|
                          DCD      ETH_TRAP2_IP_2
                  |L1.7040|
                          DCD      ETH_TRAP2_IP_3
                  |L1.7044|
                          DCD      ETH_TRAP2_IP_4
                  |L1.7048|
                          DCD      ||.data||+0xec
                  |L1.7052|
                          DCD      ETH_TRAP3_IP_1
                  |L1.7056|
                          DCD      ETH_TRAP3_IP_2
                  |L1.7060|
                          DCD      ETH_TRAP3_IP_3
                  |L1.7064|
                          DCD      ETH_TRAP3_IP_4
                  |L1.7068|
                          DCD      ETH_TRAP4_IP_1
                  |L1.7072|
                          DCD      ETH_TRAP4_IP_2
                  |L1.7076|
                          DCD      ETH_TRAP4_IP_3
                  |L1.7080|
                          DCD      ETH_TRAP4_IP_4
                  |L1.7084|
                          DCD      ETH_TRAP5_IP_1
                  |L1.7088|
                          DCD      ETH_TRAP5_IP_2
                  |L1.7092|
                          DCD      ETH_TRAP5_IP_3
                  |L1.7096|
                          DCD      ETH_TRAP5_IP_4

                          AREA ||area_number.2||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.2||, ||.text||
                  snmp_sernum_write PROC
;;;972    //-----------------------------------------------
;;;973    void snmp_sernum_write (int mode) 
000000  b510              PUSH     {r4,lr}
;;;974    {
;;;975    if(mode==MIB_WRITE)
000002  2801              CMP      r0,#1
000004  d10c              BNE      |L2.32|
;;;976    	{
;;;977    	lc640_write_long(EE_AUSW_MAIN_NUMBER,snmp_sernum);
000006  4c07              LDR      r4,|L2.36|
000008  f44f70ab          MOV      r0,#0x156
00000c  6b61              LDR      r1,[r4,#0x34]  ; snmp_sernum
00000e  f7fffffe          BL       lc640_write_long
;;;978    	lc640_write_long(EE_AUSW_UKU_NUMBER,snmp_sernum);
000012  6b61              LDR      r1,[r4,#0x34]  ; snmp_sernum
000014  e8bd4010          POP      {r4,lr}
000018  f44f70ac          MOV      r0,#0x158
00001c  f7ffbffe          B.W      lc640_write_long
                  |L2.32|
;;;979    	}
;;;980    }
000020  bd10              POP      {r4,pc}
;;;981    
                          ENDP

000022  0000              DCW      0x0000
                  |L2.36|
                          DCD      ||.data||+0x80

                          AREA ||area_number.3||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.3||, ||.text||
                  snmp_alarm_aktiv_write3 PROC
;;;972    //-----------------------------------------------
;;;973    void snmp_sernum_write (int mode) 
000000  2801              CMP      r0,#1
;;;974    {
;;;975    if(mode==MIB_WRITE)
000002  d10e              BNE      |L3.34|
000004  4807              LDR      r0,|L3.36|
;;;976    	{
;;;977    	lc640_write_long(EE_AUSW_MAIN_NUMBER,snmp_sernum);
000006  7881              LDRB     r1,[r0,#2]  ; snmp_sk_alarm_aktiv
000008  4807              LDR      r0,|L3.40|
00000a  b121              CBZ      r1,|L3.22|
00000c  f9b00004          LDRSH    r0,[r0,#4]  ; ADR_SK_SIGN
000010  2100              MOVS     r1,#0
;;;978    	lc640_write_long(EE_AUSW_UKU_NUMBER,snmp_sernum);
000012  f7ffbffe          B.W      lc640_write_int
                  |L3.22|
000016  f9b00004          LDRSH    r0,[r0,#4]  ; ADR_SK_SIGN
00001a  f04f31ff          MOV      r1,#0xffffffff
00001e  f7ffbffe          B.W      lc640_write_int
                  |L3.34|
;;;979    	}
;;;980    }
000022  4770              BX       lr
;;;981    
                          ENDP

                  |L3.36|
                          DCD      ||.data||+0xe4
                  |L3.40|
                          DCD      ADR_SK_SIGN

                          AREA ||area_number.4||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.4||, ||.text||
                  snmp_alarm_aktiv_write4 PROC
;;;972    //-----------------------------------------------
;;;973    void snmp_sernum_write (int mode) 
000000  2801              CMP      r0,#1
;;;974    {
;;;975    if(mode==MIB_WRITE)
000002  d10e              BNE      |L4.34|
000004  4807              LDR      r0,|L4.36|
;;;976    	{
;;;977    	lc640_write_long(EE_AUSW_MAIN_NUMBER,snmp_sernum);
000006  78c1              LDRB     r1,[r0,#3]  ; snmp_sk_alarm_aktiv
000008  4807              LDR      r0,|L4.40|
00000a  b121              CBZ      r1,|L4.22|
00000c  f9b00006          LDRSH    r0,[r0,#6]  ; ADR_SK_SIGN
000010  2100              MOVS     r1,#0
;;;978    	lc640_write_long(EE_AUSW_UKU_NUMBER,snmp_sernum);
000012  f7ffbffe          B.W      lc640_write_int
                  |L4.22|
000016  f9b00006          LDRSH    r0,[r0,#6]  ; ADR_SK_SIGN
00001a  f04f31ff          MOV      r1,#0xffffffff
00001e  f7ffbffe          B.W      lc640_write_int
                  |L4.34|
;;;979    	}
;;;980    }
000022  4770              BX       lr
;;;981    
                          ENDP

                  |L4.36|
                          DCD      ||.data||+0xe4
                  |L4.40|
                          DCD      ADR_SK_SIGN

                          AREA ||area_number.5||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.5||, ||.text||
                  snmp_main_bps_write PROC
;;;972    //-----------------------------------------------
;;;973    void snmp_sernum_write (int mode) 
000000  4770              BX       lr
;;;974    {
;;;975    if(mode==MIB_WRITE)
;;;976    	{
;;;977    	lc640_write_long(EE_AUSW_MAIN_NUMBER,snmp_sernum);
;;;978    	lc640_write_long(EE_AUSW_UKU_NUMBER,snmp_sernum);
;;;979    	}
;;;980    }
;;;981    
                          ENDP


                          AREA ||area_number.6||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.6||, ||.text||
                  snmp_max_current_koef_write PROC
;;;972    //-----------------------------------------------
;;;973    void snmp_sernum_write (int mode) 
000000  4770              BX       lr
;;;974    {
;;;975    if(mode==MIB_WRITE)
;;;976    	{
;;;977    	lc640_write_long(EE_AUSW_MAIN_NUMBER,snmp_sernum);
;;;978    	lc640_write_long(EE_AUSW_UKU_NUMBER,snmp_sernum);
;;;979    	}
;;;980    }
;;;981    
                          ENDP


                          AREA ||area_number.7||, CODE, READONLY, ALIGN=1

                          EXPORTAS ||area_number.7||, ||.text||
                  snmp_up_charge_koef_write PROC
;;;972    //-----------------------------------------------
;;;973    void snmp_sernum_write (int mode) 
000000  4770              BX       lr
;;;974    {
;;;975    if(mode==MIB_WRITE)
;;;976    	{
;;;977    	lc640_write_long(EE_AUSW_MAIN_NUMBER,snmp_sernum);
;;;978    	lc640_write_long(EE_AUSW_UKU_NUMBER,snmp_sernum);
;;;979    	}
;;;980    }
;;;981    
                          ENDP


                          AREA ||area_number.8||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.8||, ||.text||
                  snmp_max_temperature_write PROC
;;;972    //-----------------------------------------------
;;;973    void snmp_sernum_write (int mode) 
000000  2801              CMP      r0,#1
;;;974    {
;;;975    if(mode==MIB_WRITE)
000002  d105              BNE      |L8.16|
000004  4803              LDR      r0,|L8.20|
;;;976    	{
;;;977    	lc640_write_long(EE_AUSW_MAIN_NUMBER,snmp_sernum);
000006  f9b0106e          LDRSH    r1,[r0,#0x6e]  ; snmp_max_temperature
00000a  207e              MOVS     r0,#0x7e
00000c  f7ffbffe          B.W      lc640_write_int
                  |L8.16|
000010  4770              BX       lr
;;;978    	lc640_write_long(EE_AUSW_UKU_NUMBER,snmp_sernum);
;;;979    	}
;;;980    }
;;;981    
                          ENDP

000012  0000              DCW      0x0000
                  |L8.20|
                          DCD      ||.data||

                          AREA ||area_number.9||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.9||, ||.text||
                  snmp_klimat_settings_box_alarm_write PROC
;;;972    //-----------------------------------------------
;;;973    void snmp_sernum_write (int mode) 
000000  2801              CMP      r0,#1
;;;974    {
;;;975    if(mode==MIB_WRITE)
000002  d105              BNE      |L9.16|
000004  4803              LDR      r0,|L9.20|
;;;976    	{
;;;977    	lc640_write_long(EE_AUSW_MAIN_NUMBER,snmp_sernum);
000006  f9b0107e          LDRSH    r1,[r0,#0x7e]  ; snmp_klimat_settings_box_alarm
00000a  20d0              MOVS     r0,#0xd0
00000c  f7ffbffe          B.W      lc640_write_int
                  |L9.16|
000010  4770              BX       lr
;;;978    	lc640_write_long(EE_AUSW_UKU_NUMBER,snmp_sernum);
;;;979    	}
;;;980    }
;;;981    
                          ENDP

000012  0000              DCW      0x0000
                  |L9.20|
                          DCD      ||.data||

                          AREA ||area_number.10||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.10||, ||.text||
                  snmp_klimat_settings_vent_on_write PROC
;;;972    //-----------------------------------------------
;;;973    void snmp_sernum_write (int mode) 
000000  2801              CMP      r0,#1
;;;974    {
;;;975    if(mode==MIB_WRITE)
000002  d105              BNE      |L10.16|
000004  4803              LDR      r0,|L10.20|
;;;976    	{
;;;977    	lc640_write_long(EE_AUSW_MAIN_NUMBER,snmp_sernum);
000006  f9b01000          LDRSH    r1,[r0,#0]  ; snmp_klimat_settings_vent_on
00000a  20f4              MOVS     r0,#0xf4
00000c  f7ffbffe          B.W      lc640_write_int
                  |L10.16|
000010  4770              BX       lr
;;;978    	lc640_write_long(EE_AUSW_UKU_NUMBER,snmp_sernum);
;;;979    	}
;;;980    }
;;;981    
                          ENDP

000012  0000              DCW      0x0000
                  |L10.20|
                          DCD      ||.data||+0x80

                          AREA ||area_number.11||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.11||, ||.text||
                  snmp_klimat_settings_vent_off_write PROC
;;;972    //-----------------------------------------------
;;;973    void snmp_sernum_write (int mode) 
000000  2801              CMP      r0,#1
;;;974    {
;;;975    if(mode==MIB_WRITE)
000002  d105              BNE      |L11.16|
000004  4803              LDR      r0,|L11.20|
;;;976    	{
;;;977    	lc640_write_long(EE_AUSW_MAIN_NUMBER,snmp_sernum);
000006  f9b01002          LDRSH    r1,[r0,#2]  ; snmp_klimat_settings_vent_off
00000a  20f6              MOVS     r0,#0xf6
00000c  f7ffbffe          B.W      lc640_write_int
                  |L11.16|
000010  4770              BX       lr
;;;978    	lc640_write_long(EE_AUSW_UKU_NUMBER,snmp_sernum);
;;;979    	}
;;;980    }
;;;981    
                          ENDP

000012  0000              DCW      0x0000
                  |L11.20|
                          DCD      ||.data||+0x80

                          AREA ||area_number.12||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.12||, ||.text||
                  snmp_klimat_settings_warm_on_write PROC
;;;972    //-----------------------------------------------
;;;973    void snmp_sernum_write (int mode) 
000000  2801              CMP      r0,#1
;;;974    {
;;;975    if(mode==MIB_WRITE)
000002  d105              BNE      |L12.16|
000004  4803              LDR      r0,|L12.20|
;;;976    	{
;;;977    	lc640_write_long(EE_AUSW_MAIN_NUMBER,snmp_sernum);
000006  f9b01004          LDRSH    r1,[r0,#4]  ; snmp_klimat_settings_warm_on
00000a  20f8              MOVS     r0,#0xf8
00000c  f7ffbffe          B.W      lc640_write_int
                  |L12.16|
000010  4770              BX       lr
;;;978    	lc640_write_long(EE_AUSW_UKU_NUMBER,snmp_sernum);
;;;979    	}
;;;980    }
;;;981    
                          ENDP

000012  0000              DCW      0x0000
                  |L12.20|
                          DCD      ||.data||+0x80

                          AREA ||area_number.13||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.13||, ||.text||
                  snmp_klimat_settings_warm_off_write PROC
;;;972    //-----------------------------------------------
;;;973    void snmp_sernum_write (int mode) 
000000  2801              CMP      r0,#1
;;;974    {
;;;975    if(mode==MIB_WRITE)
000002  d105              BNE      |L13.16|
000004  4803              LDR      r0,|L13.20|
;;;976    	{
;;;977    	lc640_write_long(EE_AUSW_MAIN_NUMBER,snmp_sernum);
000006  f9b01006          LDRSH    r1,[r0,#6]  ; snmp_klimat_settings_warm_off
00000a  20fa              MOVS     r0,#0xfa
00000c  f7ffbffe          B.W      lc640_write_int
                  |L13.16|
000010  4770              BX       lr
;;;978    	lc640_write_long(EE_AUSW_UKU_NUMBER,snmp_sernum);
;;;979    	}
;;;980    }
;;;981    
                          ENDP

000012  0000              DCW      0x0000
                  |L13.20|
                          DCD      ||.data||+0x80

                          AREA ||area_number.14||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.14||, ||.text||
                  snmp_klimat_settings_load_on_write PROC
;;;972    //-----------------------------------------------
;;;973    void snmp_sernum_write (int mode) 
000000  2801              CMP      r0,#1
;;;974    {
;;;975    if(mode==MIB_WRITE)
000002  d105              BNE      |L14.16|
000004  4803              LDR      r0,|L14.20|
;;;976    	{
;;;977    	lc640_write_long(EE_AUSW_MAIN_NUMBER,snmp_sernum);
000006  f9b01008          LDRSH    r1,[r0,#8]  ; snmp_klimat_settings_load_on
00000a  20d8              MOVS     r0,#0xd8
00000c  f7ffbffe          B.W      lc640_write_int
                  |L14.16|
000010  4770              BX       lr
;;;978    	lc640_write_long(EE_AUSW_UKU_NUMBER,snmp_sernum);
;;;979    	}
;;;980    }
;;;981    
                          ENDP

000012  0000              DCW      0x0000
                  |L14.20|
                          DCD      ||.data||+0x80

                          AREA ||area_number.15||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.15||, ||.text||
                  snmp_klimat_settings_load_off_write PROC
;;;972    //-----------------------------------------------
;;;973    void snmp_sernum_write (int mode) 
000000  2801              CMP      r0,#1
;;;974    {
;;;975    if(mode==MIB_WRITE)
000002  d105              BNE      |L15.16|
000004  4803              LDR      r0,|L15.20|
;;;976    	{
;;;977    	lc640_write_long(EE_AUSW_MAIN_NUMBER,snmp_sernum);
000006  f9b0100a          LDRSH    r1,[r0,#0xa]  ; snmp_klimat_settings_load_off
00000a  20d6              MOVS     r0,#0xd6
00000c  f7ffbffe          B.W      lc640_write_int
                  |L15.16|
000010  4770              BX       lr
;;;978    	lc640_write_long(EE_AUSW_UKU_NUMBER,snmp_sernum);
;;;979    	}
;;;980    }
;;;981    
                          ENDP

000012  0000              DCW      0x0000
                  |L15.20|
                          DCD      ||.data||+0x80

                          AREA ||area_number.16||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.16||, ||.text||
                  snmp_klimat_settings_batt_on_write PROC
;;;972    //-----------------------------------------------
;;;973    void snmp_sernum_write (int mode) 
000000  2801              CMP      r0,#1
;;;974    {
;;;975    if(mode==MIB_WRITE)
000002  d105              BNE      |L16.16|
000004  4803              LDR      r0,|L16.20|
;;;976    	{
;;;977    	lc640_write_long(EE_AUSW_MAIN_NUMBER,snmp_sernum);
000006  f9b0100c          LDRSH    r1,[r0,#0xc]  ; snmp_klimat_settings_batt_on
00000a  20dc              MOVS     r0,#0xdc
00000c  f7ffbffe          B.W      lc640_write_int
                  |L16.16|
000010  4770              BX       lr
;;;978    	lc640_write_long(EE_AUSW_UKU_NUMBER,snmp_sernum);
;;;979    	}
;;;980    }
;;;981    
                          ENDP

000012  0000              DCW      0x0000
                  |L16.20|
                          DCD      ||.data||+0x80

                          AREA ||area_number.17||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.17||, ||.text||
                  snmp_klimat_settings_batt_off_write PROC
;;;972    //-----------------------------------------------
;;;973    void snmp_sernum_write (int mode) 
000000  2801              CMP      r0,#1
;;;974    {
;;;975    if(mode==MIB_WRITE)
000002  d105              BNE      |L17.16|
000004  4803              LDR      r0,|L17.20|
;;;976    	{
;;;977    	lc640_write_long(EE_AUSW_MAIN_NUMBER,snmp_sernum);
000006  f9b0100e          LDRSH    r1,[r0,#0xe]  ; snmp_klimat_settings_batt_off
00000a  20da              MOVS     r0,#0xda
00000c  f7ffbffe          B.W      lc640_write_int
                  |L17.16|
000010  4770              BX       lr
;;;978    	lc640_write_long(EE_AUSW_UKU_NUMBER,snmp_sernum);
;;;979    	}
;;;980    }
;;;981    
                          ENDP

000012  0000              DCW      0x0000
                  |L17.20|
                          DCD      ||.data||+0x80

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  temp_str
                          %        20
                  snmp_location
                          %        100
                  snmp_bps_number
                          %        16
                  snmp_bps_voltage
                          %        16
                  snmp_bps_current
                          %        16
                  snmp_bps_temperature
                          %        16
                  snmp_bps_stat
                          %        16
                  snmp_spc_trap_message
                          %        100
                  snmp_avt_number
                          %        12
                  snmp_avt_stat
                          %        12
                  snmp_sk_name
                          %        80
                  snmp_lakb_number
                          %        14
                  snmp_lakb_voltage
                          %        14
                  snmp_lakb_max_cell_voltage
                          %        14
                  snmp_lakb_min_cell_voltage
                          %        14
                  snmp_lakb_max_cell_temperature
                          %        14
                  snmp_lakb_min_cell_temperature
                          %        14
                  snmp_lakb_ch_curr
                          %        14
                  snmp_lakb_dsch_curr
                          %        14
                  snmp_lakb_rat_cap
                          %        14
                  snmp_lakb_soh
                          %        14
                  snmp_lakb_soc
                          %        14
                  snmp_lakb_cclv
                          %        14
                  snmp_lakb_rbt
                          %        14
                  snmp_lakb_flags1
                          %        14
                  snmp_lakb_flags2
                          %        14
                  snmp_enmv_number
                          %        64
                  obj
                          %        20

                          AREA ||area_number.20||, DATA, NOINIT, ALIGN=0

                          EXPORTAS ||area_number.20||, ||.bss||
                  snmp_community
                          %        10

                          AREA ||area_number.21||, DATA, NOINIT, ALIGN=0

                          EXPORTAS ||area_number.21||, ||.bss||
                  snmp_lakb_damp1
                          %        450

                          AREA ||area_number.22||, DATA, NOINIT, ALIGN=0

                          EXPORTAS ||area_number.22||, ||.bss||
                  snmp_lakb_damp2
                          %        100

                          AREA ||area_number.23||, DATA, NOINIT, ALIGN=0

                          EXPORTAS ||area_number.23||, ||.bss||
                  snmp_enmv_data
                          %        64

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

000000  20202020          DCB      0x20,0x20,0x20,0x20
000004  20202020          DCB      0x20,0x20,0x20,0x20
000008  20202020          DCB      0x20,0x20,0x20,0x20
00000c  20202020          DCB      0x20,0x20,0x20,0x20
000010  20202020          DCB      0x20,0x20,0x20,0x20
000014  20202020          DCB      0x20,0x20,0x20,0x20
000018  20202020          DCB      0x20,0x20,0x20,0x20
00001c  20202020          DCB      0x20,0x20,0x20,0x20
000020  20202020          DCB      0x20,0x20,0x20,0x20
000024  20202020          DCB      0x20,0x20,0x20,0x20
000028  20202020          DCB      0x20,0x20,0x20,0x20
00002c  20202020          DCB      0x20,0x20,0x20,0x20
000030  20202020          DCB      0x20,0x20,0x20,0x20
000034  20202020          DCB      0x20,0x20,0x20,0x20
000038  20202020          DCB      0x20,0x20,0x20,0x20
00003c  20202020          DCB      0x20,0x20,0x20,0x20
000040  20202020          DCB      0x20,0x20,0x20,0x20
000044  20202020          DCB      0x20,0x20,0x20,0x20
000048  20202020          DCB      0x20,0x20,0x20,0x20
00004c  20202020          DCB      0x20,0x20,0x20,0x20
000050  00                DCB      0x00

                          AREA ||.data||, DATA, ALIGN=2

                  snmp_warm_sign
000000  00                DCB      0x00
                  snmp_cool_sign
000001  00                DCB      0x00
                  snmp_warm_on_temper
000002  00                DCB      0x00
                  snmp_warm_off_temper
000003  00                DCB      0x00
                  snmp_warm_q
000004  00                DCB      0x00
                  snmp_cool_100_temper
000005  00                DCB      0x00
                  snmp_cool_80_temper
000006  00                DCB      0x00
                  snmp_cool_60_temper
000007  00                DCB      0x00
                  snmp_cool_40_temper
000008  00                DCB      0x00
                  snmp_cool_20_temper
000009  00                DCB      0x00
                  snmp_cool_100_dtemper
00000a  00                DCB      0x00
                  snmp_cool_80_dtemper
00000b  00                DCB      0x00
                  snmp_cool_60_dtemper
00000c  00                DCB      0x00
                  snmp_cool_40_dtemper
00000d  00                DCB      0x00
                  snmp_cool_20_dtemper
00000e  00                DCB      0x00
                  snmp_trap_send_i
00000f  00                DCB      0x00
                  snmp_trap_send_ii
000010  0000              DCB      0x00,0x00
                  snmp_numofbat
000012  0000              DCB      0x00,0x00
                  snmp_numofbps
000014  0000              DCB      0x00,0x00
                  snmp_numofinv
000016  0000              DCB      0x00,0x00
                  snmp_numofavt
000018  0000              DCB      0x00,0x00
                  snmp_numofdt
00001a  0000              DCB      0x00,0x00
                  snmp_numofsk
00001c  0000              DCB      0x00,0x00
                  snmp_numofevents
00001e  0000              DCB      0x00,0x00
                  snmp_mains_power_voltage
000020  0000              DCB      0x00,0x00
                  snmp_mains_power_frequency
000022  0000              DCB      0x00,0x00
                  snmp_mains_power_status
000024  0000              DCB      0x00,0x00
                  snmp_mains_power_alarm
000026  0000              DCB      0x00,0x00
                  snmp_mains_power_voltage_phaseA
000028  0000              DCB      0x00,0x00
                  snmp_mains_power_voltage_phaseB
00002a  0000              DCB      0x00,0x00
                  snmp_mains_power_voltage_phaseC
00002c  0000              DCB      0x00,0x00
                  snmp_load_voltage
00002e  0000              DCB      0x00,0x00
                  snmp_load_current
000030  0000              DCB      0x00,0x00
                  snmp_spc_trap_value_0
000032  0000              DCB      0x00,0x00
                  snmp_spc_trap_value_1
000034  0000              DCB      0x00,0x00
                  snmp_spc_trap_value_2
000036  0000              DCB      0x00,0x00
                  snmp_energy_vvod_phase_a
000038  0000              DCB      0x00,0x00
                  snmp_energy_vvod_phase_b
00003a  0000              DCB      0x00,0x00
                  snmp_energy_vvod_phase_c
00003c  0000              DCB      0x00,0x00
                  snmp_energy_pes_phase_a
00003e  0000              DCB      0x00,0x00
                  snmp_energy_pes_phase_b
000040  0000              DCB      0x00,0x00
                  snmp_energy_pes_phase_c
000042  0000              DCB      0x00,0x00
                  snmp_energy_input_voltage
000044  0000              DCB      0x00,0x00
                  snmp_energy_current_energy
000046  0000              DCB      0x00,0x00
                  snmp_command
000048  0000              DCB      0x00,0x00
                  snmp_command_parametr
00004a  0000              DCB      0x00,0x00
                  snmp_zv_en
00004c  0000              DCB      0x00,0x00
                  snmp_alarm_auto_disable
00004e  0000              DCB      0x00,0x00
                  snmp_bat_test_time
000050  0000              DCB      0x00,0x00
                  snmp_u_max
000052  0000              DCB      0x00,0x00
                  snmp_u_min
000054  0000              DCB      0x00,0x00
                  snmp_u_0_grad
000056  0000              DCB      0x00,0x00
                  snmp_u_20_grad
000058  0000              DCB      0x00,0x00
                  snmp_u_sign
00005a  0000              DCB      0x00,0x00
                  snmp_u_min_power
00005c  0000              DCB      0x00,0x00
                  snmp_u_max_power
00005e  0000              DCB      0x00,0x00
                  snmp_u_withouth_bat
000060  0000              DCB      0x00,0x00
                  snmp_control_current
000062  0000              DCB      0x00,0x00
                  snmp_max_charge_current
000064  0000              DCB      0x00,0x00
                  snmp_max_current
000066  0000              DCB      0x00,0x00
                  snmp_min_current
000068  0000              DCB      0x00,0x00
                  snmp_uvz
00006a  0000              DCB      0x00,0x00
                  snmp_powerup_psu_timeout
00006c  0000              DCB      0x00,0x00
                  snmp_max_temperature
00006e  0000              DCB      0x00,0x00
                  snmp_tsign_bat
000070  0000              DCB      0x00,0x00
                  snmp_tmax_bat
000072  0000              DCB      0x00,0x00
                  snmp_tsign_bps
000074  0000              DCB      0x00,0x00
                  snmp_tmax_bps
000076  0000              DCB      0x00,0x00
                  snmp_bat_part_alarm
000078  0000              DCB      0x00,0x00
                  snmp_power_cnt_adress
00007a  0000              DCB      0x00,0x00
                  snmp_klimat_box_temper
00007c  0000              DCB      0x00,0x00
                  snmp_klimat_settings_box_alarm
00007e  0000              DCB      0x00,0x00
                  snmp_klimat_settings_vent_on
000080  0000              DCB      0x00,0x00
                  snmp_klimat_settings_vent_off
000082  0000              DCB      0x00,0x00
                  snmp_klimat_settings_warm_on
000084  0000              DCB      0x00,0x00
                  snmp_klimat_settings_warm_off
000086  0000              DCB      0x00,0x00
                  snmp_klimat_settings_load_on
000088  0000              DCB      0x00,0x00
                  snmp_klimat_settings_load_off
00008a  0000              DCB      0x00,0x00
                  snmp_klimat_settings_batt_on
00008c  0000              DCB      0x00,0x00
                  snmp_klimat_settings_batt_off
00008e  0000              DCB      0x00,0x00
                  snmp_dt_ext
000090  0000              DCB      0x00,0x00
                  snmp_dt_msan
000092  0000              DCB      0x00,0x00
                  snmp_dt_epu
000094  0000              DCB      0x00,0x00
                  snmp_dt_number
000096  0000              DCB      0x00,0x00
000098  00                DCB      0x00
                  snmp_dt_error
000099  000000            DCB      0x00,0x00,0x00
                  snmp_lakb_cell_temperature_1
00009c  000000            DCB      0x00,0x00,0x00
                  snmp_lakb_cell_temperature_2
00009f  00                DCB      0x00
0000a0  0000              DCB      0x00,0x00
                  snmp_lakb_cell_temperature_3
0000a2  0000              DCB      0x00,0x00
0000a4  00                DCB      0x00
                  snmp_lakb_cell_temperature_4
0000a5  000000            DCB      0x00,0x00,0x00
                  snmp_lakb_cell_temperature_ambient
0000a8  000000            DCB      0x00,0x00,0x00
                  snmp_lakb_cell_temperature_power
0000ab  00                DCB      0x00
0000ac  00000000          DCB      0x00,0x00,0x00,0x00
                  snmp_device_code
                          DCD      0x00000000
                  snmp_sernum
                          DCD      0x00000000
                  snmp_bat_number
                          DCD      0x00000000
                  snmp_bat_voltage
                          DCD      0x00000000
                  snmp_bat_current
                          DCD      0x00000000
                  snmp_bat_temperature
                          DCD      0x00000000
                  snmp_bat_capacity
                          DCD      0x00000000
                  snmp_bat_charge
                          DCD      0x00000000
                  snmp_bat_status
                          DCD      0x00000000
                  snmp_bat_rem_time
                          DCD      0x00000000
                  snmp_energy_total_energy
                          DCD      0x00000000
                  snmp_sk_number
                          DCD      0x00000000
                  snmp_sk_aktiv
                          DCD      0x00000000
                  snmp_sk_alarm_aktiv
                          DCD      0x00000000
                  snmp_sk_alarm
                          DCD      0x00000000
                  temp_ip
                          DCD      0x00000000
                  snmp_inv_number
                          DCD      0x00000000
0000f4  0000              DCB      0x00,0x00
                  snmp_inv_voltage
0000f6  0000              DCB      0x00,0x00
                          DCD      0x00000000
                  snmp_inv_current
                          DCD      0x00000000
000100  0000              DCB      0x00,0x00
                  snmp_inv_temperature
000102  0000              DCB      0x00,0x00
                          DCD      0x00000000
                  snmp_inv_stat
                          DCD      0x00000000
00010c  0000              DCB      0x00,0x00
                  snmp_dt_temper
00010e  0000              DCB      0x00,0x00
                          DCD      0x00000000
                  snmp_makb_connect_status
                          %        8
                  snmp_makb_voltage0
                          %        8
                  snmp_makb_voltage1
                          %        8
                  snmp_makb_voltage2
                          %        8
                  snmp_makb_voltage3
                          %        8
                  snmp_makb_voltage4
                          %        8
                  snmp_makb_temper0
                          %        8
                  snmp_makb_temper1
                          %        8
                  snmp_makb_temper2
                          %        8
                  snmp_makb_temper3
                          %        8
                  snmp_makb_temper4
                          %        8
                  snmp_makb_temper0_stat
                          %        8
                  snmp_makb_temper1_stat
                          %        8
                  snmp_makb_temper2_stat
                          %        8
                  snmp_makb_temper3_stat
                          %        8
                  snmp_makb_temper4_stat
                          %        8
                  snmp_log
000194  30314061          DCB      0x30,0x31,0x40,0x61
000198  62636440          DCB      0x62,0x63,0x64,0x40
00019c  65666768          DCB      0x65,0x66,0x67,0x68
0001a0  40696a6b          DCB      0x40,0x69,0x6a,0x6b
0001a4  6c403031          DCB      0x6c,0x40,0x30,0x31
0001a8  40202020          DCB      0x40,0x20,0x20,0x20
0001ac  20202020          DCB      0x20,0x20,0x20,0x20
0001b0  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000214  30324061          DCB      0x30,0x32,0x40,0x61
000218  62636440          DCB      0x62,0x63,0x64,0x40
00021c  65666768          DCB      0x65,0x66,0x67,0x68
000220  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000224  6c403032          DCB      0x6c,0x40,0x30,0x32
000228  40202020          DCB      0x40,0x20,0x20,0x20
00022c  20202020          DCB      0x20,0x20,0x20,0x20
000230  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000294  30334061          DCB      0x30,0x33,0x40,0x61
000298  62636440          DCB      0x62,0x63,0x64,0x40
00029c  65666768          DCB      0x65,0x66,0x67,0x68
0002a0  40696a6b          DCB      0x40,0x69,0x6a,0x6b
0002a4  6c403033          DCB      0x6c,0x40,0x30,0x33
0002a8  40202020          DCB      0x40,0x20,0x20,0x20
0002ac  20202020          DCB      0x20,0x20,0x20,0x20
0002b0  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000314  30344061          DCB      0x30,0x34,0x40,0x61
000318  62636440          DCB      0x62,0x63,0x64,0x40
00031c  65666768          DCB      0x65,0x66,0x67,0x68
000320  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000324  6c403034          DCB      0x6c,0x40,0x30,0x34
000328  40202020          DCB      0x40,0x20,0x20,0x20
00032c  20202020          DCB      0x20,0x20,0x20,0x20
000330  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000394  30354061          DCB      0x30,0x35,0x40,0x61
000398  62636440          DCB      0x62,0x63,0x64,0x40
00039c  65666768          DCB      0x65,0x66,0x67,0x68
0003a0  40696a6b          DCB      0x40,0x69,0x6a,0x6b
0003a4  6c403035          DCB      0x6c,0x40,0x30,0x35
0003a8  40202020          DCB      0x40,0x20,0x20,0x20
0003ac  20202020          DCB      0x20,0x20,0x20,0x20
0003b0  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000414  30364061          DCB      0x30,0x36,0x40,0x61
000418  62636440          DCB      0x62,0x63,0x64,0x40
00041c  65666768          DCB      0x65,0x66,0x67,0x68
000420  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000424  6c403036          DCB      0x6c,0x40,0x30,0x36
000428  40202020          DCB      0x40,0x20,0x20,0x20
00042c  20202020          DCB      0x20,0x20,0x20,0x20
000430  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000494  30374061          DCB      0x30,0x37,0x40,0x61
000498  62636440          DCB      0x62,0x63,0x64,0x40
00049c  65666768          DCB      0x65,0x66,0x67,0x68
0004a0  40696a6b          DCB      0x40,0x69,0x6a,0x6b
0004a4  6c403037          DCB      0x6c,0x40,0x30,0x37
0004a8  40202020          DCB      0x40,0x20,0x20,0x20
0004ac  20202020          DCB      0x20,0x20,0x20,0x20
0004b0  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000514  30384061          DCB      0x30,0x38,0x40,0x61
000518  62636440          DCB      0x62,0x63,0x64,0x40
00051c  65666768          DCB      0x65,0x66,0x67,0x68
000520  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000524  6c403038          DCB      0x6c,0x40,0x30,0x38
000528  40202020          DCB      0x40,0x20,0x20,0x20
00052c  20202020          DCB      0x20,0x20,0x20,0x20
000530  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000594  30394061          DCB      0x30,0x39,0x40,0x61
000598  62636440          DCB      0x62,0x63,0x64,0x40
00059c  65666768          DCB      0x65,0x66,0x67,0x68
0005a0  40696a6b          DCB      0x40,0x69,0x6a,0x6b
0005a4  6c403039          DCB      0x6c,0x40,0x30,0x39
0005a8  40202020          DCB      0x40,0x20,0x20,0x20
0005ac  20202020          DCB      0x20,0x20,0x20,0x20
0005b0  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000614  31304061          DCB      0x31,0x30,0x40,0x61
000618  62636440          DCB      0x62,0x63,0x64,0x40
00061c  65666768          DCB      0x65,0x66,0x67,0x68
000620  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000624  6c403130          DCB      0x6c,0x40,0x31,0x30
000628  40202020          DCB      0x40,0x20,0x20,0x20
00062c  20202020          DCB      0x20,0x20,0x20,0x20
000630  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000694  31314061          DCB      0x31,0x31,0x40,0x61
000698  62636440          DCB      0x62,0x63,0x64,0x40
00069c  65666768          DCB      0x65,0x66,0x67,0x68
0006a0  40696a6b          DCB      0x40,0x69,0x6a,0x6b
0006a4  6c403131          DCB      0x6c,0x40,0x31,0x31
0006a8  40202020          DCB      0x40,0x20,0x20,0x20
0006ac  20202020          DCB      0x20,0x20,0x20,0x20
0006b0  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000714  31324061          DCB      0x31,0x32,0x40,0x61
000718  62636440          DCB      0x62,0x63,0x64,0x40
00071c  65666768          DCB      0x65,0x66,0x67,0x68
000720  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000724  6c403132          DCB      0x6c,0x40,0x31,0x32
000728  40202020          DCB      0x40,0x20,0x20,0x20
00072c  20202020          DCB      0x20,0x20,0x20,0x20
000730  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000794  31334061          DCB      0x31,0x33,0x40,0x61
000798  62636440          DCB      0x62,0x63,0x64,0x40
00079c  65666768          DCB      0x65,0x66,0x67,0x68
0007a0  40696a6b          DCB      0x40,0x69,0x6a,0x6b
0007a4  6c403133          DCB      0x6c,0x40,0x31,0x33
0007a8  40202020          DCB      0x40,0x20,0x20,0x20
0007ac  20202020          DCB      0x20,0x20,0x20,0x20
0007b0  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000814  31344061          DCB      0x31,0x34,0x40,0x61
000818  62636440          DCB      0x62,0x63,0x64,0x40
00081c  65666768          DCB      0x65,0x66,0x67,0x68
000820  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000824  6c403134          DCB      0x6c,0x40,0x31,0x34
000828  40202020          DCB      0x40,0x20,0x20,0x20
00082c  20202020          DCB      0x20,0x20,0x20,0x20
000830  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000894  31354061          DCB      0x31,0x35,0x40,0x61
000898  62636440          DCB      0x62,0x63,0x64,0x40
00089c  65666768          DCB      0x65,0x66,0x67,0x68
0008a0  40696a6b          DCB      0x40,0x69,0x6a,0x6b
0008a4  6c403135          DCB      0x6c,0x40,0x31,0x35
0008a8  40202020          DCB      0x40,0x20,0x20,0x20
0008ac  20202020          DCB      0x20,0x20,0x20,0x20
0008b0  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000914  31364061          DCB      0x31,0x36,0x40,0x61
000918  62636440          DCB      0x62,0x63,0x64,0x40
00091c  65666768          DCB      0x65,0x66,0x67,0x68
000920  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000924  6c403136          DCB      0x6c,0x40,0x31,0x36
000928  40202020          DCB      0x40,0x20,0x20,0x20
00092c  20202020          DCB      0x20,0x20,0x20,0x20
000930  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000994  31374061          DCB      0x31,0x37,0x40,0x61
000998  62636440          DCB      0x62,0x63,0x64,0x40
00099c  65666768          DCB      0x65,0x66,0x67,0x68
0009a0  40696a6b          DCB      0x40,0x69,0x6a,0x6b
0009a4  6c403137          DCB      0x6c,0x40,0x31,0x37
0009a8  40202020          DCB      0x40,0x20,0x20,0x20
0009ac  20202020          DCB      0x20,0x20,0x20,0x20
0009b0  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000a14  31384061          DCB      0x31,0x38,0x40,0x61
000a18  62636440          DCB      0x62,0x63,0x64,0x40
000a1c  65666768          DCB      0x65,0x66,0x67,0x68
000a20  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000a24  6c403138          DCB      0x6c,0x40,0x31,0x38
000a28  40202020          DCB      0x40,0x20,0x20,0x20
000a2c  20202020          DCB      0x20,0x20,0x20,0x20
000a30  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000a94  31394061          DCB      0x31,0x39,0x40,0x61
000a98  62636440          DCB      0x62,0x63,0x64,0x40
000a9c  65666768          DCB      0x65,0x66,0x67,0x68
000aa0  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000aa4  6c403139          DCB      0x6c,0x40,0x31,0x39
000aa8  40202020          DCB      0x40,0x20,0x20,0x20
000aac  20202020          DCB      0x20,0x20,0x20,0x20
000ab0  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000b14  32304061          DCB      0x32,0x30,0x40,0x61
000b18  62636440          DCB      0x62,0x63,0x64,0x40
000b1c  65666768          DCB      0x65,0x66,0x67,0x68
000b20  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000b24  6c403230          DCB      0x6c,0x40,0x32,0x30
000b28  40202020          DCB      0x40,0x20,0x20,0x20
000b2c  20202020          DCB      0x20,0x20,0x20,0x20
000b30  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000b94  32314061          DCB      0x32,0x31,0x40,0x61
000b98  62636440          DCB      0x62,0x63,0x64,0x40
000b9c  65666768          DCB      0x65,0x66,0x67,0x68
000ba0  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000ba4  6c403231          DCB      0x6c,0x40,0x32,0x31
000ba8  40202020          DCB      0x40,0x20,0x20,0x20
000bac  20202020          DCB      0x20,0x20,0x20,0x20
000bb0  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000c14  32324061          DCB      0x32,0x32,0x40,0x61
000c18  62636440          DCB      0x62,0x63,0x64,0x40
000c1c  65666768          DCB      0x65,0x66,0x67,0x68
000c20  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000c24  6c403232          DCB      0x6c,0x40,0x32,0x32
000c28  40202020          DCB      0x40,0x20,0x20,0x20
000c2c  20202020          DCB      0x20,0x20,0x20,0x20
000c30  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000c94  32334061          DCB      0x32,0x33,0x40,0x61
000c98  62636440          DCB      0x62,0x63,0x64,0x40
000c9c  65666768          DCB      0x65,0x66,0x67,0x68
000ca0  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000ca4  6c403233          DCB      0x6c,0x40,0x32,0x33
000ca8  40202020          DCB      0x40,0x20,0x20,0x20
000cac  20202020          DCB      0x20,0x20,0x20,0x20
000cb0  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000d14  32344061          DCB      0x32,0x34,0x40,0x61
000d18  62636440          DCB      0x62,0x63,0x64,0x40
000d1c  65666768          DCB      0x65,0x66,0x67,0x68
000d20  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000d24  6c403234          DCB      0x6c,0x40,0x32,0x34
000d28  40202020          DCB      0x40,0x20,0x20,0x20
000d2c  20202020          DCB      0x20,0x20,0x20,0x20
000d30  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000d94  32354061          DCB      0x32,0x35,0x40,0x61
000d98  62636440          DCB      0x62,0x63,0x64,0x40
000d9c  65666768          DCB      0x65,0x66,0x67,0x68
000da0  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000da4  6c403235          DCB      0x6c,0x40,0x32,0x35
000da8  40202020          DCB      0x40,0x20,0x20,0x20
000dac  20202020          DCB      0x20,0x20,0x20,0x20
000db0  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000e14  32364061          DCB      0x32,0x36,0x40,0x61
000e18  62636440          DCB      0x62,0x63,0x64,0x40
000e1c  65666768          DCB      0x65,0x66,0x67,0x68
000e20  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000e24  6c403236          DCB      0x6c,0x40,0x32,0x36
000e28  40202020          DCB      0x40,0x20,0x20,0x20
000e2c  20202020          DCB      0x20,0x20,0x20,0x20
000e30  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000e94  32374061          DCB      0x32,0x37,0x40,0x61
000e98  62636440          DCB      0x62,0x63,0x64,0x40
000e9c  65666768          DCB      0x65,0x66,0x67,0x68
000ea0  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000ea4  6c403237          DCB      0x6c,0x40,0x32,0x37
000ea8  40202020          DCB      0x40,0x20,0x20,0x20
000eac  20202020          DCB      0x20,0x20,0x20,0x20
000eb0  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000f14  32384061          DCB      0x32,0x38,0x40,0x61
000f18  62636440          DCB      0x62,0x63,0x64,0x40
000f1c  65666768          DCB      0x65,0x66,0x67,0x68
000f20  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000f24  6c403238          DCB      0x6c,0x40,0x32,0x38
000f28  40202020          DCB      0x40,0x20,0x20,0x20
000f2c  20202020          DCB      0x20,0x20,0x20,0x20
000f30  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
000f94  32394061          DCB      0x32,0x39,0x40,0x61
000f98  62636440          DCB      0x62,0x63,0x64,0x40
000f9c  65666768          DCB      0x65,0x66,0x67,0x68
000fa0  40696a6b          DCB      0x40,0x69,0x6a,0x6b
000fa4  6c403239          DCB      0x6c,0x40,0x32,0x39
000fa8  40202020          DCB      0x40,0x20,0x20,0x20
000fac  20202020          DCB      0x20,0x20,0x20,0x20
000fb0  20000000          DCB      0x20,0x00,0x00,0x00
                          %        96
001014  33304061          DCB      0x33,0x30,0x40,0x61
001018  62636440          DCB      0x62,0x63,0x64,0x40
00101c  65666768          DCB      0x65,0x66,0x67,0x68
001020  40696a6b          DCB      0x40,0x69,0x6a,0x6b
001024  6c403330          DCB      0x6c,0x40,0x33,0x30
001028  40202020          DCB      0x40,0x20,0x20,0x20
00102c  20202020          DCB      0x20,0x20,0x20,0x20
001030  20000000          DCB      0x20,0x00,0x00,0x00
                          %        4448

                          AREA ||area_number.27||, DATA, ALIGN=0

                          EXPORTAS ||area_number.27||, ||.data||
                  snmp_web_passw
                          DCDU     0x00000000

                          AREA ||area_number.28||, DATA, ALIGN=1

                          EXPORTAS ||area_number.28||, ||.data||
                  snmp_sernum_lsb
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.29||, DATA, ALIGN=1

                          EXPORTAS ||area_number.29||, ||.data||
                  snmp_sernum_msb
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.30||, DATA, ALIGN=1

                          EXPORTAS ||area_number.30||, ||.data||
                  snmp_makb_number
                          %        8

                          AREA ||area_number.31||, DATA, ALIGN=1

                          EXPORTAS ||area_number.31||, ||.data||
                  snmp_bat_part_voltage
                          DCDU     0x00000000

                          AREA ||area_number.32||, DATA, ALIGN=1

                          EXPORTAS ||area_number.32||, ||.data||
                  snmp_bat_flag
                          DCDU     0x00000000

                          AREA ||area_number.33||, DATA, ALIGN=1

                          EXPORTAS ||area_number.33||, ||.data||
                  snmp_bat_flag_puts
                          DCDU     0x00000000

                          AREA ||area_number.34||, DATA, ALIGN=1

                          EXPORTAS ||area_number.34||, ||.data||
                  snmp_spc_stat
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.35||, DATA, ALIGN=1

                          EXPORTAS ||area_number.35||, ||.data||
                  snmp_main_bps
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.36||, DATA, ALIGN=1

                          EXPORTAS ||area_number.36||, ||.data||
                  snmp_max_current_koef
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.37||, DATA, ALIGN=1

                          EXPORTAS ||area_number.37||, ||.data||
                  snmp_up_charge_koef
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.38||, DATA, ALIGN=0

                          EXPORTAS ||area_number.38||, ||.data||
                  snmp_warm_stat
000000  00                DCB      0x00

                          AREA ||area_number.39||, DATA, ALIGN=0

                          EXPORTAS ||area_number.39||, ||.data||
                  enmv_on
000000  00                DCB      0x00

                          AREA ||area_number.40||, DATA, ALIGN=0

                          EXPORTAS ||area_number.40||, ||.data||
                  enmv_data_pred
                          %        8

                          AREA ||area_number.41||, DATA, ALIGN=0

                          EXPORTAS ||area_number.41||, ||.data||
                  enmv_data
                          %        8

;*** Start embedded assembler ***

#line 1 "snmp_data_file.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___16_snmp_data_file_c_snmp_log____REV16|
#line 112 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___16_snmp_data_file_c_snmp_log____REV16| PROC
#line 113

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___16_snmp_data_file_c_snmp_log____REVSH|
#line 130
|__asm___16_snmp_data_file_c_snmp_log____REVSH| PROC
#line 131

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
