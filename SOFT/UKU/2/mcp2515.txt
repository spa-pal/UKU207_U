; generated by ARM C/C++ Compiler, 4.1 [Build 644]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\EXE\mcp2515.o --asm_dir=.\ --list_dir=.\ --depend=.\EXE\mcp2515.d --feedback=.\EXE\UKU_220_IPS_TERMOKOMPENSAT.fed --cpu=Cortex-M3 --apcs=interwork -O1 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx -D__MICROLIB -DUKU_220_IPS_TERMOKOMPENSAT -DUKU2071x -DUKU_ZVU --omf_browse=.\EXE\mcp2515.crf mcp2515.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  mcp2515_reset PROC
;;;14     //-----------------------------------------------
;;;15     void mcp2515_reset(void)
000000  b510              PUSH     {r4,lr}
;;;16     {
;;;17     spi1_config_mcp2515();
000002  f7fffffe          BL       spi1_config_mcp2515
;;;18     MCP2515_CS_ON
000006  4cf1              LDR      r4,|L1.972|
000008  6820              LDR      r0,[r4,#0]
00000a  f0400002          ORR      r0,r0,#2
00000e  6020              STR      r0,[r4,#0]
000010  69e0              LDR      r0,[r4,#0x1c]
000012  f0400002          ORR      r0,r0,#2
000016  61e0              STR      r0,[r4,#0x1c]
;;;19     spi1(0xc0);
000018  f04f00c0          MOV      r0,#0xc0
00001c  f7fffffe          BL       spi1
;;;20     MCP2515_CS_OFF
000020  6820              LDR      r0,[r4,#0]
000022  f0400002          ORR      r0,r0,#2
000026  6020              STR      r0,[r4,#0]
000028  69a0              LDR      r0,[r4,#0x18]
00002a  f0400002          ORR      r0,r0,#2
00002e  61a0              STR      r0,[r4,#0x18]
;;;21     
;;;22     }
000030  bd10              POP      {r4,pc}
;;;23     
                          ENDP

                  mcp2515_write PROC
;;;24     //-----------------------------------------------
;;;25     char mcp2515_write(char addr,char in)
000032  b570              PUSH     {r4-r6,lr}
;;;26     {           
000034  4606              MOV      r6,r0
000036  460d              MOV      r5,r1
;;;27     char temp;
;;;28     spi1_config_mcp2515();       
000038  f7fffffe          BL       spi1_config_mcp2515
;;;29     MCP2515_CS_ON
00003c  4ce3              LDR      r4,|L1.972|
00003e  6820              LDR      r0,[r4,#0]
000040  f0400202          ORR      r2,r0,#2
000044  6022              STR      r2,[r4,#0]
000046  69e0              LDR      r0,[r4,#0x1c]
000048  f0400002          ORR      r0,r0,#2
00004c  61e0              STR      r0,[r4,#0x1c]
;;;30     spi1(0x02);
00004e  f04f0002          MOV      r0,#2
000052  f7fffffe          BL       spi1
;;;31     spi1(addr);
000056  4630              MOV      r0,r6
000058  f7fffffe          BL       spi1
;;;32     spi1(in);
00005c  4628              MOV      r0,r5
00005e  f7fffffe          BL       spi1
;;;33     MCP2515_CS_OFF
000062  6820              LDR      r0,[r4,#0]
000064  f0400002          ORR      r0,r0,#2
000068  6020              STR      r0,[r4,#0]
00006a  69a0              LDR      r0,[r4,#0x18]
00006c  f0400002          ORR      r0,r0,#2
000070  61a0              STR      r0,[r4,#0x18]
;;;34     return temp;                
000072  4628              MOV      r0,r5
;;;35     }
000074  bd70              POP      {r4-r6,pc}
;;;36     
                          ENDP

                  mcp2515_read PROC
;;;37     //-----------------------------------------------
;;;38     char mcp2515_read(char addr)
000076  b570              PUSH     {r4-r6,lr}
;;;39     {           
000078  4605              MOV      r5,r0
;;;40     char temp;
;;;41     
;;;42     spi1_config_mcp2515();       
00007a  f7fffffe          BL       spi1_config_mcp2515
;;;43     MCP2515_CS_ON
00007e  4cd3              LDR      r4,|L1.972|
000080  6820              LDR      r0,[r4,#0]
000082  f0400002          ORR      r0,r0,#2
000086  6020              STR      r0,[r4,#0]
000088  69e0              LDR      r0,[r4,#0x1c]
00008a  f0400002          ORR      r0,r0,#2
00008e  61e0              STR      r0,[r4,#0x1c]
;;;44     delay_us(10);
000090  f04f0178          MOV      r1,#0x78
                  |L1.148|
000094  f1a10101          SUB      r1,r1,#1
000098  2900              CMP      r1,#0
00009a  d1fb              BNE      |L1.148|
;;;45     spi1(0x03);
00009c  f04f0003          MOV      r0,#3
0000a0  f7fffffe          BL       spi1
;;;46     spi1(addr);
0000a4  4628              MOV      r0,r5
0000a6  f7fffffe          BL       spi1
;;;47     temp=spi1(0x55);
0000aa  2055              MOVS     r0,#0x55
0000ac  f7fffffe          BL       spi1
;;;48     MCP2515_CS_OFF   
0000b0  6821              LDR      r1,[r4,#0]
0000b2  f0410102          ORR      r1,r1,#2
0000b6  6021              STR      r1,[r4,#0]
0000b8  69a1              LDR      r1,[r4,#0x18]
0000ba  f0410102          ORR      r1,r1,#2
0000be  61a1              STR      r1,[r4,#0x18]
;;;49     return temp;                
;;;50     }  
0000c0  bd70              POP      {r4-r6,pc}
;;;51     
                          ENDP

                  mcp2515_bit_modify PROC
;;;52     //-----------------------------------------------
;;;53     void mcp2515_bit_modify(char addr,char mask,char data)
0000c2  e92d41f0          PUSH     {r4-r8,lr}
;;;54     {           
0000c6  4607              MOV      r7,r0
0000c8  460d              MOV      r5,r1
0000ca  4616              MOV      r6,r2
;;;55     spi1_config_mcp2515();       
0000cc  f7fffffe          BL       spi1_config_mcp2515
;;;56     MCP2515_CS_ON
0000d0  4cbe              LDR      r4,|L1.972|
0000d2  6820              LDR      r0,[r4,#0]
0000d4  f0400002          ORR      r0,r0,#2
0000d8  6020              STR      r0,[r4,#0]
0000da  69e0              LDR      r0,[r4,#0x1c]
0000dc  f0400002          ORR      r0,r0,#2
0000e0  61e0              STR      r0,[r4,#0x1c]
;;;57     spi1(0x05);
0000e2  f04f0005          MOV      r0,#5
0000e6  f7fffffe          BL       spi1
;;;58     spi1(addr);
0000ea  4638              MOV      r0,r7
0000ec  f7fffffe          BL       spi1
;;;59     spi1(mask);
0000f0  4628              MOV      r0,r5
0000f2  f7fffffe          BL       spi1
;;;60     spi1(data);
0000f6  4630              MOV      r0,r6
0000f8  f7fffffe          BL       spi1
;;;61     MCP2515_CS_OFF
0000fc  6820              LDR      r0,[r4,#0]
0000fe  f0400002          ORR      r0,r0,#2
000102  6020              STR      r0,[r4,#0]
000104  69a0              LDR      r0,[r4,#0x18]
000106  f0400002          ORR      r0,r0,#2
00010a  61a0              STR      r0,[r4,#0x18]
;;;62     } 
00010c  e8bd81f0          POP      {r4-r8,pc}
;;;63     
                          ENDP

                  mcp2515_read_status PROC
;;;64     //-----------------------------------------------
;;;65     char mcp2515_read_status(void)
000110  b510              PUSH     {r4,lr}
;;;66     {           
;;;67     char temp;
;;;68     //#asm("cli")
;;;69     spi1_config_mcp2515();       
000112  f7fffffe          BL       spi1_config_mcp2515
;;;70     MCP2515_CS_ON
000116  4cad              LDR      r4,|L1.972|
000118  6820              LDR      r0,[r4,#0]
00011a  f0400002          ORR      r0,r0,#2
00011e  6020              STR      r0,[r4,#0]
000120  69e0              LDR      r0,[r4,#0x1c]
000122  f0400002          ORR      r0,r0,#2
000126  61e0              STR      r0,[r4,#0x1c]
;;;71     delay_us(1);
000128  f04f000c          MOV      r0,#0xc
                  |L1.300|
00012c  f1a00001          SUB      r0,r0,#1
000130  2800              CMP      r0,#0
000132  d1fb              BNE      |L1.300|
;;;72     spi1(0xa0);
000134  f04f00a0          MOV      r0,#0xa0
000138  f7fffffe          BL       spi1
;;;73     temp=spi1(0x55);
00013c  2055              MOVS     r0,#0x55
00013e  f7fffffe          BL       spi1
;;;74     MCP2515_CS_OFF
000142  6821              LDR      r1,[r4,#0]
000144  f0410102          ORR      r1,r1,#2
000148  6021              STR      r1,[r4,#0]
00014a  69a1              LDR      r1,[r4,#0x18]
00014c  f0410102          ORR      r1,r1,#2
000150  61a1              STR      r1,[r4,#0x18]
;;;75     //#asm("sei")    
;;;76     return temp;                
;;;77     }
000152  bd10              POP      {r4,pc}
;;;78     
                          ENDP

                  mcp2515_rts PROC
;;;79     //-----------------------------------------------
;;;80     void mcp2515_rts(char in)
000154  b570              PUSH     {r4-r6,lr}
;;;81     {
000156  4604              MOV      r4,r0
;;;82     //#asm("cli")
;;;83     spi1_config_mcp2515();       
000158  f7fffffe          BL       spi1_config_mcp2515
;;;84     MCP2515_CS_ON
00015c  4d9b              LDR      r5,|L1.972|
00015e  6828              LDR      r0,[r5,#0]
000160  f0400002          ORR      r0,r0,#2
000164  6028              STR      r0,[r5,#0]
000166  69e8              LDR      r0,[r5,#0x1c]
000168  f0400002          ORR      r0,r0,#2
00016c  61e8              STR      r0,[r5,#0x1c]
;;;85     if(in==0) in=0x81;
00016e  b124              CBZ      r4,|L1.378|
;;;86     else if(in==1) in=0x82;
000170  2c01              CMP      r4,#1
000172  d005              BEQ      |L1.384|
;;;87     else if(in==2) in=0x84;
000174  2c02              CMP      r4,#2
000176  d006              BEQ      |L1.390|
000178  e007              B        |L1.394|
                  |L1.378|
00017a  f04f0481          MOV      r4,#0x81              ;85
00017e  e004              B        |L1.394|
                  |L1.384|
000180  f04f0482          MOV      r4,#0x82              ;86
000184  e001              B        |L1.394|
                  |L1.390|
000186  f04f0484          MOV      r4,#0x84
                  |L1.394|
;;;88     spi1(in);
00018a  4620              MOV      r0,r4
00018c  f7fffffe          BL       spi1
;;;89     MCP2515_CS_OFF
000190  6828              LDR      r0,[r5,#0]
000192  f0400002          ORR      r0,r0,#2
000196  6028              STR      r0,[r5,#0]
000198  69a8              LDR      r0,[r5,#0x18]
00019a  f0400002          ORR      r0,r0,#2
00019e  61a8              STR      r0,[r5,#0x18]
;;;90     //#asm("sei")                    
;;;91     }
0001a0  bd70              POP      {r4-r6,pc}
;;;92     
                          ENDP

                  can_mcp2515_init PROC
;;;93     //-----------------------------------------------
;;;94     void can_mcp2515_init(void)
0001a2  b510              PUSH     {r4,lr}
;;;95     {
;;;96     char spi_temp;                 
;;;97     
;;;98     mcp2515_reset();
0001a4  f7fffffe          BL       mcp2515_reset
;;;99     spi_temp=mcp2515_read(CANSTAT);
0001a8  200e              MOVS     r0,#0xe
0001aa  f7fffffe          BL       mcp2515_read
;;;100    if((spi_temp&0xe0)!=0x80)
0001ae  2104              MOVS     r1,#4
0001b0  ebb11f50          CMP      r1,r0,LSR #5
0001b4  d004              BEQ      |L1.448|
;;;101    	{
;;;102    	mcp2515_bit_modify(CANCTRL,0xe0,0x80);
0001b6  2280              MOVS     r2,#0x80
0001b8  21e0              MOVS     r1,#0xe0
0001ba  200f              MOVS     r0,#0xf
0001bc  f7fffffe          BL       mcp2515_bit_modify
                  |L1.448|
;;;103    	}
;;;104    delay_us(10);		
0001c0  f04f0078          MOV      r0,#0x78
                  |L1.452|
0001c4  f1a00001          SUB      r0,r0,#1
0001c8  2800              CMP      r0,#0
0001ca  d1fb              BNE      |L1.452|
;;;105    mcp2515_write(CNF1,CNF1_init);
0001cc  f04f01c3          MOV      r1,#0xc3
0001d0  f04f002a          MOV      r0,#0x2a
0001d4  f7fffffe          BL       mcp2515_write
;;;106    mcp2515_write(CNF2,CNF2_init);
0001d8  21fe              MOVS     r1,#0xfe
0001da  2029              MOVS     r0,#0x29
0001dc  f7fffffe          BL       mcp2515_write
;;;107    mcp2515_write(CNF3,CNF3_init);
0001e0  2103              MOVS     r1,#3
0001e2  2028              MOVS     r0,#0x28
0001e4  f7fffffe          BL       mcp2515_write
;;;108    
;;;109    mcp2515_write(RXB0CTRL,0x20/*0b00100000*/);
0001e8  2120              MOVS     r1,#0x20
0001ea  2060              MOVS     r0,#0x60
0001ec  f7fffffe          BL       mcp2515_write
;;;110    mcp2515_write(RXB1CTRL,0x20/*0b00100000*/);
0001f0  2120              MOVS     r1,#0x20
0001f2  2070              MOVS     r0,#0x70
0001f4  f7fffffe          BL       mcp2515_write
;;;111    
;;;112    delay_ms(10);
0001f8  4875              LDR      r0,|L1.976|
                  |L1.506|
0001fa  f1a00001          SUB      r0,r0,#1
0001fe  2800              CMP      r0,#0
000200  d1fb              BNE      |L1.506|
;;;113    
;;;114    mcp2515_write(RXM0SIDH, 0xFF); 
000202  f04f01ff          MOV      r1,#0xff
000206  f04f0020          MOV      r0,#0x20
00020a  f7fffffe          BL       mcp2515_write
;;;115    mcp2515_write(RXM0SIDL, 0xFF); 
00020e  21ff              MOVS     r1,#0xff
000210  2021              MOVS     r0,#0x21
000212  f7fffffe          BL       mcp2515_write
;;;116    mcp2515_write(RXF0SIDH, 0xFF); 
000216  21ff              MOVS     r1,#0xff
000218  2000              MOVS     r0,#0
00021a  f7fffffe          BL       mcp2515_write
;;;117    mcp2515_write(RXF0SIDL, 0xFF); 
00021e  21ff              MOVS     r1,#0xff
000220  2001              MOVS     r0,#1
000222  f7fffffe          BL       mcp2515_write
;;;118    mcp2515_write(RXF1SIDH, 0xFF);
000226  21ff              MOVS     r1,#0xff
000228  2004              MOVS     r0,#4
00022a  f7fffffe          BL       mcp2515_write
;;;119    mcp2515_write(RXF1SIDL, 0xFF); 
00022e  21ff              MOVS     r1,#0xff
000230  2005              MOVS     r0,#5
000232  f7fffffe          BL       mcp2515_write
;;;120    
;;;121    mcp2515_write(RXM1SIDH, 0xff); 
000236  21ff              MOVS     r1,#0xff
000238  2024              MOVS     r0,#0x24
00023a  f7fffffe          BL       mcp2515_write
;;;122    mcp2515_write(RXM1SIDL, 0xe0); 
00023e  21e0              MOVS     r1,#0xe0
000240  2025              MOVS     r0,#0x25
000242  f7fffffe          BL       mcp2515_write
;;;123    
;;;124    mcp2515_write(RXF2SIDH, 0x31); 
000246  2131              MOVS     r1,#0x31
000248  2008              MOVS     r0,#8
00024a  f7fffffe          BL       mcp2515_write
;;;125    mcp2515_write(RXF2SIDL, 0xc0); 
00024e  21c0              MOVS     r1,#0xc0
000250  2009              MOVS     r0,#9
000252  f7fffffe          BL       mcp2515_write
;;;126    
;;;127    mcp2515_write(RXF3SIDH, 0x00); 
000256  2100              MOVS     r1,#0
000258  2010              MOVS     r0,#0x10
00025a  f7fffffe          BL       mcp2515_write
;;;128    mcp2515_write(RXF3SIDL, 0x00); 
00025e  2100              MOVS     r1,#0
000260  2011              MOVS     r0,#0x11
000262  f7fffffe          BL       mcp2515_write
;;;129    
;;;130    mcp2515_write(RXF4SIDH, 0x00); 
000266  2100              MOVS     r1,#0
000268  2014              MOVS     r0,#0x14
00026a  f7fffffe          BL       mcp2515_write
;;;131    mcp2515_write(RXF4SIDL, 0x00); 
00026e  2100              MOVS     r1,#0
000270  2015              MOVS     r0,#0x15
000272  f7fffffe          BL       mcp2515_write
;;;132    
;;;133    mcp2515_write(RXF5SIDH, 0x00); 
000276  2100              MOVS     r1,#0
000278  2018              MOVS     r0,#0x18
00027a  f7fffffe          BL       mcp2515_write
;;;134    mcp2515_write(RXF5SIDL, 0x00); 
00027e  2100              MOVS     r1,#0
000280  2019              MOVS     r0,#0x19
000282  f7fffffe          BL       mcp2515_write
;;;135    
;;;136    mcp2515_write(TXB2SIDH, 0x13); 
000286  2113              MOVS     r1,#0x13
000288  2051              MOVS     r0,#0x51
00028a  f7fffffe          BL       mcp2515_write
;;;137    mcp2515_write(TXB2SIDL, 0xc0); 
00028e  21c0              MOVS     r1,#0xc0
000290  2052              MOVS     r0,#0x52
000292  f7fffffe          BL       mcp2515_write
;;;138    
;;;139    mcp2515_write(TXB1SIDH, 0x13); 
000296  2113              MOVS     r1,#0x13
000298  2041              MOVS     r0,#0x41
00029a  f7fffffe          BL       mcp2515_write
;;;140    mcp2515_write(TXB1SIDL, 0xc0); 
00029e  21c0              MOVS     r1,#0xc0
0002a0  2042              MOVS     r0,#0x42
0002a2  f7fffffe          BL       mcp2515_write
;;;141    
;;;142    mcp2515_write(TXB0SIDH, 0x13); 
0002a6  2113              MOVS     r1,#0x13
0002a8  2031              MOVS     r0,#0x31
0002aa  f7fffffe          BL       mcp2515_write
;;;143    mcp2515_write(TXB0SIDL, 0xc0); 
0002ae  21c0              MOVS     r1,#0xc0
0002b0  2032              MOVS     r0,#0x32
0002b2  f7fffffe          BL       mcp2515_write
;;;144    
;;;145    
;;;146    
;;;147    mcp2515_bit_modify(CANCTRL,0xe7,0x05/*0b00000101*/);
0002b6  2205              MOVS     r2,#5
0002b8  21e7              MOVS     r1,#0xe7
0002ba  200f              MOVS     r0,#0xf
0002bc  f7fffffe          BL       mcp2515_bit_modify
;;;148    
;;;149    mcp2515_write(CANINTE,0x06/*0b00000110*/);
0002c0  2106              MOVS     r1,#6
0002c2  202b              MOVS     r0,#0x2b
0002c4  f7fffffe          BL       mcp2515_write
;;;150    delay_ms(100);
0002c8  4842              LDR      r0,|L1.980|
                  |L1.714|
0002ca  f1a00001          SUB      r0,r0,#1
0002ce  2800              CMP      r0,#0
0002d0  d1fb              BNE      |L1.714|
;;;151    mcp2515_write(BFPCTRL,0x00/*0b00000000*/);  
0002d2  4601              MOV      r1,r0
0002d4  e8bd4010          POP      {r4,lr}
0002d8  f04f000c          MOV      r0,#0xc
0002dc  e7fe              B        mcp2515_write
;;;152    
;;;153    }
;;;154    
                          ENDP

                  mcp2515_transmit PROC
;;;155    //-----------------------------------------------
;;;156    void mcp2515_transmit(char data0,char data1,char data2,char data3,char data4,char data5,char data6,char data7)
0002de  e92d47f0          PUSH     {r4-r10,lr}
;;;157    {
0002e2  e9ddc809          LDRD     r12,r8,[sp,#0x24]
0002e6  f8dd902c          LDR      r9,[sp,#0x2c]
0002ea  9f08              LDR      r7,[sp,#0x20]
;;;158    if(/*(mcp2515_buff_wr_ptr<0)||*/(mcp2515_buff_wr_ptr>7))mcp2515_buff_wr_ptr=0;
0002ec  4d3a              LDR      r5,|L1.984|
0002ee  2600              MOVS     r6,#0
0002f0  78ec              LDRB     r4,[r5,#3]  ; mcp2515_buff_wr_ptr
0002f2  2c07              CMP      r4,#7
0002f4  d900              BLS      |L1.760|
0002f6  70ee              STRB     r6,[r5,#3]
                  |L1.760|
;;;159    
;;;160    mcp2515_out_buff[0][mcp2515_buff_wr_ptr]=data0;
0002f8  f8dfa0e0          LDR      r10,|L1.988|
0002fc  78ec              LDRB     r4,[r5,#3]  ; mcp2515_buff_wr_ptr
0002fe  f80a0004          STRB     r0,[r10,r4]
;;;161    mcp2515_out_buff[1][mcp2515_buff_wr_ptr]=data1;
000302  eb0a0004          ADD      r0,r10,r4
000306  7201              STRB     r1,[r0,#8]
;;;162    mcp2515_out_buff[2][mcp2515_buff_wr_ptr]=data2;
000308  7402              STRB     r2,[r0,#0x10]
;;;163    mcp2515_out_buff[3][mcp2515_buff_wr_ptr]=data3;
00030a  7603              STRB     r3,[r0,#0x18]
;;;164    mcp2515_out_buff[4][mcp2515_buff_wr_ptr]=data4;
00030c  f8807020          STRB     r7,[r0,#0x20]
;;;165    mcp2515_out_buff[5][mcp2515_buff_wr_ptr]=data5;
000310  f880c028          STRB     r12,[r0,#0x28]
;;;166    mcp2515_out_buff[6][mcp2515_buff_wr_ptr]=data6;
000314  f8808030          STRB     r8,[r0,#0x30]
;;;167    mcp2515_out_buff[7][mcp2515_buff_wr_ptr]=data7;
000318  f8809038          STRB     r9,[r0,#0x38]
;;;168    
;;;169    mcp2515_buff_wr_ptr++;
00031c  f1040401          ADD      r4,r4,#1
000320  b2e0              UXTB     r0,r4
000322  70e8              STRB     r0,[r5,#3]
;;;170    if(mcp2515_buff_wr_ptr>7)mcp2515_buff_wr_ptr=0;
000324  2807              CMP      r0,#7
000326  d900              BLS      |L1.810|
000328  70ee              STRB     r6,[r5,#3]
                  |L1.810|
;;;171    } 
00032a  e8bd87f0          POP      {r4-r10,pc}
;;;172    
                          ENDP

                  can_mcp2515_hndl PROC
;;;173    //-----------------------------------------------
;;;174    void can_mcp2515_hndl(void)
00032e  b570              PUSH     {r4-r6,lr}
;;;175    {
;;;176    unsigned char /*temp,*/j,temp_index,c_temp;
;;;177    static char ch_cnt;
;;;178    //#asm("cli")
;;;179    mcp2515_can_st=mcp2515_read_status();
000330  f7fffffe          BL       mcp2515_read_status
000334  4d28              LDR      r5,|L1.984|
000336  7028              STRB     r0,[r5,#0]
;;;180    mcp2515_can_st_old=mcp2515_can_st;
000338  7068              STRB     r0,[r5,#1]
;;;181    
;;;182    
;;;183    if(mcp2515_can_st&0x02/*0b00000010*/)
00033a  0781              LSLS     r1,r0,#30
00033c  d516              BPL      |L1.876|
;;;184    	{
;;;185    	
;;;186    	for(j=0;j<8;j++)
00033e  f04f0400          MOV      r4,#0
;;;187    		{
;;;188    		/*MCP2515_*/RXBUFF[j]=mcp2515_read(RXB1D0+j);
000342  4e27              LDR      r6,|L1.992|
                  |L1.836|
000344  f1040076          ADD      r0,r4,#0x76
000348  b2c0              UXTB     r0,r0
00034a  f7fffffe          BL       mcp2515_read
00034e  5530              STRB     r0,[r6,r4]
000350  f1040401          ADD      r4,r4,#1              ;186
000354  b2e4              UXTB     r4,r4                 ;186
000356  2c08              CMP      r4,#8                 ;186
000358  d3f4              BCC      |L1.836|
;;;189    		}
;;;190    	
;;;191    	mcp2515_bit_modify(CANINTF,0x02 /*0b00000010*/ ,0x00);
00035a  2200              MOVS     r2,#0
00035c  2102              MOVS     r1,#2
00035e  202c              MOVS     r0,#0x2c
000360  f7fffffe          BL       mcp2515_bit_modify
;;;192         bMCP2515_IN=1;
000364  f04f0001          MOV      r0,#1
000368  70a8              STRB     r0,[r5,#2]
                  |L1.874|
;;;193    	}
;;;194               
;;;195               
;;;196    else if(/*(can_st1&0b10101000)&&*/(!(mcp2515_can_st&0x54/*0b01010100*/)))
;;;197    	{
;;;198    	char n;
;;;199         mcp2515_bit_modify(CANINTF,0x1c/*0b00011100*/,0x00);
;;;200         
;;;201         if(mcp2515_buff_rd_ptr!=mcp2515_buff_wr_ptr)
;;;202         	{
;;;203    //		can_plazma++;
;;;204             	for(n=0;n<8;n++)
;;;205    			{ 
;;;206    			mcp2515_write(TXB0D0+n,mcp2515_out_buff[n][mcp2515_buff_rd_ptr]);
;;;207    			} 
;;;208        		mcp2515_write(TXB0DLC,8);
;;;209        		mcp2515_rts(0); 
;;;210        		
;;;211        		mcp2515_buff_rd_ptr++;
;;;212        		if(mcp2515_buff_rd_ptr>7)mcp2515_buff_rd_ptr=0;
;;;213        		} 
;;;214     	} 	
;;;215    		
;;;216    //#asm("sei") 
;;;217    }
00036a  bd70              POP      {r4-r6,pc}
                  |L1.876|
00036c  f0100f54          TST      r0,#0x54              ;196
000370  d1fb              BNE      |L1.874|
000372  2200              MOVS     r2,#0                 ;199
000374  211c              MOVS     r1,#0x1c              ;199
000376  202c              MOVS     r0,#0x2c              ;199
000378  f7fffffe          BL       mcp2515_bit_modify
00037c  7928              LDRB     r0,[r5,#4]            ;201  ; mcp2515_buff_rd_ptr
00037e  78e9              LDRB     r1,[r5,#3]            ;201  ; mcp2515_buff_wr_ptr
000380  4288              CMP      r0,r1                 ;201
000382  d0f2              BEQ      |L1.874|
000384  f04f0400          MOV      r4,#0                 ;204
000388  4e14              LDR      r6,|L1.988|
                  |L1.906|
00038a  7929              LDRB     r1,[r5,#4]            ;206  ; mcp2515_buff_rd_ptr
00038c  eb0600c4          ADD      r0,r6,r4,LSL #3       ;206
000390  5c41              LDRB     r1,[r0,r1]            ;206
000392  f1040036          ADD      r0,r4,#0x36           ;206
000396  b2c0              UXTB     r0,r0                 ;206
000398  f7fffffe          BL       mcp2515_write
00039c  f1040401          ADD      r4,r4,#1              ;204
0003a0  b2e4              UXTB     r4,r4                 ;204
0003a2  2c08              CMP      r4,#8                 ;204
0003a4  d3f1              BCC      |L1.906|
0003a6  2108              MOVS     r1,#8                 ;208
0003a8  2035              MOVS     r0,#0x35              ;208
0003aa  f7fffffe          BL       mcp2515_write
0003ae  2000              MOVS     r0,#0                 ;209
0003b0  f7fffffe          BL       mcp2515_rts
0003b4  7928              LDRB     r0,[r5,#4]            ;211  ; mcp2515_buff_rd_ptr
0003b6  f1000001          ADD      r0,r0,#1              ;211
0003ba  b2c0              UXTB     r0,r0                 ;211
0003bc  7128              STRB     r0,[r5,#4]            ;211
0003be  2807              CMP      r0,#7                 ;212
0003c0  d9d3              BLS      |L1.874|
0003c2  f04f0000          MOV      r0,#0                 ;212
0003c6  7128              STRB     r0,[r5,#4]            ;212
0003c8  bd70              POP      {r4-r6,pc}
;;;218    
                          ENDP

0003ca  0000              DCW      0x0000
                  |L1.972|
                          DCD      0x2009c000
                  |L1.976|
                          DCD      0x0001d4c0
                  |L1.980|
                          DCD      0x00124f80
                  |L1.984|
                          DCD      ||.data||
                  |L1.988|
                          DCD      ||area_number.4||
                  |L1.992|
                          DCD      RXBUFF

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  MCP2515_RXBUFF
                          %        40

                          AREA ||area_number.4||, DATA, NOINIT, ALIGN=0

                          EXPORTAS ||area_number.4||, ||.bss||
                  mcp2515_out_buff
                          %        64

                          AREA ||.data||, DATA, ALIGN=0

                  mcp2515_can_st
000000  00                DCB      0x00
                  mcp2515_can_st_old
000001  00                DCB      0x00
                  bMCP2515_IN
000002  00                DCB      0x00
                  mcp2515_buff_wr_ptr
000003  00                DCB      0x00
                  mcp2515_buff_rd_ptr
000004  00                DCB      0x00
