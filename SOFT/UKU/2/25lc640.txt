; generated by ARM C/C++ Compiler, 4.1 [Build 644]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\EXE\25lc640.o --asm_dir=.\ --list_dir=.\ --depend=.\EXE\25lc640.d --cpu=Cortex-M3 --apcs=interwork -O1 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx -D__MICROLIB -DUKU_220_IPS_TERMOKOMPENSAT -DUKU2071x -DUKU_ZVU --omf_browse=.\EXE\25lc640.crf 25lc640.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  spi1 PROC
;;;9      
;;;10     char spi1(char in)
000000  49ff              LDR      r1,|L1.1024|
;;;11     {
;;;12     
;;;13      
;;;14     
;;;15     LPC_SPI->SPDR=in;
000002  6088              STR      r0,[r1,#8]
                  |L1.4|
;;;16     while(!(LPC_SPI->SPSR&(1<<7)));
000004  6848              LDR      r0,[r1,#4]
000006  0600              LSLS     r0,r0,#24
000008  d5fc              BPL      |L1.4|
;;;17     return LPC_SPI->SPDR;
00000a  6888              LDR      r0,[r1,#8]
00000c  b2c0              UXTB     r0,r0
;;;18     
;;;19      
;;;20     
;;;21     }
00000e  4770              BX       lr
;;;22     
                          ENDP

                  spi1_config PROC
;;;26     //настройка SPI1
;;;27     void spi1_config(void)
000010  48fc              LDR      r0,|L1.1028|
;;;28     { 
;;;29     
;;;30     SET_REG( LPC_PINCON->PINSEL0, 3, 15*2, 2);
000012  6801              LDR      r1,[r0,#0]
000014  f0414140          ORR      r1,r1,#0xc0000000
000018  6001              STR      r1,[r0,#0]
;;;31     SET_REG( LPC_PINCON->PINSEL1, 0, (16-16)*2, 2);
00001a  6841              LDR      r1,[r0,#4]
00001c  f0210103          BIC      r1,r1,#3
000020  6041              STR      r1,[r0,#4]
;;;32     SET_REG( LPC_PINCON->PINSEL1, 3, (17-16)*2, 2);
000022  6841              LDR      r1,[r0,#4]
000024  f041010c          ORR      r1,r1,#0xc
000028  6041              STR      r1,[r0,#4]
;;;33     SET_REG( LPC_PINCON->PINSEL1, 3, (18-16)*2, 2); 
00002a  6841              LDR      r1,[r0,#4]
00002c  f0410130          ORR      r1,r1,#0x30
000030  6041              STR      r1,[r0,#4]
;;;34     /*
;;;35     S1SPCCR=100;
;;;36     S1SPCR=0x3f; */
;;;37     
;;;38     LPC_SPI->SPCCR=8;
000032  48f3              LDR      r0,|L1.1024|
000034  f04f0108          MOV      r1,#8
000038  60c1              STR      r1,[r0,#0xc]
;;;39     LPC_SPI->SPCR=0x20;
00003a  f04f0120          MOV      r1,#0x20
00003e  6001              STR      r1,[r0,#0]
;;;40     }
000040  4770              BX       lr
;;;41     
                          ENDP

                  spi1_config_mcp2515 PROC
;;;44     //настройка SPI1
;;;45     void spi1_config_mcp2515(void)
000042  48f0              LDR      r0,|L1.1028|
;;;46     { 
;;;47     
;;;48     SET_REG( LPC_PINCON->PINSEL0, 3, 15*2, 2);
000044  6801              LDR      r1,[r0,#0]
000046  f0414140          ORR      r1,r1,#0xc0000000
00004a  6001              STR      r1,[r0,#0]
;;;49     SET_REG( LPC_PINCON->PINSEL1, 0, (16-16)*2, 2);
00004c  6841              LDR      r1,[r0,#4]
00004e  f0210103          BIC      r1,r1,#3
000052  6041              STR      r1,[r0,#4]
;;;50     SET_REG( LPC_PINCON->PINSEL1, 3, (17-16)*2, 2);
000054  6841              LDR      r1,[r0,#4]
000056  f041010c          ORR      r1,r1,#0xc
00005a  6041              STR      r1,[r0,#4]
;;;51     SET_REG( LPC_PINCON->PINSEL1, 3, (18-16)*2, 2); 
00005c  6841              LDR      r1,[r0,#4]
00005e  f0410130          ORR      r1,r1,#0x30
000062  6041              STR      r1,[r0,#4]
;;;52     /*
;;;53     S1SPCCR=100;
;;;54     S1SPCR=0x3f; */
;;;55     
;;;56     LPC_SPI->SPCCR=32;
000064  48e6              LDR      r0,|L1.1024|
000066  f04f0120          MOV      r1,#0x20
00006a  60c1              STR      r1,[r0,#0xc]
;;;57     LPC_SPI->SPCR=0x38;
00006c  f04f0138          MOV      r1,#0x38
000070  6001              STR      r1,[r0,#0]
;;;58     }
000072  4770              BX       lr
;;;59     
                          ENDP

                  spi1_unconfig PROC
;;;62     //выключение SPI1
;;;63     void spi1_unconfig(void)
000074  48e3              LDR      r0,|L1.1028|
;;;64     { 
;;;65     
;;;66     SET_REG( LPC_PINCON->PINSEL0, 0, 15*2, 2);
000076  6801              LDR      r1,[r0,#0]
000078  f0214140          BIC      r1,r1,#0xc0000000
00007c  6001              STR      r1,[r0,#0]
;;;67     SET_REG( LPC_PINCON->PINSEL1, 0, (16-16)*2, 2);
00007e  6841              LDR      r1,[r0,#4]
000080  f0210103          BIC      r1,r1,#3
000084  6041              STR      r1,[r0,#4]
;;;68     SET_REG( LPC_PINCON->PINSEL1, 0, (17-16)*2, 2);
000086  6841              LDR      r1,[r0,#4]
000088  f021010c          BIC      r1,r1,#0xc
00008c  6041              STR      r1,[r0,#4]
;;;69     SET_REG( LPC_PINCON->PINSEL1, 0, (18-16)*2, 2);
00008e  6841              LDR      r1,[r0,#4]
000090  f0210130          BIC      r1,r1,#0x30
000094  6041              STR      r1,[r0,#4]
;;;70     
;;;71     LPC_SPI->SPCR=0x00;
000096  49da              LDR      r1,|L1.1024|
000098  f04f0000          MOV      r0,#0
00009c  6008              STR      r0,[r1,#0]
;;;72     }
00009e  4770              BX       lr
;;;73     
                          ENDP

                  lc640_wren PROC
;;;75     //Разрешение записи
;;;76     void lc640_wren(void)
0000a0  b500              PUSH     {lr}
;;;77     {
;;;78     
;;;79     spi1_config();
0000a2  f7fffffe          BL       spi1_config
;;;80     
;;;81     CS_ON
0000a6  4ad8              LDR      r2,|L1.1032|
0000a8  6810              LDR      r0,[r2,#0]
0000aa  f4401080          ORR      r0,r0,#0x100000
0000ae  6010              STR      r0,[r2,#0]
0000b0  69d0              LDR      r0,[r2,#0x1c]
0000b2  f4401080          ORR      r0,r0,#0x100000
0000b6  61d0              STR      r0,[r2,#0x1c]
;;;82     
;;;83     spi1(0x06); 
0000b8  f04f0006          MOV      r0,#6
0000bc  f7fffffe          BL       spi1
;;;84     
;;;85     CS_OFF
0000c0  6810              LDR      r0,[r2,#0]
0000c2  f4401080          ORR      r0,r0,#0x100000
0000c6  6010              STR      r0,[r2,#0]
0000c8  6990              LDR      r0,[r2,#0x18]
0000ca  f4401080          ORR      r0,r0,#0x100000
0000ce  6190              STR      r0,[r2,#0x18]
;;;86     
;;;87     spi1_unconfig();
0000d0  f85deb04          POP      {lr}
0000d4  e7fe              B        spi1_unconfig
;;;88     }
;;;89     
                          ENDP

                  lc640_rdsr PROC
;;;91     //Чтение из м-мы регистра состояния
;;;92     char lc640_rdsr(void)
0000d6  b500              PUSH     {lr}
;;;93     {
;;;94     char temp;
;;;95     
;;;96     spi1_config();
0000d8  f7fffffe          BL       spi1_config
;;;97     CS_ON
0000dc  4aca              LDR      r2,|L1.1032|
0000de  6810              LDR      r0,[r2,#0]
0000e0  f4401080          ORR      r0,r0,#0x100000
0000e4  6010              STR      r0,[r2,#0]
0000e6  69d0              LDR      r0,[r2,#0x1c]
0000e8  f4401080          ORR      r0,r0,#0x100000
0000ec  61d0              STR      r0,[r2,#0x1c]
;;;98     spi1(0x05);
0000ee  f04f0005          MOV      r0,#5
0000f2  f7fffffe          BL       spi1
;;;99     temp=spi1(0xff);
0000f6  20ff              MOVS     r0,#0xff
0000f8  f7fffffe          BL       spi1
0000fc  4603              MOV      r3,r0
;;;100    CS_OFF
0000fe  6811              LDR      r1,[r2,#0]
000100  f4411180          ORR      r1,r1,#0x100000
000104  6011              STR      r1,[r2,#0]
000106  6991              LDR      r1,[r2,#0x18]
000108  f4411180          ORR      r1,r1,#0x100000
00010c  6191              STR      r1,[r2,#0x18]
;;;101    spi1_unconfig();
00010e  f7fffffe          BL       spi1_unconfig
;;;102    return temp;
000112  4618              MOV      r0,r3
;;;103    }
000114  bd00              POP      {pc}
;;;104    
                          ENDP

                  lc640_read PROC
;;;106    //Чтение из м-мы байта по адр. ADR
;;;107    int lc640_read(int ADR)
000116  b501              PUSH     {r0,lr}
                  |L1.280|
;;;108    {
;;;109    int temp;
;;;110    temp=0;
;;;111    
;;;112    while(lc640_rdsr()&0x01)
000118  f7fffffe          BL       lc640_rdsr
00011c  07c0              LSLS     r0,r0,#31
00011e  d1fb              BNE      |L1.280|
;;;113    	{
;;;114    	}
;;;115    spi1_config();
000120  f7fffffe          BL       spi1_config
;;;116    CS_ON
000124  4ab8              LDR      r2,|L1.1032|
000126  6810              LDR      r0,[r2,#0]
000128  f4401080          ORR      r0,r0,#0x100000
00012c  6010              STR      r0,[r2,#0]
00012e  69d0              LDR      r0,[r2,#0x1c]
000130  f4401080          ORR      r0,r0,#0x100000
000134  61d0              STR      r0,[r2,#0x1c]
;;;117    CS_ON
000136  6810              LDR      r0,[r2,#0]
000138  f4401080          ORR      r0,r0,#0x100000
00013c  6010              STR      r0,[r2,#0]
00013e  69d0              LDR      r0,[r2,#0x1c]
000140  f4401080          ORR      r0,r0,#0x100000
000144  61d0              STR      r0,[r2,#0x1c]
;;;118    //temp_short[0]=PINSEL1;	
;;;119    //
;;;120    //IO0DIR|=1UL<<17;
;;;121    //IO0CLR|=1UL<<17;
;;;122    spi1(0x03);
000146  f04f0003          MOV      r0,#3
00014a  f7fffffe          BL       spi1
;;;123    temp=*(((char*)&ADR)+1);
00014e  f89d0001          LDRB     r0,[sp,#1]
;;;124    spi1(temp);
000152  f7fffffe          BL       spi1
;;;125    temp=*((char*)&ADR);
000156  f89d0000          LDRB     r0,[sp,#0]
;;;126    spi1(temp);
00015a  f7fffffe          BL       spi1
;;;127    temp=spi1(0xff);
00015e  20ff              MOVS     r0,#0xff
000160  f7fffffe          BL       spi1
000164  4603              MOV      r3,r0
;;;128    //IO0SET|=1UL<<17;
;;;129    CS_OFF
000166  6810              LDR      r0,[r2,#0]
000168  f4401080          ORR      r0,r0,#0x100000
00016c  6010              STR      r0,[r2,#0]
00016e  6990              LDR      r0,[r2,#0x18]
000170  f4401080          ORR      r0,r0,#0x100000
000174  6190              STR      r0,[r2,#0x18]
;;;130    CS_OFF
000176  6810              LDR      r0,[r2,#0]
000178  f4401080          ORR      r0,r0,#0x100000
00017c  6010              STR      r0,[r2,#0]
00017e  6990              LDR      r0,[r2,#0x18]
000180  f4401080          ORR      r0,r0,#0x100000
000184  6190              STR      r0,[r2,#0x18]
;;;131    spi1_unconfig();
000186  f7fffffe          BL       spi1_unconfig
;;;132    return temp;
00018a  4618              MOV      r0,r3
;;;133    
;;;134    }
00018c  bd08              POP      {r3,pc}
;;;135    
                          ENDP

                  lc640_read_int PROC
;;;137    //Чтение из м-мы слова по адр. ADR
;;;138    int lc640_read_int(int ADR)
00018e  b501              PUSH     {r0,lr}
                  |L1.400|
;;;139    {
;;;140    char temp;
;;;141    int temp_i;
;;;142    
;;;143    
;;;144    //LPC_GPIO0->FIODIR|=0x00000002;
;;;145    //LPC_GPIO0->FIOSET|=0x00000002;
;;;146    
;;;147    
;;;148    
;;;149    while(lc640_rdsr()&0x01)
000190  f7fffffe          BL       lc640_rdsr
000194  07c0              LSLS     r0,r0,#31
000196  d1fb              BNE      |L1.400|
;;;150    	{
;;;151    	}
;;;152    
;;;153    //lc640_rdsr();
;;;154    //IO0DIR_bit.P0_11=1;
;;;155    //IO0SET_bit.P0_11=1;
;;;156    spi1_config();
000198  f7fffffe          BL       spi1_config
;;;157    CS_ON
00019c  4a9a              LDR      r2,|L1.1032|
00019e  6810              LDR      r0,[r2,#0]
0001a0  f4401080          ORR      r0,r0,#0x100000
0001a4  6010              STR      r0,[r2,#0]
0001a6  69d0              LDR      r0,[r2,#0x1c]
0001a8  f4401080          ORR      r0,r0,#0x100000
0001ac  61d0              STR      r0,[r2,#0x1c]
;;;158    spi1(0x03);
0001ae  f04f0003          MOV      r0,#3
0001b2  f7fffffe          BL       spi1
;;;159    temp=*(((char*)&ADR)+1);
0001b6  f89d0001          LDRB     r0,[sp,#1]
;;;160    spi1(temp);
0001ba  f7fffffe          BL       spi1
;;;161    temp=*((char*)&ADR);
0001be  f89d0000          LDRB     r0,[sp,#0]
;;;162    spi1(temp);
0001c2  f7fffffe          BL       spi1
;;;163    temp=spi1(0xff);
0001c6  20ff              MOVS     r0,#0xff
0001c8  f7fffffe          BL       spi1
0001cc  4603              MOV      r3,r0
;;;164    temp_i=spi1(0xff);
0001ce  f04f00ff          MOV      r0,#0xff
0001d2  f7fffffe          BL       spi1
;;;165    temp_i<<=8;
0001d6  ea4f2000          LSL      r0,r0,#8
;;;166    temp_i+=temp;
0001da  4403              ADD      r3,r3,r0
;;;167    CS_OFF
0001dc  6810              LDR      r0,[r2,#0]
0001de  f4401080          ORR      r0,r0,#0x100000
0001e2  6010              STR      r0,[r2,#0]
0001e4  6990              LDR      r0,[r2,#0x18]
0001e6  f4401080          ORR      r0,r0,#0x100000
0001ea  6190              STR      r0,[r2,#0x18]
;;;168    CS_OFF
0001ec  6810              LDR      r0,[r2,#0]
0001ee  f4401080          ORR      r0,r0,#0x100000
0001f2  6010              STR      r0,[r2,#0]
0001f4  6990              LDR      r0,[r2,#0x18]
0001f6  f4401080          ORR      r0,r0,#0x100000
0001fa  6190              STR      r0,[r2,#0x18]
;;;169    spi1_unconfig();
0001fc  f7fffffe          BL       spi1_unconfig
;;;170    
;;;171    //LPC_GPIO0->FIOCLR|=0x00000002;
;;;172    return temp_i;
000200  4618              MOV      r0,r3
;;;173    }
000202  bd08              POP      {r3,pc}
;;;174    
                          ENDP

                  lc640_read_long PROC
;;;176    //Чтение из м-мы 4 байт по адр. ADR
;;;177    long lc640_read_long(int ADR)
000204  b531              PUSH     {r0,r4,r5,lr}
                  |L1.518|
;;;178    {
;;;179    char temp0,temp1,temp2;
;;;180    long temp_i;
;;;181    while(lc640_rdsr()&0x01)
000206  f7fffffe          BL       lc640_rdsr
00020a  07c0              LSLS     r0,r0,#31
00020c  d1fb              BNE      |L1.518|
;;;182    	{
;;;183    	}
;;;184    spi1_config();
00020e  f7fffffe          BL       spi1_config
;;;185    CS_ON
000212  4a7d              LDR      r2,|L1.1032|
000214  6810              LDR      r0,[r2,#0]
000216  f4401080          ORR      r0,r0,#0x100000
00021a  6010              STR      r0,[r2,#0]
00021c  69d0              LDR      r0,[r2,#0x1c]
00021e  f4401080          ORR      r0,r0,#0x100000
000222  61d0              STR      r0,[r2,#0x1c]
;;;186    spi1(0x03);
000224  f04f0003          MOV      r0,#3
000228  f7fffffe          BL       spi1
;;;187    temp0=*(((char*)&ADR)+1);
00022c  f89d0001          LDRB     r0,[sp,#1]
;;;188    spi1(temp0);
000230  f7fffffe          BL       spi1
;;;189    temp0=*((char*)&ADR);
000234  f89d0000          LDRB     r0,[sp,#0]
;;;190    spi1(temp0);
000238  f7fffffe          BL       spi1
;;;191    temp0=spi1(0xff);
00023c  20ff              MOVS     r0,#0xff
00023e  f7fffffe          BL       spi1
000242  4603              MOV      r3,r0
;;;192    temp1=spi1(0xff);
000244  f04f00ff          MOV      r0,#0xff
000248  f7fffffe          BL       spi1
00024c  4605              MOV      r5,r0
;;;193    temp2=spi1(0xff);
00024e  f04f00ff          MOV      r0,#0xff
000252  f7fffffe          BL       spi1
000256  4604              MOV      r4,r0
;;;194    temp_i=spi1(0xff);
000258  f04f00ff          MOV      r0,#0xff
00025c  f7fffffe          BL       spi1
;;;195    temp_i<<=8;
000260  ea4f2000          LSL      r0,r0,#8
;;;196    temp_i+=temp2;
000264  4420              ADD      r0,r0,r4
;;;197    temp_i<<=8;
000266  ea4f2100          LSL      r1,r0,#8
;;;198    temp_i+=temp1;
00026a  eb010005          ADD      r0,r1,r5
;;;199    temp_i<<=8;
00026e  ea4f2100          LSL      r1,r0,#8
;;;200    temp_i+=temp0;
000272  440b              ADD      r3,r3,r1
;;;201    CS_OFF
000274  6810              LDR      r0,[r2,#0]
000276  f4401080          ORR      r0,r0,#0x100000
00027a  6010              STR      r0,[r2,#0]
00027c  6990              LDR      r0,[r2,#0x18]
00027e  f4401080          ORR      r0,r0,#0x100000
000282  6190              STR      r0,[r2,#0x18]
;;;202    CS_OFF
000284  6810              LDR      r0,[r2,#0]
000286  f4401080          ORR      r0,r0,#0x100000
00028a  6010              STR      r0,[r2,#0]
00028c  6990              LDR      r0,[r2,#0x18]
00028e  f4401080          ORR      r0,r0,#0x100000
000292  6190              STR      r0,[r2,#0x18]
;;;203    spi1_unconfig();
000294  f7fffffe          BL       spi1_unconfig
;;;204    return temp_i;
000298  4618              MOV      r0,r3
;;;205    }
00029a  bd38              POP      {r3-r5,pc}
;;;206    
                          ENDP

                  lc640_read_long_ptr PROC
;;;208    //Чтение из м-мы 4 байт по адр. ADR
;;;209    void lc640_read_long_ptr(int ADR,char* out_ptr)
00029c  b513              PUSH     {r0,r1,r4,lr}
;;;210    {
00029e  460c              MOV      r4,r1
                  |L1.672|
;;;211    char temp0/*,temp1,temp2*/;
;;;212    //long temp_i;
;;;213    while(lc640_rdsr()&0x01)
0002a0  f7fffffe          BL       lc640_rdsr
0002a4  07c0              LSLS     r0,r0,#31
0002a6  d1fb              BNE      |L1.672|
;;;214    	{
;;;215    	}
;;;216    spi1_config();
0002a8  f7fffffe          BL       spi1_config
;;;217    CS_ON
0002ac  4a56              LDR      r2,|L1.1032|
0002ae  6810              LDR      r0,[r2,#0]
0002b0  f4401080          ORR      r0,r0,#0x100000
0002b4  6010              STR      r0,[r2,#0]
0002b6  69d0              LDR      r0,[r2,#0x1c]
0002b8  f4401080          ORR      r0,r0,#0x100000
0002bc  61d0              STR      r0,[r2,#0x1c]
;;;218    spi1(0x03);
0002be  f04f0003          MOV      r0,#3
0002c2  f7fffffe          BL       spi1
;;;219    temp0=*(((char*)&ADR)+1);
0002c6  f89d0001          LDRB     r0,[sp,#1]
;;;220    spi1(temp0);
0002ca  f7fffffe          BL       spi1
;;;221    temp0=*((char*)&ADR);
0002ce  f89d0000          LDRB     r0,[sp,#0]
;;;222    spi1(temp0);
0002d2  f7fffffe          BL       spi1
;;;223    out_ptr[0]=spi1(0xff);
0002d6  20ff              MOVS     r0,#0xff
0002d8  f7fffffe          BL       spi1
0002dc  7020              STRB     r0,[r4,#0]
;;;224    out_ptr[1]=spi1(0xff);
0002de  20ff              MOVS     r0,#0xff
0002e0  f7fffffe          BL       spi1
0002e4  7060              STRB     r0,[r4,#1]
;;;225    out_ptr[2]=spi1(0xff);
0002e6  20ff              MOVS     r0,#0xff
0002e8  f7fffffe          BL       spi1
0002ec  70a0              STRB     r0,[r4,#2]
;;;226    out_ptr[3]=spi1(0xff);
0002ee  20ff              MOVS     r0,#0xff
0002f0  f7fffffe          BL       spi1
0002f4  70e0              STRB     r0,[r4,#3]
;;;227    CS_OFF
0002f6  6810              LDR      r0,[r2,#0]
0002f8  f4401080          ORR      r0,r0,#0x100000
0002fc  6010              STR      r0,[r2,#0]
0002fe  6990              LDR      r0,[r2,#0x18]
000300  f4401080          ORR      r0,r0,#0x100000
000304  6190              STR      r0,[r2,#0x18]
;;;228    CS_OFF
000306  6810              LDR      r0,[r2,#0]
000308  f4401080          ORR      r0,r0,#0x100000
00030c  6010              STR      r0,[r2,#0]
00030e  6990              LDR      r0,[r2,#0x18]
000310  f4401080          ORR      r0,r0,#0x100000
000314  6190              STR      r0,[r2,#0x18]
;;;229    spi1_unconfig();
000316  e8bd401c          POP      {r2-r4,lr}
00031a  e7fe              B        spi1_unconfig
;;;230    }
;;;231    
                          ENDP

                  lc640_read_str PROC
;;;233    //Чтение из м-мы N байт по адр. ADR
;;;234    void lc640_read_str(int ADR, char* ram_ptr, char num)
00031c  b577              PUSH     {r0-r2,r4-r6,lr}
;;;235    {
00031e  460c              MOV      r4,r1
000320  4616              MOV      r6,r2
                  |L1.802|
;;;236    char temp0,i;
;;;237    while(lc640_rdsr()&0x01)
000322  f7fffffe          BL       lc640_rdsr
000326  07c0              LSLS     r0,r0,#31
000328  d1fb              BNE      |L1.802|
;;;238    	{
;;;239    	}
;;;240    spi1_config();
00032a  f7fffffe          BL       spi1_config
;;;241    CS_ON
00032e  4d36              LDR      r5,|L1.1032|
000330  6828              LDR      r0,[r5,#0]
000332  f4401080          ORR      r0,r0,#0x100000
000336  6028              STR      r0,[r5,#0]
000338  69e8              LDR      r0,[r5,#0x1c]
00033a  f4401080          ORR      r0,r0,#0x100000
00033e  61e8              STR      r0,[r5,#0x1c]
;;;242    spi1(0x03);
000340  f04f0003          MOV      r0,#3
000344  f7fffffe          BL       spi1
;;;243    temp0=*(((char*)&ADR)+1);
000348  f89d0001          LDRB     r0,[sp,#1]
;;;244    spi1(temp0);
00034c  f7fffffe          BL       spi1
;;;245    temp0=*((char*)&ADR);
000350  f89d0000          LDRB     r0,[sp,#0]
;;;246    spi1(temp0);
000354  f7fffffe          BL       spi1
;;;247    
;;;248    for(i=0;i<num;i++)
000358  f04f0300          MOV      r3,#0
00035c  e007              B        |L1.878|
                  |L1.862|
;;;249    	{
;;;250    	*ram_ptr++=spi1(0xff);
00035e  20ff              MOVS     r0,#0xff
000360  f7fffffe          BL       spi1
000364  f8040b01          STRB     r0,[r4],#1
000368  f1030301          ADD      r3,r3,#1              ;248
00036c  b2db              UXTB     r3,r3                 ;248
                  |L1.878|
00036e  42b3              CMP      r3,r6                 ;248
000370  d3f5              BCC      |L1.862|
;;;251    	}
;;;252    CS_OFF
000372  6828              LDR      r0,[r5,#0]
000374  f4401080          ORR      r0,r0,#0x100000
000378  6028              STR      r0,[r5,#0]
00037a  69a8              LDR      r0,[r5,#0x18]
00037c  f4401080          ORR      r0,r0,#0x100000
000380  61a8              STR      r0,[r5,#0x18]
;;;253    CS_OFF
000382  6828              LDR      r0,[r5,#0]
000384  f4401080          ORR      r0,r0,#0x100000
000388  6028              STR      r0,[r5,#0]
00038a  69a8              LDR      r0,[r5,#0x18]
00038c  f4401080          ORR      r0,r0,#0x100000
000390  61a8              STR      r0,[r5,#0x18]
;;;254    spi1_unconfig();
000392  e8bd407e          POP      {r1-r6,lr}
000396  e7fe              B        spi1_unconfig
;;;255    }
;;;256    
                          ENDP

                  lc640_write PROC
;;;258    //Запись байта in по адресу ADR
;;;259    char lc640_write(int ADR,char in)
000398  b513              PUSH     {r0,r1,r4,lr}
;;;260    {
00039a  460c              MOV      r4,r1
                  |L1.924|
;;;261    char temp; 
;;;262    
;;;263    while(lc640_rdsr()&0x01)
00039c  f7fffffe          BL       lc640_rdsr
0003a0  07c0              LSLS     r0,r0,#31
0003a2  d1fb              BNE      |L1.924|
;;;264    	{
;;;265    	}
;;;266    lc640_wren();
0003a4  f7fffffe          BL       lc640_wren
;;;267    spi1_config();	
0003a8  f7fffffe          BL       spi1_config
;;;268    CS_ON
0003ac  4a16              LDR      r2,|L1.1032|
0003ae  6810              LDR      r0,[r2,#0]
0003b0  f4401080          ORR      r0,r0,#0x100000
0003b4  6010              STR      r0,[r2,#0]
0003b6  69d0              LDR      r0,[r2,#0x1c]
0003b8  f4401080          ORR      r0,r0,#0x100000
0003bc  61d0              STR      r0,[r2,#0x1c]
;;;269    spi1(0x02);
0003be  f04f0002          MOV      r0,#2
0003c2  f7fffffe          BL       spi1
;;;270    temp=*(((char*)&ADR)+1);
0003c6  f89d0001          LDRB     r0,[sp,#1]
;;;271    spi1(temp);
0003ca  f7fffffe          BL       spi1
;;;272    temp=*((char*)&ADR);
0003ce  f89d0000          LDRB     r0,[sp,#0]
;;;273    spi1(temp);
0003d2  f7fffffe          BL       spi1
;;;274    temp=spi1(in);
0003d6  4620              MOV      r0,r4
0003d8  f7fffffe          BL       spi1
0003dc  4603              MOV      r3,r0
;;;275    CS_OFF
0003de  6810              LDR      r0,[r2,#0]
0003e0  f4401080          ORR      r0,r0,#0x100000
0003e4  6010              STR      r0,[r2,#0]
0003e6  6990              LDR      r0,[r2,#0x18]
0003e8  f4401080          ORR      r0,r0,#0x100000
0003ec  6190              STR      r0,[r2,#0x18]
;;;276    CS_OFF
0003ee  6810              LDR      r0,[r2,#0]
0003f0  f4401080          ORR      r0,r0,#0x100000
0003f4  6010              STR      r0,[r2,#0]
0003f6  6990              LDR      r0,[r2,#0x18]
0003f8  f4401080          ORR      r0,r0,#0x100000
0003fc  6190              STR      r0,[r2,#0x18]
;;;277    spi1_unconfig(); 
0003fe  e005              B        |L1.1036|
                  |L1.1024|
                          DCD      0x40020000
                  |L1.1028|
                          DCD      0x4002c000
                  |L1.1032|
                          DCD      0x2009c000
                  |L1.1036|
00040c  f7fffffe          BL       spi1_unconfig
;;;278    return temp;
000410  4618              MOV      r0,r3
;;;279    }
000412  bd1c              POP      {r2-r4,pc}
;;;280    
                          ENDP

                  lc640_write_int PROC
;;;282    //Запись слова in по адресу ADR
;;;283    char lc640_write_int(short ADR,short in)
000414  b503              PUSH     {r0,r1,lr}
                  |L1.1046|
;;;284    {
;;;285    char temp; 
;;;286    while(lc640_rdsr()&0x01)
000416  f7fffffe          BL       lc640_rdsr
00041a  07c0              LSLS     r0,r0,#31
00041c  d1fb              BNE      |L1.1046|
;;;287    	{
;;;288    	}
;;;289    lc640_wren();
00041e  f7fffffe          BL       lc640_wren
;;;290    spi1_config();	
000422  f7fffffe          BL       spi1_config
;;;291    CS_ON
000426  4a5a              LDR      r2,|L1.1424|
000428  6810              LDR      r0,[r2,#0]
00042a  f4401080          ORR      r0,r0,#0x100000
00042e  6010              STR      r0,[r2,#0]
000430  69d0              LDR      r0,[r2,#0x1c]
000432  f4401080          ORR      r0,r0,#0x100000
000436  61d0              STR      r0,[r2,#0x1c]
;;;292    spi1(0x02);
000438  f04f0002          MOV      r0,#2
00043c  f7fffffe          BL       spi1
;;;293    temp=*(((char*)&ADR)+1);
000440  f89d0001          LDRB     r0,[sp,#1]
;;;294    spi1(temp);
000444  f7fffffe          BL       spi1
;;;295    temp=*((char*)&ADR);
000448  f89d0000          LDRB     r0,[sp,#0]
;;;296    spi1(temp);
00044c  f7fffffe          BL       spi1
;;;297    temp=*((char*)&in);
000450  f89d0004          LDRB     r0,[sp,#4]
;;;298    spi1(temp);
000454  f7fffffe          BL       spi1
;;;299    temp=*(((char*)&in)+1);
000458  f89d3005          LDRB     r3,[sp,#5]
;;;300    spi1(temp);
00045c  4618              MOV      r0,r3
00045e  f7fffffe          BL       spi1
;;;301    CS_OFF
000462  6810              LDR      r0,[r2,#0]
000464  f4401080          ORR      r0,r0,#0x100000
000468  6010              STR      r0,[r2,#0]
00046a  6990              LDR      r0,[r2,#0x18]
00046c  f4401080          ORR      r0,r0,#0x100000
000470  6190              STR      r0,[r2,#0x18]
;;;302    CS_OFF
000472  6810              LDR      r0,[r2,#0]
000474  f4401080          ORR      r0,r0,#0x100000
000478  6010              STR      r0,[r2,#0]
00047a  6990              LDR      r0,[r2,#0x18]
00047c  f4401080          ORR      r0,r0,#0x100000
000480  6190              STR      r0,[r2,#0x18]
;;;303    spi1_unconfig();
000482  f7fffffe          BL       spi1_unconfig
;;;304    return temp;
000486  4618              MOV      r0,r3
;;;305    }  
000488  bd0c              POP      {r2,r3,pc}
;;;306    
                          ENDP

                  lc640_write_long PROC
;;;308    //Запись 4 байт in по адресу ADR
;;;309    char lc640_write_long(int ADR,long in)
00048a  b503              PUSH     {r0,r1,lr}
                  |L1.1164|
;;;310    {
;;;311    char temp; 
;;;312    
;;;313    while(lc640_rdsr()&0x01)
00048c  f7fffffe          BL       lc640_rdsr
000490  07c0              LSLS     r0,r0,#31
000492  d1fb              BNE      |L1.1164|
;;;314    	{
;;;315    	}
;;;316    lc640_wren();	
000494  f7fffffe          BL       lc640_wren
;;;317    spi1_config();
000498  f7fffffe          BL       spi1_config
;;;318    CS_ON
00049c  4a3c              LDR      r2,|L1.1424|
00049e  6810              LDR      r0,[r2,#0]
0004a0  f4401080          ORR      r0,r0,#0x100000
0004a4  6010              STR      r0,[r2,#0]
0004a6  69d0              LDR      r0,[r2,#0x1c]
0004a8  f4401080          ORR      r0,r0,#0x100000
0004ac  61d0              STR      r0,[r2,#0x1c]
;;;319    spi1(0x02);
0004ae  f04f0002          MOV      r0,#2
0004b2  f7fffffe          BL       spi1
;;;320    temp=*(((char*)&ADR)+1);
0004b6  f89d0001          LDRB     r0,[sp,#1]
;;;321    spi1(temp);
0004ba  f7fffffe          BL       spi1
;;;322    temp=*((char*)&ADR);
0004be  f89d0000          LDRB     r0,[sp,#0]
;;;323    spi1(temp);
0004c2  f7fffffe          BL       spi1
;;;324    temp=*((char*)&in);
0004c6  f89d0004          LDRB     r0,[sp,#4]
;;;325    spi1(temp);
0004ca  f7fffffe          BL       spi1
;;;326    temp=*(((char*)&in)+1);
0004ce  f89d0005          LDRB     r0,[sp,#5]
;;;327    spi1(temp);
0004d2  f7fffffe          BL       spi1
;;;328    temp=*(((char*)&in)+2);
0004d6  f89d0006          LDRB     r0,[sp,#6]
;;;329    spi1(temp);
0004da  f7fffffe          BL       spi1
;;;330    temp=*(((char*)&in)+3);
0004de  f89d3007          LDRB     r3,[sp,#7]
;;;331    spi1(temp);           
0004e2  4618              MOV      r0,r3
0004e4  f7fffffe          BL       spi1
;;;332    CS_OFF
0004e8  6810              LDR      r0,[r2,#0]
0004ea  f4401080          ORR      r0,r0,#0x100000
0004ee  6010              STR      r0,[r2,#0]
0004f0  6990              LDR      r0,[r2,#0x18]
0004f2  f4401080          ORR      r0,r0,#0x100000
0004f6  6190              STR      r0,[r2,#0x18]
;;;333    CS_OFF  
0004f8  6810              LDR      r0,[r2,#0]
0004fa  f4401080          ORR      r0,r0,#0x100000
0004fe  6010              STR      r0,[r2,#0]
000500  6990              LDR      r0,[r2,#0x18]
000502  f4401080          ORR      r0,r0,#0x100000
000506  6190              STR      r0,[r2,#0x18]
;;;334    spi1_unconfig();
000508  f7fffffe          BL       spi1_unconfig
;;;335    return temp;
00050c  4618              MOV      r0,r3
;;;336    }
00050e  bd0c              POP      {r2,r3,pc}
;;;337    
                          ENDP

                  lc640_write_long_ptr PROC
;;;339    //Запись 4 байт in по адресу ADR
;;;340    char lc640_write_long_ptr(int ADR,char* in)
000510  b513              PUSH     {r0,r1,r4,lr}
;;;341    {
000512  460c              MOV      r4,r1
                  |L1.1300|
;;;342    char temp; 
;;;343    
;;;344    while(lc640_rdsr()&0x01)
000514  f7fffffe          BL       lc640_rdsr
000518  07c0              LSLS     r0,r0,#31
00051a  d1fb              BNE      |L1.1300|
;;;345    	{
;;;346    	}
;;;347    lc640_wren();	
00051c  f7fffffe          BL       lc640_wren
;;;348    spi1_config();
000520  f7fffffe          BL       spi1_config
;;;349    CS_ON
000524  4a1a              LDR      r2,|L1.1424|
000526  6810              LDR      r0,[r2,#0]
000528  f4401080          ORR      r0,r0,#0x100000
00052c  6010              STR      r0,[r2,#0]
00052e  69d0              LDR      r0,[r2,#0x1c]
000530  f4401080          ORR      r0,r0,#0x100000
000534  61d0              STR      r0,[r2,#0x1c]
;;;350    spi1(0x02);
000536  f04f0002          MOV      r0,#2
00053a  f7fffffe          BL       spi1
;;;351    temp=*(((char*)&ADR)+1);
00053e  f89d0001          LDRB     r0,[sp,#1]
;;;352    spi1(temp);
000542  f7fffffe          BL       spi1
;;;353    temp=*((char*)&ADR);
000546  f89d0000          LDRB     r0,[sp,#0]
;;;354    spi1(temp);
00054a  f7fffffe          BL       spi1
;;;355    temp=in[0];
00054e  7820              LDRB     r0,[r4,#0]
;;;356    spi1(temp);
000550  f7fffffe          BL       spi1
;;;357    temp=in[1];
000554  7860              LDRB     r0,[r4,#1]
;;;358    spi1(temp);
000556  f7fffffe          BL       spi1
;;;359    temp=in[2];
00055a  78a0              LDRB     r0,[r4,#2]
;;;360    spi1(temp);
00055c  f7fffffe          BL       spi1
;;;361    temp=in[3];
000560  78e3              LDRB     r3,[r4,#3]
;;;362    spi1(temp);
000562  4618              MOV      r0,r3
000564  f7fffffe          BL       spi1
;;;363    
;;;364    CS_OFF
000568  6810              LDR      r0,[r2,#0]
00056a  f4401080          ORR      r0,r0,#0x100000
00056e  6010              STR      r0,[r2,#0]
000570  6990              LDR      r0,[r2,#0x18]
000572  f4401080          ORR      r0,r0,#0x100000
000576  6190              STR      r0,[r2,#0x18]
;;;365    CS_OFF  
000578  6810              LDR      r0,[r2,#0]
00057a  f4401080          ORR      r0,r0,#0x100000
00057e  6010              STR      r0,[r2,#0]
000580  6990              LDR      r0,[r2,#0x18]
000582  f4401080          ORR      r0,r0,#0x100000
000586  6190              STR      r0,[r2,#0x18]
;;;366    spi1_unconfig();
000588  f7fffffe          BL       spi1_unconfig
;;;367    return temp;
00058c  4618              MOV      r0,r3
;;;368    }		
00058e  bd1c              POP      {r2-r4,pc}
                          ENDP

                  |L1.1424|
                          DCD      0x2009c000

;*** Start embedded assembler ***

#line 1 "25lc640.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_25lc640_c_spi1____REV16|
#line 112 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_25lc640_c_spi1____REV16| PROC
#line 113

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_25lc640_c_spi1____REVSH|
#line 130
|__asm___9_25lc640_c_spi1____REVSH| PROC
#line 131

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
