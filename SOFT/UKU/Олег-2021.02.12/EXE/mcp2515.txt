; generated by ARM C/C++ Compiler, RVCT4.0 [Build 728]
; commandline ArmCC [--debug -c --asm --interleave -o.\EXE\mcp2515.o --depend=.\EXE\mcp2515.d --feedback=.\EXE\UKU_220_IPS_TERMOKOMPENSAT.fed --cpu=Cortex-M3 --apcs=interwork -O1 -IC:\Keil\ARM\INC -IC:\Keil\ARM\INC\NXP\LPC17xx -D__MICROLIB -DUKU_220_IPS_TERMOKOMPENSAT -DUKU2071x --omf_browse=.\EXE\mcp2515.crf mcp2515.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  mcp2515_reset PROC
;;;14     //-----------------------------------------------
;;;15     void mcp2515_reset(void)
000000  b510              PUSH     {r4,lr}
;;;16     {
;;;17     spi1_config_mcp2515();
000002  f7fffffe          BL       spi1_config_mcp2515
;;;18     MCP2515_CS_ON
000006  4ce2              LDR      r4,|L1.912|
000008  6820              LDR      r0,[r4,#0]
00000a  f0400002          ORR      r0,r0,#2
00000e  6020              STR      r0,[r4,#0]
000010  69e0              LDR      r0,[r4,#0x1c]
000012  f0400002          ORR      r0,r0,#2
000016  61e0              STR      r0,[r4,#0x1c]
;;;19     spi1(0xc0);
000018  20c0              MOVS     r0,#0xc0
00001a  f7fffffe          BL       spi1
;;;20     MCP2515_CS_OFF
00001e  6820              LDR      r0,[r4,#0]
000020  f0400002          ORR      r0,r0,#2
000024  6020              STR      r0,[r4,#0]
000026  69a0              LDR      r0,[r4,#0x18]
000028  f0400002          ORR      r0,r0,#2
00002c  61a0              STR      r0,[r4,#0x18]
;;;21     
;;;22     }
00002e  bd10              POP      {r4,pc}
;;;23     
                          ENDP

                  mcp2515_write PROC
;;;24     //-----------------------------------------------
;;;25     char mcp2515_write(char addr,char in)
000030  b570              PUSH     {r4-r6,lr}
;;;26     {           
000032  4605              MOV      r5,r0
000034  460e              MOV      r6,r1
;;;27     char temp;
;;;28     spi1_config_mcp2515();       
000036  f7fffffe          BL       spi1_config_mcp2515
;;;29     MCP2515_CS_ON
00003a  4cd5              LDR      r4,|L1.912|
00003c  6820              LDR      r0,[r4,#0]
00003e  f0400002          ORR      r0,r0,#2
000042  6020              STR      r0,[r4,#0]
000044  69e0              LDR      r0,[r4,#0x1c]
000046  f0400002          ORR      r0,r0,#2
00004a  61e0              STR      r0,[r4,#0x1c]
;;;30     spi1(0x02);
00004c  2002              MOVS     r0,#2
00004e  f7fffffe          BL       spi1
;;;31     spi1(addr);
000052  4628              MOV      r0,r5
000054  f7fffffe          BL       spi1
;;;32     spi1(in);
000058  4630              MOV      r0,r6
00005a  f7fffffe          BL       spi1
;;;33     MCP2515_CS_OFF
00005e  6820              LDR      r0,[r4,#0]
000060  f0400002          ORR      r0,r0,#2
000064  6020              STR      r0,[r4,#0]
000066  69a0              LDR      r0,[r4,#0x18]
000068  f0400002          ORR      r0,r0,#2
00006c  61a0              STR      r0,[r4,#0x18]
;;;34     return temp;                
00006e  4628              MOV      r0,r5
;;;35     }
000070  bd70              POP      {r4-r6,pc}
;;;36     
                          ENDP

                  mcp2515_read PROC
;;;37     //-----------------------------------------------
;;;38     char mcp2515_read(char addr)
000072  b570              PUSH     {r4-r6,lr}
;;;39     {           
000074  4605              MOV      r5,r0
;;;40     char temp;
;;;41     
;;;42     spi1_config_mcp2515();       
000076  f7fffffe          BL       spi1_config_mcp2515
;;;43     MCP2515_CS_ON
00007a  4cc5              LDR      r4,|L1.912|
00007c  6820              LDR      r0,[r4,#0]
00007e  f0400002          ORR      r0,r0,#2
000082  6020              STR      r0,[r4,#0]
000084  69e0              LDR      r0,[r4,#0x1c]
000086  f0400002          ORR      r0,r0,#2
00008a  61e0              STR      r0,[r4,#0x1c]
;;;44     delay_us(10);
00008c  2078              MOVS     r0,#0x78
                  |L1.142|
00008e  1e40              SUBS     r0,r0,#1
000090  2800              CMP      r0,#0
000092  d1fc              BNE      |L1.142|
;;;45     spi1(0x03);
000094  2003              MOVS     r0,#3
000096  f7fffffe          BL       spi1
;;;46     spi1(addr);
00009a  4628              MOV      r0,r5
00009c  f7fffffe          BL       spi1
;;;47     temp=spi1(0x55);
0000a0  2055              MOVS     r0,#0x55
0000a2  f7fffffe          BL       spi1
;;;48     MCP2515_CS_OFF   
0000a6  6821              LDR      r1,[r4,#0]
0000a8  f0410102          ORR      r1,r1,#2
0000ac  6021              STR      r1,[r4,#0]
0000ae  69a1              LDR      r1,[r4,#0x18]
0000b0  f0410102          ORR      r1,r1,#2
0000b4  61a1              STR      r1,[r4,#0x18]
;;;49     return temp;                
;;;50     }  
0000b6  bd70              POP      {r4-r6,pc}
;;;51     
                          ENDP

                  mcp2515_bit_modify PROC
;;;52     //-----------------------------------------------
;;;53     void mcp2515_bit_modify(char addr,char mask,char data)
0000b8  e92d41f0          PUSH     {r4-r8,lr}
;;;54     {           
0000bc  4605              MOV      r5,r0
0000be  460e              MOV      r6,r1
0000c0  4617              MOV      r7,r2
;;;55     spi1_config_mcp2515();       
0000c2  f7fffffe          BL       spi1_config_mcp2515
;;;56     MCP2515_CS_ON
0000c6  4cb2              LDR      r4,|L1.912|
0000c8  6820              LDR      r0,[r4,#0]
0000ca  f0400002          ORR      r0,r0,#2
0000ce  6020              STR      r0,[r4,#0]
0000d0  69e0              LDR      r0,[r4,#0x1c]
0000d2  f0400002          ORR      r0,r0,#2
0000d6  61e0              STR      r0,[r4,#0x1c]
;;;57     spi1(0x05);
0000d8  2005              MOVS     r0,#5
0000da  f7fffffe          BL       spi1
;;;58     spi1(addr);
0000de  4628              MOV      r0,r5
0000e0  f7fffffe          BL       spi1
;;;59     spi1(mask);
0000e4  4630              MOV      r0,r6
0000e6  f7fffffe          BL       spi1
;;;60     spi1(data);
0000ea  4638              MOV      r0,r7
0000ec  f7fffffe          BL       spi1
;;;61     MCP2515_CS_OFF
0000f0  6820              LDR      r0,[r4,#0]
0000f2  f0400002          ORR      r0,r0,#2
0000f6  6020              STR      r0,[r4,#0]
0000f8  69a0              LDR      r0,[r4,#0x18]
0000fa  f0400002          ORR      r0,r0,#2
0000fe  61a0              STR      r0,[r4,#0x18]
;;;62     } 
000100  e8bd81f0          POP      {r4-r8,pc}
;;;63     
                          ENDP

                  mcp2515_read_status PROC
;;;64     //-----------------------------------------------
;;;65     char mcp2515_read_status(void)
000104  b510              PUSH     {r4,lr}
;;;66     {           
;;;67     char temp;
;;;68     //#asm("cli")
;;;69     spi1_config_mcp2515();       
000106  f7fffffe          BL       spi1_config_mcp2515
;;;70     MCP2515_CS_ON
00010a  4ca1              LDR      r4,|L1.912|
00010c  6820              LDR      r0,[r4,#0]
00010e  f0400002          ORR      r0,r0,#2
000112  6020              STR      r0,[r4,#0]
000114  69e0              LDR      r0,[r4,#0x1c]
000116  f0400002          ORR      r0,r0,#2
00011a  61e0              STR      r0,[r4,#0x1c]
;;;71     delay_us(1);
00011c  200c              MOVS     r0,#0xc
                  |L1.286|
00011e  1e40              SUBS     r0,r0,#1
000120  2800              CMP      r0,#0
000122  d1fc              BNE      |L1.286|
;;;72     spi1(0xa0);
000124  20a0              MOVS     r0,#0xa0
000126  f7fffffe          BL       spi1
;;;73     temp=spi1(0x55);
00012a  2055              MOVS     r0,#0x55
00012c  f7fffffe          BL       spi1
;;;74     MCP2515_CS_OFF
000130  6821              LDR      r1,[r4,#0]
000132  f0410102          ORR      r1,r1,#2
000136  6021              STR      r1,[r4,#0]
000138  69a1              LDR      r1,[r4,#0x18]
00013a  f0410102          ORR      r1,r1,#2
00013e  61a1              STR      r1,[r4,#0x18]
;;;75     //#asm("sei")    
;;;76     return temp;                
;;;77     }
000140  bd10              POP      {r4,pc}
;;;78     
                          ENDP

                  mcp2515_rts PROC
;;;79     //-----------------------------------------------
;;;80     void mcp2515_rts(char in)
000142  b570              PUSH     {r4-r6,lr}
;;;81     {
000144  4604              MOV      r4,r0
;;;82     //#asm("cli")
;;;83     spi1_config_mcp2515();       
000146  f7fffffe          BL       spi1_config_mcp2515
;;;84     MCP2515_CS_ON
00014a  4d91              LDR      r5,|L1.912|
00014c  6828              LDR      r0,[r5,#0]
00014e  f0400002          ORR      r0,r0,#2
000152  6028              STR      r0,[r5,#0]
000154  69e8              LDR      r0,[r5,#0x1c]
000156  f0400002          ORR      r0,r0,#2
00015a  61e8              STR      r0,[r5,#0x1c]
;;;85     if(in==0) in=0x81;
00015c  b90c              CBNZ     r4,|L1.354|
00015e  2481              MOVS     r4,#0x81
000160  e006              B        |L1.368|
                  |L1.354|
;;;86     else if(in==1) in=0x82;
000162  2c01              CMP      r4,#1
000164  d101              BNE      |L1.362|
000166  2482              MOVS     r4,#0x82
000168  e002              B        |L1.368|
                  |L1.362|
;;;87     else if(in==2) in=0x84;
00016a  2c02              CMP      r4,#2
00016c  d100              BNE      |L1.368|
00016e  2484              MOVS     r4,#0x84
                  |L1.368|
;;;88     spi1(in);
000170  4620              MOV      r0,r4
000172  f7fffffe          BL       spi1
;;;89     MCP2515_CS_OFF
000176  6828              LDR      r0,[r5,#0]
000178  f0400002          ORR      r0,r0,#2
00017c  6028              STR      r0,[r5,#0]
00017e  69a8              LDR      r0,[r5,#0x18]
000180  f0400002          ORR      r0,r0,#2
000184  61a8              STR      r0,[r5,#0x18]
;;;90     //#asm("sei")                    
;;;91     }
000186  bd70              POP      {r4-r6,pc}
;;;92     
                          ENDP

                  can_mcp2515_init PROC
;;;93     //-----------------------------------------------
;;;94     void can_mcp2515_init(void)
000188  b510              PUSH     {r4,lr}
;;;95     {
;;;96     char spi_temp;                 
;;;97     
;;;98     mcp2515_reset();
00018a  f7fffffe          BL       mcp2515_reset
;;;99     spi_temp=mcp2515_read(CANSTAT);
00018e  200e              MOVS     r0,#0xe
000190  f7fffffe          BL       mcp2515_read
;;;100    if((spi_temp&0xe0)!=0x80)
000194  2104              MOVS     r1,#4
000196  ebb11f50          CMP      r1,r0,LSR #5
00019a  d004              BEQ      |L1.422|
;;;101    	{
;;;102    	mcp2515_bit_modify(CANCTRL,0xe0,0x80);
00019c  2280              MOVS     r2,#0x80
00019e  21e0              MOVS     r1,#0xe0
0001a0  200f              MOVS     r0,#0xf
0001a2  f7fffffe          BL       mcp2515_bit_modify
                  |L1.422|
;;;103    	}
;;;104    delay_us(10);		
0001a6  2078              MOVS     r0,#0x78
                  |L1.424|
0001a8  1e40              SUBS     r0,r0,#1
0001aa  2800              CMP      r0,#0
0001ac  d1fc              BNE      |L1.424|
;;;105    mcp2515_write(CNF1,CNF1_init);
0001ae  21c3              MOVS     r1,#0xc3
0001b0  202a              MOVS     r0,#0x2a
0001b2  f7fffffe          BL       mcp2515_write
;;;106    mcp2515_write(CNF2,CNF2_init);
0001b6  21fe              MOVS     r1,#0xfe
0001b8  2029              MOVS     r0,#0x29
0001ba  f7fffffe          BL       mcp2515_write
;;;107    mcp2515_write(CNF3,CNF3_init);
0001be  2103              MOVS     r1,#3
0001c0  2028              MOVS     r0,#0x28
0001c2  f7fffffe          BL       mcp2515_write
;;;108    
;;;109    mcp2515_write(RXB0CTRL,0x20/*0b00100000*/);
0001c6  2120              MOVS     r1,#0x20
0001c8  2060              MOVS     r0,#0x60
0001ca  f7fffffe          BL       mcp2515_write
;;;110    mcp2515_write(RXB1CTRL,0x20/*0b00100000*/);
0001ce  2120              MOVS     r1,#0x20
0001d0  2070              MOVS     r0,#0x70
0001d2  f7fffffe          BL       mcp2515_write
;;;111    
;;;112    delay_ms(10);
0001d6  486f              LDR      r0,|L1.916|
                  |L1.472|
0001d8  1e40              SUBS     r0,r0,#1
0001da  2800              CMP      r0,#0
0001dc  d1fc              BNE      |L1.472|
;;;113    
;;;114    mcp2515_write(RXM0SIDH, 0xFF); 
0001de  21ff              MOVS     r1,#0xff
0001e0  2020              MOVS     r0,#0x20
0001e2  f7fffffe          BL       mcp2515_write
;;;115    mcp2515_write(RXM0SIDL, 0xFF); 
0001e6  21ff              MOVS     r1,#0xff
0001e8  2021              MOVS     r0,#0x21
0001ea  f7fffffe          BL       mcp2515_write
;;;116    mcp2515_write(RXF0SIDH, 0xFF); 
0001ee  21ff              MOVS     r1,#0xff
0001f0  2000              MOVS     r0,#0
0001f2  f7fffffe          BL       mcp2515_write
;;;117    mcp2515_write(RXF0SIDL, 0xFF); 
0001f6  21ff              MOVS     r1,#0xff
0001f8  2001              MOVS     r0,#1
0001fa  f7fffffe          BL       mcp2515_write
;;;118    mcp2515_write(RXF1SIDH, 0xFF);
0001fe  21ff              MOVS     r1,#0xff
000200  2004              MOVS     r0,#4
000202  f7fffffe          BL       mcp2515_write
;;;119    mcp2515_write(RXF1SIDL, 0xFF); 
000206  21ff              MOVS     r1,#0xff
000208  2005              MOVS     r0,#5
00020a  f7fffffe          BL       mcp2515_write
;;;120    
;;;121    mcp2515_write(RXM1SIDH, 0xff); 
00020e  21ff              MOVS     r1,#0xff
000210  2024              MOVS     r0,#0x24
000212  f7fffffe          BL       mcp2515_write
;;;122    mcp2515_write(RXM1SIDL, 0xe0); 
000216  21e0              MOVS     r1,#0xe0
000218  2025              MOVS     r0,#0x25
00021a  f7fffffe          BL       mcp2515_write
;;;123    
;;;124    mcp2515_write(RXF2SIDH, 0x31); 
00021e  2131              MOVS     r1,#0x31
000220  2008              MOVS     r0,#8
000222  f7fffffe          BL       mcp2515_write
;;;125    mcp2515_write(RXF2SIDL, 0xc0); 
000226  21c0              MOVS     r1,#0xc0
000228  2009              MOVS     r0,#9
00022a  f7fffffe          BL       mcp2515_write
;;;126    
;;;127    mcp2515_write(RXF3SIDH, 0x00); 
00022e  2100              MOVS     r1,#0
000230  2010              MOVS     r0,#0x10
000232  f7fffffe          BL       mcp2515_write
;;;128    mcp2515_write(RXF3SIDL, 0x00); 
000236  2100              MOVS     r1,#0
000238  2011              MOVS     r0,#0x11
00023a  f7fffffe          BL       mcp2515_write
;;;129    
;;;130    mcp2515_write(RXF4SIDH, 0x00); 
00023e  2100              MOVS     r1,#0
000240  2014              MOVS     r0,#0x14
000242  f7fffffe          BL       mcp2515_write
;;;131    mcp2515_write(RXF4SIDL, 0x00); 
000246  2100              MOVS     r1,#0
000248  2015              MOVS     r0,#0x15
00024a  f7fffffe          BL       mcp2515_write
;;;132    
;;;133    mcp2515_write(RXF5SIDH, 0x00); 
00024e  2100              MOVS     r1,#0
000250  2018              MOVS     r0,#0x18
000252  f7fffffe          BL       mcp2515_write
;;;134    mcp2515_write(RXF5SIDL, 0x00); 
000256  2100              MOVS     r1,#0
000258  2019              MOVS     r0,#0x19
00025a  f7fffffe          BL       mcp2515_write
;;;135    
;;;136    mcp2515_write(TXB2SIDH, 0x13); 
00025e  2113              MOVS     r1,#0x13
000260  2051              MOVS     r0,#0x51
000262  f7fffffe          BL       mcp2515_write
;;;137    mcp2515_write(TXB2SIDL, 0xc0); 
000266  21c0              MOVS     r1,#0xc0
000268  2052              MOVS     r0,#0x52
00026a  f7fffffe          BL       mcp2515_write
;;;138    
;;;139    mcp2515_write(TXB1SIDH, 0x13); 
00026e  2113              MOVS     r1,#0x13
000270  2041              MOVS     r0,#0x41
000272  f7fffffe          BL       mcp2515_write
;;;140    mcp2515_write(TXB1SIDL, 0xc0); 
000276  21c0              MOVS     r1,#0xc0
000278  2042              MOVS     r0,#0x42
00027a  f7fffffe          BL       mcp2515_write
;;;141    
;;;142    mcp2515_write(TXB0SIDH, 0x13); 
00027e  2113              MOVS     r1,#0x13
000280  2031              MOVS     r0,#0x31
000282  f7fffffe          BL       mcp2515_write
;;;143    mcp2515_write(TXB0SIDL, 0xc0); 
000286  21c0              MOVS     r1,#0xc0
000288  2032              MOVS     r0,#0x32
00028a  f7fffffe          BL       mcp2515_write
;;;144    
;;;145    
;;;146    
;;;147    mcp2515_bit_modify(CANCTRL,0xe7,0x05/*0b00000101*/);
00028e  2205              MOVS     r2,#5
000290  21e7              MOVS     r1,#0xe7
000292  200f              MOVS     r0,#0xf
000294  f7fffffe          BL       mcp2515_bit_modify
;;;148    
;;;149    mcp2515_write(CANINTE,0x06/*0b00000110*/);
000298  2106              MOVS     r1,#6
00029a  202b              MOVS     r0,#0x2b
00029c  f7fffffe          BL       mcp2515_write
;;;150    delay_ms(100);
0002a0  483d              LDR      r0,|L1.920|
                  |L1.674|
0002a2  1e40              SUBS     r0,r0,#1
0002a4  2800              CMP      r0,#0
0002a6  d1fc              BNE      |L1.674|
;;;151    mcp2515_write(BFPCTRL,0x00/*0b00000000*/);  
0002a8  2100              MOVS     r1,#0
0002aa  e8bd4010          POP      {r4,lr}
0002ae  200c              MOVS     r0,#0xc
0002b0  e7fe              B        mcp2515_write
;;;152    
;;;153    }
;;;154    
                          ENDP

                  mcp2515_transmit PROC
;;;155    //-----------------------------------------------
;;;156    void mcp2515_transmit(char data0,char data1,char data2,char data3,char data4,char data5,char data6,char data7)
0002b2  e92d47f0          PUSH     {r4-r10,lr}
;;;157    {
0002b6  e9ddc809          LDRD     r12,r8,[sp,#0x24]
0002ba  f8dd902c          LDR      r9,[sp,#0x2c]
0002be  9f08              LDR      r7,[sp,#0x20]
;;;158    if((mcp2515_buff_wr_ptr<0)||(mcp2515_buff_wr_ptr>7))mcp2515_buff_wr_ptr=0;
0002c0  4e36              LDR      r6,|L1.924|
0002c2  2500              MOVS     r5,#0
0002c4  78f4              LDRB     r4,[r6,#3]  ; mcp2515_buff_wr_ptr
0002c6  2c08              CMP      r4,#8
0002c8  d300              BCC      |L1.716|
0002ca  70f5              STRB     r5,[r6,#3]
                  |L1.716|
;;;159    
;;;160    mcp2515_out_buff[0][mcp2515_buff_wr_ptr]=data0;
0002cc  f8dfa0d0          LDR      r10,|L1.928|
0002d0  78f4              LDRB     r4,[r6,#3]  ; mcp2515_buff_wr_ptr
0002d2  f80a0004          STRB     r0,[r10,r4]
;;;161    mcp2515_out_buff[1][mcp2515_buff_wr_ptr]=data1;
0002d6  eb0a0004          ADD      r0,r10,r4
0002da  7201              STRB     r1,[r0,#8]
;;;162    mcp2515_out_buff[2][mcp2515_buff_wr_ptr]=data2;
0002dc  7402              STRB     r2,[r0,#0x10]
;;;163    mcp2515_out_buff[3][mcp2515_buff_wr_ptr]=data3;
0002de  7603              STRB     r3,[r0,#0x18]
;;;164    mcp2515_out_buff[4][mcp2515_buff_wr_ptr]=data4;
0002e0  f8807020          STRB     r7,[r0,#0x20]
;;;165    mcp2515_out_buff[5][mcp2515_buff_wr_ptr]=data5;
0002e4  f880c028          STRB     r12,[r0,#0x28]
;;;166    mcp2515_out_buff[6][mcp2515_buff_wr_ptr]=data6;
0002e8  f8808030          STRB     r8,[r0,#0x30]
;;;167    mcp2515_out_buff[7][mcp2515_buff_wr_ptr]=data7;
0002ec  f8809038          STRB     r9,[r0,#0x38]
;;;168    
;;;169    mcp2515_buff_wr_ptr++;
0002f0  1c64              ADDS     r4,r4,#1
0002f2  b2e0              UXTB     r0,r4
0002f4  70f0              STRB     r0,[r6,#3]
;;;170    if(mcp2515_buff_wr_ptr>7)mcp2515_buff_wr_ptr=0;
0002f6  2807              CMP      r0,#7
0002f8  d900              BLS      |L1.764|
0002fa  70f5              STRB     r5,[r6,#3]
                  |L1.764|
;;;171    } 
0002fc  e8bd87f0          POP      {r4-r10,pc}
;;;172    
                          ENDP

                  can_mcp2515_hndl PROC
;;;173    //-----------------------------------------------
;;;174    void can_mcp2515_hndl(void)
000300  b570              PUSH     {r4-r6,lr}
;;;175    {
;;;176    unsigned char temp,j,temp_index,c_temp;
;;;177    static char ch_cnt;
;;;178    //#asm("cli")
;;;179    mcp2515_can_st=mcp2515_read_status();
000302  f7fffffe          BL       mcp2515_read_status
000306  4e25              LDR      r6,|L1.924|
000308  7030              STRB     r0,[r6,#0]
;;;180    mcp2515_can_st_old=mcp2515_can_st;
00030a  7830              LDRB     r0,[r6,#0]  ; mcp2515_can_st
00030c  7070              STRB     r0,[r6,#1]
;;;181    
;;;182    
;;;183    if(mcp2515_can_st&0x02/*0b00000010*/)
00030e  0781              LSLS     r1,r0,#30
000310  d513              BPL      |L1.826|
;;;184    	{
;;;185    	
;;;186    	for(j=0;j<8;j++)
000312  2400              MOVS     r4,#0
;;;187    		{
;;;188    		/*MCP2515_*/RXBUFF[j]=mcp2515_read(RXB1D0+j);
000314  4d23              LDR      r5,|L1.932|
                  |L1.790|
000316  f1040076          ADD      r0,r4,#0x76
00031a  b2c0              UXTB     r0,r0
00031c  f7fffffe          BL       mcp2515_read
000320  5528              STRB     r0,[r5,r4]
000322  1c64              ADDS     r4,r4,#1              ;186
000324  b2e4              UXTB     r4,r4                 ;186
000326  2c08              CMP      r4,#8                 ;186
000328  d3f5              BCC      |L1.790|
;;;189    		}
;;;190    	
;;;191    	mcp2515_bit_modify(CANINTF,0x02 /*0b00000010*/ ,0x00);
00032a  2200              MOVS     r2,#0
00032c  2102              MOVS     r1,#2
00032e  202c              MOVS     r0,#0x2c
000330  f7fffffe          BL       mcp2515_bit_modify
;;;192         bMCP2515_IN=1;
000334  2001              MOVS     r0,#1
000336  70b0              STRB     r0,[r6,#2]
                  |L1.824|
;;;193    	}
;;;194               
;;;195               
;;;196    else if(/*(can_st1&0b10101000)&&*/(!(mcp2515_can_st&0x54/*0b01010100*/)))
;;;197    	{
;;;198    	char n;
;;;199         mcp2515_bit_modify(CANINTF,0x1c/*0b00011100*/,0x00);
;;;200         
;;;201         if(mcp2515_buff_rd_ptr!=mcp2515_buff_wr_ptr)
;;;202         	{
;;;203    //		can_plazma++;
;;;204             	for(n=0;n<8;n++)
;;;205    			{ 
;;;206    			mcp2515_write(TXB0D0+n,mcp2515_out_buff[n][mcp2515_buff_rd_ptr]);
;;;207    			} 
;;;208        		mcp2515_write(TXB0DLC,8);
;;;209        		mcp2515_rts(0); 
;;;210        		
;;;211        		mcp2515_buff_rd_ptr++;
;;;212        		if(mcp2515_buff_rd_ptr>7)mcp2515_buff_rd_ptr=0;
;;;213        		} 
;;;214     	} 	
;;;215    		
;;;216    //#asm("sei") 
;;;217    }
000338  bd70              POP      {r4-r6,pc}
                  |L1.826|
00033a  f0100f54          TST      r0,#0x54              ;196
00033e  d1fb              BNE      |L1.824|
000340  2200              MOVS     r2,#0                 ;199
000342  211c              MOVS     r1,#0x1c              ;199
000344  202c              MOVS     r0,#0x2c              ;199
000346  f7fffffe          BL       mcp2515_bit_modify
00034a  7930              LDRB     r0,[r6,#4]            ;201  ; mcp2515_buff_rd_ptr
00034c  78f1              LDRB     r1,[r6,#3]            ;201  ; mcp2515_buff_wr_ptr
00034e  4288              CMP      r0,r1                 ;201
000350  d0f2              BEQ      |L1.824|
000352  2400              MOVS     r4,#0                 ;204
000354  4d12              LDR      r5,|L1.928|
                  |L1.854|
000356  7931              LDRB     r1,[r6,#4]            ;206  ; mcp2515_buff_rd_ptr
000358  eb0500c4          ADD      r0,r5,r4,LSL #3       ;206
00035c  5c41              LDRB     r1,[r0,r1]            ;206
00035e  f1040036          ADD      r0,r4,#0x36           ;206
000362  b2c0              UXTB     r0,r0                 ;206
000364  f7fffffe          BL       mcp2515_write
000368  1c64              ADDS     r4,r4,#1              ;204
00036a  b2e4              UXTB     r4,r4                 ;204
00036c  2c08              CMP      r4,#8                 ;204
00036e  d3f2              BCC      |L1.854|
000370  2108              MOVS     r1,#8                 ;208
000372  2035              MOVS     r0,#0x35              ;208
000374  f7fffffe          BL       mcp2515_write
000378  2000              MOVS     r0,#0                 ;209
00037a  f7fffffe          BL       mcp2515_rts
00037e  7930              LDRB     r0,[r6,#4]            ;211  ; mcp2515_buff_rd_ptr
000380  1c40              ADDS     r0,r0,#1              ;211
000382  b2c0              UXTB     r0,r0                 ;211
000384  7130              STRB     r0,[r6,#4]            ;211
000386  2807              CMP      r0,#7                 ;212
000388  d9d6              BLS      |L1.824|
00038a  2000              MOVS     r0,#0                 ;212
00038c  7130              STRB     r0,[r6,#4]            ;212
00038e  bd70              POP      {r4-r6,pc}
                          ENDP

                  |L1.912|
                          DCD      0x2009c000
                  |L1.916|
                          DCD      0x0001d4c0
                  |L1.920|
                          DCD      0x00124f80
                  |L1.924|
                          DCD      ||.data||
                  |L1.928|
                          DCD      ||area_number.4||
                  |L1.932|
                          DCD      RXBUFF

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  MCP2515_RXBUFF
                          %        40

                          AREA ||area_number.4||, DATA, NOINIT, ALIGN=0

                          EXPORTAS ||area_number.4||, ||.bss||
                  mcp2515_out_buff
                          %        64

                          AREA ||.data||, DATA, ALIGN=0

                  mcp2515_can_st
000000  00                DCB      0x00
                  mcp2515_can_st_old
000001  00                DCB      0x00
                  bMCP2515_IN
000002  00                DCB      0x00
                  mcp2515_buff_wr_ptr
000003  00                DCB      0x00
                  mcp2515_buff_rd_ptr
000004  00                DCB      0x00
