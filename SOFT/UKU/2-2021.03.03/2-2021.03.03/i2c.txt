; generated by ARM C/C++ Compiler with , RVCT4.0 [Build 524] for uVision
; commandline ArmCC [--debug -c --asm --interleave -oi2c.o --depend=i2c.d --feedback=UKU206.fed --device=DARMP --apcs=interwork -O3 -IC:\Keil\ARM\INC\Philips -D__MICROLIB --omf_browse=i2c.crf i2c.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  i2c_Start PROC
;;;21     //-----------------------------------------------
;;;22     void i2c_Start(void)
000000  e59f057c          LDR      r0,|L1.1412|
;;;23     {
;;;24                           // ensure clock is low 
;;;25     //SDA_HIGH()                     // ensure data is high 
;;;26     
;;;27     //delay_us(I2C_TM_DATA_SU);
;;;28     //SDA_HIGH()
;;;29     //SDA_HIGH()
;;;30     //SDA_HIGH()
;;;31     //SDA_HIGH()
;;;32     //SDA_HIGH()
;;;33     
;;;34     SDA_LOW()
000004  e3a01008          MOV      r1,#8
000008  e580100c          STR      r1,[r0,#0xc]
00000c  e5902008          LDR      r2,[r0,#8]
;;;35     SCL_HIGH()
000010  e3a01004          MOV      r1,#4
000014  e3822008          ORR      r2,r2,#8              ;34
000018  e5802008          STR      r2,[r0,#8]            ;34
00001c  e580100c          STR      r1,[r0,#0xc]
000020  e5902008          LDR      r2,[r0,#8]
000024  e3c22004          BIC      r2,r2,#4
000028  e5802008          STR      r2,[r0,#8]
;;;36     //delay_us(I2C_TM_SCL_HIGH);
;;;37     SCL_HIGH()
00002c  e580100c          STR      r1,[r0,#0xc]
000030  e5902008          LDR      r2,[r0,#8]
000034  e3c22004          BIC      r2,r2,#4
000038  e5802008          STR      r2,[r0,#8]
;;;38     SCL_HIGH()
00003c  e580100c          STR      r1,[r0,#0xc]
000040  e5902008          LDR      r2,[r0,#8]
000044  e3c22004          BIC      r2,r2,#4
000048  e5802008          STR      r2,[r0,#8]
;;;39     SCL_HIGH()
00004c  e580100c          STR      r1,[r0,#0xc]
000050  e5902008          LDR      r2,[r0,#8]
000054  e3c22004          BIC      r2,r2,#4
000058  e5802008          STR      r2,[r0,#8]
;;;40     SCL_HIGH()
00005c  e580100c          STR      r1,[r0,#0xc]
000060  e5902008          LDR      r2,[r0,#8]
000064  e3c22004          BIC      r2,r2,#4
000068  e5802008          STR      r2,[r0,#8]
;;;41     
;;;42     SCL_LOW()
00006c  e580100c          STR      r1,[r0,#0xc]
000070  e5902008          LDR      r2,[r0,#8]
000074  e3822004          ORR      r2,r2,#4
000078  e5802008          STR      r2,[r0,#8]
;;;43     SCL_LOW()
00007c  e580100c          STR      r1,[r0,#0xc]
000080  e5902008          LDR      r2,[r0,#8]
000084  e3822004          ORR      r2,r2,#4
000088  e5802008          STR      r2,[r0,#8]
;;;44     SCL_LOW()
00008c  e580100c          STR      r1,[r0,#0xc]
000090  e5902008          LDR      r2,[r0,#8]
000094  e3822004          ORR      r2,r2,#4
000098  e5802008          STR      r2,[r0,#8]
;;;45     SCL_LOW()                      // the high->low transition 
00009c  e580100c          STR      r1,[r0,#0xc]
0000a0  e5901008          LDR      r1,[r0,#8]
0000a4  e3811004          ORR      r1,r1,#4
0000a8  e5801008          STR      r1,[r0,#8]
;;;46     //delay_us(I2C_TM_START_HD);
;;;47     //SDA_LOW()
;;;48     //SDA_LOW()
;;;49     //SDA_LOW()
;;;50     return;
;;;51     }    
0000ac  e12fff1e          BX       lr
;;;52     
                          ENDP

                  i2c_Restart PROC
;;;53     //-----------------------------------------------
;;;54     void i2c_Restart(void)
0000b0  e59f04cc          LDR      r0,|L1.1412|
;;;55     {
;;;56     SCL_LOW()                      // ensure clock is low 
0000b4  e3a02004          MOV      r2,#4
0000b8  e580200c          STR      r2,[r0,#0xc]
0000bc  e5903008          LDR      r3,[r0,#8]
;;;57     SDA_HIGH()                     // ensure data is high 
0000c0  e3a01008          MOV      r1,#8
0000c4  e3833004          ORR      r3,r3,#4              ;56
0000c8  e5803008          STR      r3,[r0,#8]            ;56
0000cc  e580100c          STR      r1,[r0,#0xc]
0000d0  e5903008          LDR      r3,[r0,#8]
0000d4  e3c33008          BIC      r3,r3,#8
0000d8  e5803008          STR      r3,[r0,#8]
;;;58     
;;;59     //delay_us(I2C_TM_DATA_SU);
;;;60     SDA_HIGH()
0000dc  e580100c          STR      r1,[r0,#0xc]
0000e0  e5903008          LDR      r3,[r0,#8]
0000e4  e3c33008          BIC      r3,r3,#8
0000e8  e5803008          STR      r3,[r0,#8]
;;;61     SDA_HIGH()
0000ec  e580100c          STR      r1,[r0,#0xc]
0000f0  e5903008          LDR      r3,[r0,#8]
0000f4  e3c33008          BIC      r3,r3,#8
0000f8  e5803008          STR      r3,[r0,#8]
;;;62     SDA_HIGH()
0000fc  e580100c          STR      r1,[r0,#0xc]
000100  e5903008          LDR      r3,[r0,#8]
000104  e3c33008          BIC      r3,r3,#8
000108  e5803008          STR      r3,[r0,#8]
;;;63     SDA_HIGH()
00010c  e580100c          STR      r1,[r0,#0xc]
000110  e5903008          LDR      r3,[r0,#8]
000114  e3c33008          BIC      r3,r3,#8
000118  e5803008          STR      r3,[r0,#8]
;;;64     SDA_HIGH()
00011c  e580100c          STR      r1,[r0,#0xc]
000120  e5903008          LDR      r3,[r0,#8]
000124  e3c33008          BIC      r3,r3,#8
000128  e5803008          STR      r3,[r0,#8]
;;;65     
;;;66     
;;;67     SCL_HIGH()
00012c  e580200c          STR      r2,[r0,#0xc]
000130  e5903008          LDR      r3,[r0,#8]
000134  e3c33004          BIC      r3,r3,#4
000138  e5803008          STR      r3,[r0,#8]
;;;68     //delay_us(I2C_TM_SCL_HIGH);
;;;69     SCL_HIGH()
00013c  e580200c          STR      r2,[r0,#0xc]
000140  e5903008          LDR      r3,[r0,#8]
000144  e3c33004          BIC      r3,r3,#4
000148  e5803008          STR      r3,[r0,#8]
;;;70     SCL_HIGH()
00014c  e580200c          STR      r2,[r0,#0xc]
000150  e5903008          LDR      r3,[r0,#8]
000154  e3c33004          BIC      r3,r3,#4
000158  e5803008          STR      r3,[r0,#8]
;;;71     SCL_HIGH()
00015c  e580200c          STR      r2,[r0,#0xc]
000160  e5903008          LDR      r3,[r0,#8]
000164  e3c33004          BIC      r3,r3,#4
000168  e5803008          STR      r3,[r0,#8]
;;;72     SCL_HIGH()
00016c  e580200c          STR      r2,[r0,#0xc]
000170  e5902008          LDR      r2,[r0,#8]
000174  e3c22004          BIC      r2,r2,#4
000178  e5802008          STR      r2,[r0,#8]
;;;73     
;;;74     SDA_LOW()                      // the high->low transition 
00017c  e580100c          STR      r1,[r0,#0xc]
000180  e5902008          LDR      r2,[r0,#8]
000184  e3822008          ORR      r2,r2,#8
000188  e5802008          STR      r2,[r0,#8]
;;;75     //delay_us(I2C_TM_START_HD);
;;;76     SDA_LOW()
00018c  e580100c          STR      r1,[r0,#0xc]
000190  e5902008          LDR      r2,[r0,#8]
000194  e3822008          ORR      r2,r2,#8
000198  e5802008          STR      r2,[r0,#8]
;;;77     SDA_LOW()
00019c  e580100c          STR      r1,[r0,#0xc]
0001a0  e5902008          LDR      r2,[r0,#8]
0001a4  e3822008          ORR      r2,r2,#8
0001a8  e5802008          STR      r2,[r0,#8]
;;;78     SDA_LOW()
0001ac  e580100c          STR      r1,[r0,#0xc]
0001b0  e5901008          LDR      r1,[r0,#8]
0001b4  e3811008          ORR      r1,r1,#8
0001b8  e5801008          STR      r1,[r0,#8]
;;;79     return;
;;;80     }    
0001bc  e12fff1e          BX       lr
;;;81     
                          ENDP

                  i2c_SendByte PROC
;;;84     //-----------------------------------------------
;;;85     unsigned char i2c_SendByte(unsigned char byte)
0001c0  e59f13bc          LDR      r1,|L1.1412|
;;;86     {
;;;87     signed char i;
;;;88     SCL_LOW()
0001c4  e3a03004          MOV      r3,#4
0001c8  e52de004          PUSH     {lr}                  ;86
0001cc  e581300c          STR      r3,[r1,#0xc]
0001d0  e5912008          LDR      r2,[r1,#8]
0001d4  e3822004          ORR      r2,r2,#4
0001d8  e5812008          STR      r2,[r1,#8]
;;;89     //delay_us(I2C_TM_DATA_SU);
;;;90     SCL_LOW()
0001dc  e581300c          STR      r3,[r1,#0xc]
0001e0  e591c008          LDR      r12,[r1,#8]
;;;91     
;;;92     for(i=8; i>=1; i--)
0001e4  e3a02008          MOV      r2,#8
0001e8  e38cc004          ORR      r12,r12,#4            ;90
0001ec  e581c008          STR      r12,[r1,#8]           ;90
0001f0  e1a0c002          MOV      r12,r2
                  |L1.500|
;;;93     	{
;;;94          if(byte&0x80)
0001f4  e3100080          TST      r0,#0x80
;;;95              	{
;;;96              	SDA_HIGH()
0001f8  e581c00c          STR      r12,[r1,#0xc]
0001fc  e591e008          LDR      lr,[r1,#8]
;;;97              	}
;;;98          else
;;;99              	{
;;;100             	SDA_LOW()
000200  038ee008          ORREQ    lr,lr,#8
000204  13cee008          BICNE    lr,lr,#8              ;96
000208  e581e008          STR      lr,[r1,#8]
;;;101             	}
;;;102         //delay_us(I2C_TM_SCL_HIGH);
;;;103         byte<<=1;
00020c  e1a00c80          LSL      r0,r0,#25
000210  e1a00c20          LSR      r0,r0,#24
;;;104         SCL_HIGH()
000214  e581300c          STR      r3,[r1,#0xc]
000218  e591e008          LDR      lr,[r1,#8]
00021c  e3cee004          BIC      lr,lr,#4
000220  e581e008          STR      lr,[r1,#8]
;;;105         SCL_HIGH()
000224  e581300c          STR      r3,[r1,#0xc]
000228  e591e008          LDR      lr,[r1,#8]
00022c  e3cee004          BIC      lr,lr,#4
000230  e581e008          STR      lr,[r1,#8]
;;;106         SCL_HIGH()
000234  e581300c          STR      r3,[r1,#0xc]
000238  e591e008          LDR      lr,[r1,#8]
00023c  e3cee004          BIC      lr,lr,#4
000240  e581e008          STR      lr,[r1,#8]
;;;107         SCL_HIGH()
000244  e581300c          STR      r3,[r1,#0xc]
000248  e591e008          LDR      lr,[r1,#8]
00024c  e3cee004          BIC      lr,lr,#4
000250  e581e008          STR      lr,[r1,#8]
;;;108    	//delay_us(I2C_TM_DATA_SU);
;;;109    	SCL_LOW()
000254  e581300c          STR      r3,[r1,#0xc]
000258  e591e008          LDR      lr,[r1,#8]
00025c  e2422001          SUB      r2,r2,#1              ;92
000260  e38ee004          ORR      lr,lr,#4
000264  e581e008          STR      lr,[r1,#8]
000268  e1a02c02          LSL      r2,r2,#24             ;92
00026c  e1a02c42          ASR      r2,r2,#24             ;92
000270  e3520001          CMP      r2,#1                 ;92
000274  aaffffde          BGE      |L1.500|
;;;110    
;;;111    
;;;112    	//	DelayUs(I2C_TM_SCL_HIGH);	/* clock high time */
;;;113     	}
;;;114    
;;;115    SDA_HIGH()
000278  e581c00c          STR      r12,[r1,#0xc]
00027c  e5910008          LDR      r0,[r1,#8]
000280  e3c00008          BIC      r0,r0,#8
000284  e5810008          STR      r0,[r1,#8]
;;;116    return 0;
000288  e49de004          POP      {lr}
00028c  e3a00000          MOV      r0,#0
;;;117    }
000290  e12fff1e          BX       lr
;;;118    
                          ENDP

                  i2c_SendAddress PROC
;;;119    //-----------------------------------------------
;;;120    unsigned char i2c_SendAddress(unsigned char address, unsigned char rw)
000294  e2011001          AND      r1,r1,#1
;;;121    {
;;;122    return i2c_SendByte(address | (rw&0x01));
000298  e1800001          ORR      r0,r0,r1
00029c  eafffffe          B        i2c_SendByte
;;;123    } 
;;;124    
                          ENDP

                  i2c_ReadAcknowledge PROC
;;;126    //-----------------------------------------------
;;;127    signed char i2c_ReadAcknowledge(void)
0002a0  e59f02dc          LDR      r0,|L1.1412|
;;;128    {
;;;129    unsigned char ack;
;;;130    SDA_HIGH()
0002a4  e3a01008          MOV      r1,#8
0002a8  e580100c          STR      r1,[r0,#0xc]
0002ac  e5902008          LDR      r2,[r0,#8]
;;;131    SCL_LOW()
0002b0  e3a01004          MOV      r1,#4
0002b4  e3c22008          BIC      r2,r2,#8              ;130
0002b8  e5802008          STR      r2,[r0,#8]            ;130
0002bc  e580100c          STR      r1,[r0,#0xc]
0002c0  e5902008          LDR      r2,[r0,#8]
0002c4  e3822004          ORR      r2,r2,#4
0002c8  e5802008          STR      r2,[r0,#8]
;;;132    //delay_us(I2C_TM_SCL_TO_DATA);
;;;133    SCL_LOW()
0002cc  e580100c          STR      r1,[r0,#0xc]
0002d0  e5902008          LDR      r2,[r0,#8]
0002d4  e3822004          ORR      r2,r2,#4
0002d8  e5802008          STR      r2,[r0,#8]
;;;134    SCL_LOW()
0002dc  e580100c          STR      r1,[r0,#0xc]
0002e0  e5902008          LDR      r2,[r0,#8]
0002e4  e3822004          ORR      r2,r2,#4
0002e8  e5802008          STR      r2,[r0,#8]
;;;135    SCL_LOW()
0002ec  e580100c          STR      r1,[r0,#0xc]
0002f0  e5902008          LDR      r2,[r0,#8]
0002f4  e3822004          ORR      r2,r2,#4
0002f8  e5802008          STR      r2,[r0,#8]
;;;136    
;;;137    SCL_HIGH()                              /* make clock is low */
0002fc  e580100c          STR      r1,[r0,#0xc]
000300  e5902008          LDR      r2,[r0,#8]
000304  e3c22004          BIC      r2,r2,#4
000308  e5802008          STR      r2,[r0,#8]
;;;138    		/* disable data line - listen for ack */
;;;139    //delay_us(I2C_TM_SCL_TO_DATA);		/* SCL low to data out valid */
;;;140    SCL_HIGH()
00030c  e580100c          STR      r1,[r0,#0xc]
000310  e5902008          LDR      r2,[r0,#8]
000314  e3c22004          BIC      r2,r2,#4
000318  e5802008          STR      r2,[r0,#8]
;;;141    SCL_HIGH()
00031c  e580100c          STR      r1,[r0,#0xc]
000320  e5902008          LDR      r2,[r0,#8]
000324  e3c22004          BIC      r2,r2,#4
000328  e5802008          STR      r2,[r0,#8]
;;;142    SCL_HIGH()
00032c  e580100c          STR      r1,[r0,#0xc]
000330  e5902008          LDR      r2,[r0,#8]
000334  e3c22004          BIC      r2,r2,#4
000338  e5802008          STR      r2,[r0,#8]
;;;143    
;;;144    if(SDA_PIN) ack = 1;
00033c  e5902000          LDR      r2,[r0,#0]
;;;145    else ack = 0;
;;;146    
;;;147    SCL_LOW()		/* float clock high */
000340  e580100c          STR      r1,[r0,#0xc]
000344  e2122008          ANDS     r2,r2,#8              ;144
000348  13a02001          MOVNE    r2,#1                 ;144
00034c  e5901008          LDR      r1,[r0,#8]
000350  e3811004          ORR      r1,r1,#4
000354  e5801008          STR      r1,[r0,#8]
;;;148    //delay_us(I2C_TM_DATA_SU);
;;;149    					/* read the acknowledge */
;;;150    return	ack;				
000358  e1a00c02          LSL      r0,r2,#24
00035c  e1a00c40          ASR      r0,r0,#24
;;;151    }
000360  e12fff1e          BX       lr
;;;152    
                          ENDP

                  i2c_ReadByte PROC
;;;153    //-----------------------------------------------
;;;154    char i2c_ReadByte(void)
000364  e59f1218          LDR      r1,|L1.1412|
;;;155    {
;;;156    unsigned char i;
;;;157    unsigned char byte = 0;
;;;158    SDA_HIGH();
000368  e3a0c008          MOV      r12,#8
00036c  e52de004          PUSH     {lr}                  ;155
000370  e3a00000          MOV      r0,#0                 ;157
000374  e581c00c          STR      r12,[r1,#0xc]
000378  e5913008          LDR      r3,[r1,#8]
;;;159    for(i=0; i<8; i++)
00037c  e1a02000          MOV      r2,r0
000380  e3c33008          BIC      r3,r3,#8              ;158
000384  e5813008          STR      r3,[r1,#8]            ;158
;;;160    	{
;;;161    	                      /* drive clock low */
;;;162    	//delay_us(I2C_TM_SCL_LOW);	/* min clock low  period */
;;;163    	//SCL_LOW()
;;;164    	//SCL_LOW()
;;;165    	//SCL_LOW()
;;;166    	SCL_LOW()
000388  e3a03004          MOV      r3,#4
                  |L1.908|
00038c  e581300c          STR      r3,[r1,#0xc]
000390  e591e008          LDR      lr,[r1,#8]
000394  e38ee004          ORR      lr,lr,#4
000398  e581e008          STR      lr,[r1,#8]
;;;167    	SDA_HIGH();		/* release data line */
00039c  e581c00c          STR      r12,[r1,#0xc]
0003a0  e591e008          LDR      lr,[r1,#8]
0003a4  e3cee008          BIC      lr,lr,#8
0003a8  e581e008          STR      lr,[r1,#8]
;;;168    	//SCL_HIGH();		/* float clock high */
;;;169    	//delay_us(I2C_TM_SCL_HIGH);
;;;170    	//SCL_HIGH();
;;;171    	SCL_HIGH();
0003ac  e581300c          STR      r3,[r1,#0xc]
0003b0  e591e008          LDR      lr,[r1,#8]
0003b4  e3cee004          BIC      lr,lr,#4
0003b8  e581e008          STR      lr,[r1,#8]
;;;172    	SCL_HIGH();
0003bc  e581300c          STR      r3,[r1,#0xc]
0003c0  e591e008          LDR      lr,[r1,#8]
;;;173    	byte = byte << 1;		/* read the next bit */ 
0003c4  e1a00c80          LSL      r0,r0,#25
0003c8  e3cee004          BIC      lr,lr,#4              ;172
0003cc  e581e008          STR      lr,[r1,#8]            ;172
;;;174    	if(SDA_PIN) byte|=1;
0003d0  e591e000          LDR      lr,[r1,#0]
0003d4  e1a00c20          LSR      r0,r0,#24             ;173
0003d8  e31e0008          TST      lr,#8
;;;175    	else byte&=0xfe;
0003dc  020000fe          ANDEQ    r0,r0,#0xfe
0003e0  13800001          ORRNE    r0,r0,#1              ;174
;;;176    	SCL_LOW()
0003e4  e581300c          STR      r3,[r1,#0xc]
0003e8  e591e008          LDR      lr,[r1,#8]
0003ec  e2822001          ADD      r2,r2,#1              ;159
0003f0  e38ee004          ORR      lr,lr,#4
0003f4  e581e008          STR      lr,[r1,#8]
0003f8  e20220ff          AND      r2,r2,#0xff           ;159
0003fc  e3520008          CMP      r2,#8                 ;159
000400  3affffe1          BCC      |L1.908|
000404  e49de004          POP      {lr}                  ;159
;;;177    	}
;;;178    return byte;
;;;179    }
000408  e12fff1e          BX       lr
;;;180    
                          ENDP

                  i2c_SendAcknowledge PROC
;;;181    //-----------------------------------------------
;;;182    void i2c_SendAcknowledge(unsigned char status)
00040c  e59f1170          LDR      r1,|L1.1412|
;;;183    {
;;;184    
;;;185    SCL_LOW()
000410  e3a02004          MOV      r2,#4
000414  e581200c          STR      r2,[r1,#0xc]
000418  e5913008          LDR      r3,[r1,#8]
00041c  e3833004          ORR      r3,r3,#4
000420  e5813008          STR      r3,[r1,#8]
;;;186    SCL_LOW()
000424  e581200c          STR      r2,[r1,#0xc]
000428  e5913008          LDR      r3,[r1,#8]
;;;187    if(status&0x01)
00042c  e3100001          TST      r0,#1
000430  e3830004          ORR      r0,r3,#4              ;186
000434  e5810008          STR      r0,[r1,#8]            ;186
;;;188    	{
;;;189         SDA_LOW()                          /* drive line low -> more to come */
000438  e3a00008          MOV      r0,#8
00043c  e581000c          STR      r0,[r1,#0xc]
000440  e5910008          LDR      r0,[r1,#8]
;;;190         }
;;;191    else
;;;192    	{
;;;193         SDA_HIGH()
000444  03c00008          BICEQ    r0,r0,#8
000448  13800008          ORRNE    r0,r0,#8              ;189
00044c  e5810008          STR      r0,[r1,#8]
;;;194    	}
;;;195    //delay_us(I2C_TM_DATA_SU);
;;;196    SCL_HIGH()			/* float clock high */
000450  e581200c          STR      r2,[r1,#0xc]
000454  e5910008          LDR      r0,[r1,#8]
000458  e3c00004          BIC      r0,r0,#4
00045c  e5810008          STR      r0,[r1,#8]
;;;197    //delay_us(I2C_TM_SCL_HIGH);
;;;198    SCL_HIGH()
000460  e581200c          STR      r2,[r1,#0xc]
000464  e5910008          LDR      r0,[r1,#8]
000468  e3c00004          BIC      r0,r0,#4
00046c  e5810008          STR      r0,[r1,#8]
;;;199    SCL_HIGH()
000470  e581200c          STR      r2,[r1,#0xc]
000474  e5910008          LDR      r0,[r1,#8]
000478  e3c00004          BIC      r0,r0,#4
00047c  e5810008          STR      r0,[r1,#8]
;;;200    SCL_HIGH()
000480  e581200c          STR      r2,[r1,#0xc]
000484  e5910008          LDR      r0,[r1,#8]
000488  e3c00004          BIC      r0,r0,#4
00048c  e5810008          STR      r0,[r1,#8]
;;;201    SCL_LOW()
000490  e581200c          STR      r2,[r1,#0xc]
000494  e5910008          LDR      r0,[r1,#8]
000498  e3800004          ORR      r0,r0,#4
00049c  e5810008          STR      r0,[r1,#8]
;;;202    SCL_LOW()
0004a0  e581200c          STR      r2,[r1,#0xc]
0004a4  e5910008          LDR      r0,[r1,#8]
0004a8  e3800004          ORR      r0,r0,#4
0004ac  e5810008          STR      r0,[r1,#8]
;;;203    return;
;;;204    }
0004b0  e12fff1e          BX       lr
;;;205    
                          ENDP

                  i2c_Stop PROC
;;;206    //-----------------------------------------------
;;;207    void i2c_Stop(void)
0004b4  e59f00c8          LDR      r0,|L1.1412|
;;;208    {
;;;209    SDA_LOW()                      /* ensure data is low first */
0004b8  e3a01008          MOV      r1,#8
0004bc  e580100c          STR      r1,[r0,#0xc]
0004c0  e5903008          LDR      r3,[r0,#8]
;;;210    SCL_HIGH()
0004c4  e3a02004          MOV      r2,#4
0004c8  e3833008          ORR      r3,r3,#8              ;209
0004cc  e5803008          STR      r3,[r0,#8]            ;209
0004d0  e580200c          STR      r2,[r0,#0xc]
0004d4  e5903008          LDR      r3,[r0,#8]
0004d8  e3c33004          BIC      r3,r3,#4
0004dc  e5803008          STR      r3,[r0,#8]
;;;211    
;;;212    //delay_us(I2C_TM_DATA_SU);
;;;213    //SCL_DIR_INPUT()		/* float clock high */
;;;214    SCL_HIGH()
0004e0  e580200c          STR      r2,[r0,#0xc]
0004e4  e5903008          LDR      r3,[r0,#8]
0004e8  e3c33004          BIC      r3,r3,#4
0004ec  e5803008          STR      r3,[r0,#8]
;;;215    //delay_us(I2C_TM_STOP_SU);
;;;216    SCL_HIGH()
0004f0  e580200c          STR      r2,[r0,#0xc]
0004f4  e5903008          LDR      r3,[r0,#8]
0004f8  e3c33004          BIC      r3,r3,#4
0004fc  e5803008          STR      r3,[r0,#8]
;;;217    SCL_HIGH()
000500  e580200c          STR      r2,[r0,#0xc]
000504  e5903008          LDR      r3,[r0,#8]
000508  e3c33004          BIC      r3,r3,#4
00050c  e5803008          STR      r3,[r0,#8]
;;;218    SCL_HIGH()
000510  e580200c          STR      r2,[r0,#0xc]
000514  e5902008          LDR      r2,[r0,#8]
000518  e3c22004          BIC      r2,r2,#4
00051c  e5802008          STR      r2,[r0,#8]
;;;219    
;;;220    SDA_HIGH()                     /* the low->high data transistion */
000520  e580100c          STR      r1,[r0,#0xc]
000524  e5902008          LDR      r2,[r0,#8]
000528  e3c22008          BIC      r2,r2,#8
00052c  e5802008          STR      r2,[r0,#8]
;;;221    //delay_us(I2C_TM_BUS_FREE);	/* bus free time before next start */
;;;222    SDA_HIGH()
000530  e580100c          STR      r1,[r0,#0xc]
000534  e5902008          LDR      r2,[r0,#8]
000538  e3c22008          BIC      r2,r2,#8
00053c  e5802008          STR      r2,[r0,#8]
;;;223    SDA_HIGH()
000540  e580100c          STR      r1,[r0,#0xc]
000544  e5902008          LDR      r2,[r0,#8]
000548  e3c22008          BIC      r2,r2,#8
00054c  e5802008          STR      r2,[r0,#8]
;;;224    SDA_HIGH()
000550  e580100c          STR      r1,[r0,#0xc]
000554  e5902008          LDR      r2,[r0,#8]
000558  e3c22008          BIC      r2,r2,#8
00055c  e5802008          STR      r2,[r0,#8]
;;;225    SDA_HIGH()
000560  e580100c          STR      r1,[r0,#0xc]
000564  e5902008          LDR      r2,[r0,#8]
000568  e3c22008          BIC      r2,r2,#8
00056c  e5802008          STR      r2,[r0,#8]
;;;226    
;;;227    //SDA_DIR_INPUT()            /* float data high */
;;;228    SDA_HIGH()
000570  e580100c          STR      r1,[r0,#0xc]
000574  e5901008          LDR      r1,[r0,#8]
000578  e3c11008          BIC      r1,r1,#8
00057c  e5801008          STR      r1,[r0,#8]
;;;229    return;
;;;230    }
000580  e12fff1e          BX       lr
                          ENDP

                  |L1.1412|
                          DCD      0xe0028000
